<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1734" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1717.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1717.00"> </text><svg id="frames" x="10" width="1180" total_samples="250"><g><title>down_write_killable (2 samples, 0.80%)</title><rect x="0.0000%" y="1429" width="0.8000%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1439.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.80%)</title><rect x="0.0000%" y="1413" width="0.8000%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1423.50"></text></g><g><title>rwsem_optimistic_spin (2 samples, 0.80%)</title><rect x="0.0000%" y="1397" width="0.8000%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1407.50"></text></g><g><title>osq_lock (2 samples, 0.80%)</title><rect x="0.0000%" y="1381" width="0.8000%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1391.50"></text></g><g><title>__GI___mmap64 (3 samples, 1.20%)</title><rect x="0.0000%" y="1541" width="1.2000%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1551.50"></text></g><g><title>__GI___mmap64 (3 samples, 1.20%)</title><rect x="0.0000%" y="1525" width="1.2000%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1535.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 1.20%)</title><rect x="0.0000%" y="1509" width="1.2000%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1519.50"></text></g><g><title>do_syscall_64 (3 samples, 1.20%)</title><rect x="0.0000%" y="1493" width="1.2000%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1503.50"></text></g><g><title>__x64_sys_mmap (3 samples, 1.20%)</title><rect x="0.0000%" y="1477" width="1.2000%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1487.50"></text></g><g><title>ksys_mmap_pgoff (3 samples, 1.20%)</title><rect x="0.0000%" y="1461" width="1.2000%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1471.50"></text></g><g><title>vm_mmap_pgoff (3 samples, 1.20%)</title><rect x="0.0000%" y="1445" width="1.2000%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1455.50"></text></g><g><title>up_write (1 samples, 0.40%)</title><rect x="0.8000%" y="1429" width="0.4000%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="1.0500%" y="1439.50"></text></g><g><title>rwsem_wake.isra.0 (1 samples, 0.40%)</title><rect x="0.8000%" y="1413" width="0.4000%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="1.0500%" y="1423.50"></text></g><g><title>wake_up_q (1 samples, 0.40%)</title><rect x="0.8000%" y="1397" width="0.4000%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="1.0500%" y="1407.50"></text></g><g><title>try_to_wake_up (1 samples, 0.40%)</title><rect x="0.8000%" y="1381" width="0.4000%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="1.0500%" y="1391.50"></text></g><g><title>__clone3 (5 samples, 2.00%)</title><rect x="0.0000%" y="1653" width="2.0000%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1663.50">_..</text></g><g><title>start_thread (5 samples, 2.00%)</title><rect x="0.0000%" y="1637" width="2.0000%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1647.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 2.00%)</title><rect x="0.0000%" y="1621" width="2.0000%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1631.50">s..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 2.00%)</title><rect x="0.0000%" y="1605" width="2.0000%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1615.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 2.00%)</title><rect x="0.0000%" y="1589" width="2.0000%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1599.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 2.00%)</title><rect x="0.0000%" y="1573" width="2.0000%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1583.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 2.00%)</title><rect x="0.0000%" y="1557" width="2.0000%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1567.50">s..</text></g><g><title>__GI___mprotect (2 samples, 0.80%)</title><rect x="1.2000%" y="1541" width="0.8000%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1551.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.80%)</title><rect x="1.2000%" y="1525" width="0.8000%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1535.50"></text></g><g><title>do_syscall_64 (2 samples, 0.80%)</title><rect x="1.2000%" y="1509" width="0.8000%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1519.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.80%)</title><rect x="1.2000%" y="1493" width="0.8000%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1503.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.80%)</title><rect x="1.2000%" y="1477" width="0.8000%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1487.50"></text></g><g><title>down_write_killable (2 samples, 0.80%)</title><rect x="1.2000%" y="1461" width="0.8000%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1471.50"></text></g><g><title>rwsem_down_write_slowpath (2 samples, 0.80%)</title><rect x="1.2000%" y="1445" width="0.8000%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1455.50"></text></g><g><title>rwsem_optimistic_spin (2 samples, 0.80%)</title><rect x="1.2000%" y="1429" width="0.8000%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="2"/><text x="1.4500%" y="1439.50"></text></g><g><title>osq_lock (1 samples, 0.40%)</title><rect x="1.6000%" y="1413" width="0.4000%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="1.8500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::Runtime&gt; (1 samples, 0.40%)</title><rect x="2.0000%" y="1381" width="0.4000%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::Kind&gt; (1 samples, 0.40%)</title><rect x="2.0000%" y="1365" width="0.4000%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::ThreadPool&gt; (1 samples, 0.40%)</title><rect x="2.0000%" y="1349" width="0.4000%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::thread_pool::ThreadPool as core::ops::drop::Drop&gt;::drop (1 samples, 0.40%)</title><rect x="2.0000%" y="1333" width="0.4000%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::shutdown (1 samples, 0.40%)</title><rect x="2.0000%" y="1317" width="0.4000%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::close (1 samples, 0.40%)</title><rect x="2.0000%" y="1301" width="0.4000%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_all (1 samples, 0.40%)</title><rect x="2.0000%" y="1285" width="0.4000%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1295.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.40%)</title><rect x="2.0000%" y="1269" width="0.4000%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.40%)</title><rect x="2.0000%" y="1253" width="0.4000%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.40%)</title><rect x="2.0000%" y="1237" width="0.4000%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1247.50"></text></g><g><title>syscall (1 samples, 0.40%)</title><rect x="2.0000%" y="1221" width="0.4000%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1231.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="2.0000%" y="1205" width="0.4000%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1215.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="2.0000%" y="1189" width="0.4000%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1199.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="2.0000%" y="1173" width="0.4000%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1183.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="2.0000%" y="1157" width="0.4000%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1167.50"></text></g><g><title>futex_wake (1 samples, 0.40%)</title><rect x="2.0000%" y="1141" width="0.4000%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1151.50"></text></g><g><title>wake_up_q (1 samples, 0.40%)</title><rect x="2.0000%" y="1125" width="0.4000%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1135.50"></text></g><g><title>try_to_wake_up (1 samples, 0.40%)</title><rect x="2.0000%" y="1109" width="0.4000%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1119.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.40%)</title><rect x="2.0000%" y="1093" width="0.4000%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1103.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.40%)</title><rect x="2.0000%" y="1077" width="0.4000%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1087.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.40%)</title><rect x="2.0000%" y="1061" width="0.4000%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1071.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.40%)</title><rect x="2.0000%" y="1045" width="0.4000%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="2.2500%" y="1055.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.40%)</title><rect x="2.4000%" y="1333" width="0.4000%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1343.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (1 samples, 0.40%)</title><rect x="2.4000%" y="1317" width="0.4000%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::join (1 samples, 0.40%)</title><rect x="2.4000%" y="1301" width="0.4000%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1311.50"></text></g><g><title>__pthread_clockjoin_ex (1 samples, 0.40%)</title><rect x="2.4000%" y="1285" width="0.4000%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1295.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (1 samples, 0.40%)</title><rect x="2.4000%" y="1269" width="0.4000%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1279.50"></text></g><g><title>__futex_abstimed_wait_common (1 samples, 0.40%)</title><rect x="2.4000%" y="1253" width="0.4000%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1263.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.40%)</title><rect x="2.4000%" y="1237" width="0.4000%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1247.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="2.4000%" y="1221" width="0.4000%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1231.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="2.4000%" y="1205" width="0.4000%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1215.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="2.4000%" y="1189" width="0.4000%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1199.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="2.4000%" y="1173" width="0.4000%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1183.50"></text></g><g><title>futex_wait (1 samples, 0.40%)</title><rect x="2.4000%" y="1157" width="0.4000%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1167.50"></text></g><g><title>futex_wait_setup (1 samples, 0.40%)</title><rect x="2.4000%" y="1141" width="0.4000%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1151.50"></text></g><g><title>get_futex_key (1 samples, 0.40%)</title><rect x="2.4000%" y="1125" width="0.4000%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1135.50"></text></g><g><title>get_user_pages_fast (1 samples, 0.40%)</title><rect x="2.4000%" y="1109" width="0.4000%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1119.50"></text></g><g><title>internal_get_user_pages_fast (1 samples, 0.40%)</title><rect x="2.4000%" y="1093" width="0.4000%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1103.50"></text></g><g><title>lockless_pages_from_mm (1 samples, 0.40%)</title><rect x="2.4000%" y="1077" width="0.4000%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1087.50"></text></g><g><title>gup_pgd_range (1 samples, 0.40%)</title><rect x="2.4000%" y="1061" width="0.4000%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="1"/><text x="2.6500%" y="1071.50"></text></g><g><title>intel_pmu_enable_all (1 samples, 0.40%)</title><rect x="2.8000%" y="885" width="0.4000%" height="15" fill="rgb(244,35,45)" fg:x="7" fg:w="1"/><text x="3.0500%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (8 samples, 3.20%)</title><rect x="2.4000%" y="1381" width="3.2000%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="8"/><text x="2.6500%" y="1391.50">cor..</text></g><g><title>&lt;tokio::runtime::blocking::pool::BlockingPool as core::ops::drop::Drop&gt;::drop (8 samples, 3.20%)</title><rect x="2.4000%" y="1365" width="3.2000%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="8"/><text x="2.6500%" y="1375.50">&lt;to..</text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (8 samples, 3.20%)</title><rect x="2.4000%" y="1349" width="3.2000%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="8"/><text x="2.6500%" y="1359.50">tok..</text></g><g><title>tokio::runtime::blocking::shutdown::Receiver::wait (7 samples, 2.80%)</title><rect x="2.8000%" y="1333" width="2.8000%" height="15" fill="rgb(207,117,47)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1343.50">to..</text></g><g><title>tokio::runtime::enter::Enter::block_on (7 samples, 2.80%)</title><rect x="2.8000%" y="1317" width="2.8000%" height="15" fill="rgb(249,43,39)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1327.50">to..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (7 samples, 2.80%)</title><rect x="2.8000%" y="1301" width="2.8000%" height="15" fill="rgb(209,38,44)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1311.50">to..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (7 samples, 2.80%)</title><rect x="2.8000%" y="1285" width="2.8000%" height="15" fill="rgb(236,212,23)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1295.50">&lt;t..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (7 samples, 2.80%)</title><rect x="2.8000%" y="1269" width="2.8000%" height="15" fill="rgb(242,79,21)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1279.50">to..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 2.80%)</title><rect x="2.8000%" y="1253" width="2.8000%" height="15" fill="rgb(211,96,35)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1263.50">st..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (7 samples, 2.80%)</title><rect x="2.8000%" y="1237" width="2.8000%" height="15" fill="rgb(253,215,40)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1247.50">to..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (7 samples, 2.80%)</title><rect x="2.8000%" y="1221" width="2.8000%" height="15" fill="rgb(211,81,21)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1231.50">&lt;t..</text></g><g><title>tokio::park::thread::Inner::park (7 samples, 2.80%)</title><rect x="2.8000%" y="1205" width="2.8000%" height="15" fill="rgb(208,190,38)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1215.50">to..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (7 samples, 2.80%)</title><rect x="2.8000%" y="1189" width="2.8000%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1199.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait (7 samples, 2.80%)</title><rect x="2.8000%" y="1173" width="2.8000%" height="15" fill="rgb(237,122,38)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1183.50">pa..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (7 samples, 2.80%)</title><rect x="2.8000%" y="1157" width="2.8000%" height="15" fill="rgb(244,218,35)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1167.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 2.80%)</title><rect x="2.8000%" y="1141" width="2.8000%" height="15" fill="rgb(240,68,47)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1151.50">pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 2.80%)</title><rect x="2.8000%" y="1125" width="2.8000%" height="15" fill="rgb(210,16,53)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1135.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (7 samples, 2.80%)</title><rect x="2.8000%" y="1109" width="2.8000%" height="15" fill="rgb(235,124,12)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1119.50">pa..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (7 samples, 2.80%)</title><rect x="2.8000%" y="1093" width="2.8000%" height="15" fill="rgb(224,169,11)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1103.50">&lt;p..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (7 samples, 2.80%)</title><rect x="2.8000%" y="1077" width="2.8000%" height="15" fill="rgb(250,166,2)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1087.50">pa..</text></g><g><title>syscall (7 samples, 2.80%)</title><rect x="2.8000%" y="1061" width="2.8000%" height="15" fill="rgb(242,216,29)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1071.50">sy..</text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 2.80%)</title><rect x="2.8000%" y="1045" width="2.8000%" height="15" fill="rgb(230,116,27)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1055.50">en..</text></g><g><title>do_syscall_64 (7 samples, 2.80%)</title><rect x="2.8000%" y="1029" width="2.8000%" height="15" fill="rgb(228,99,48)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1039.50">do..</text></g><g><title>__x64_sys_futex (7 samples, 2.80%)</title><rect x="2.8000%" y="1013" width="2.8000%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1023.50">__..</text></g><g><title>do_futex (7 samples, 2.80%)</title><rect x="2.8000%" y="997" width="2.8000%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="7"/><text x="3.0500%" y="1007.50">do..</text></g><g><title>futex_wait (7 samples, 2.80%)</title><rect x="2.8000%" y="981" width="2.8000%" height="15" fill="rgb(236,97,10)" fg:x="7" fg:w="7"/><text x="3.0500%" y="991.50">fu..</text></g><g><title>futex_wait_queue_me (7 samples, 2.80%)</title><rect x="2.8000%" y="965" width="2.8000%" height="15" fill="rgb(233,208,19)" fg:x="7" fg:w="7"/><text x="3.0500%" y="975.50">fu..</text></g><g><title>schedule (7 samples, 2.80%)</title><rect x="2.8000%" y="949" width="2.8000%" height="15" fill="rgb(216,164,2)" fg:x="7" fg:w="7"/><text x="3.0500%" y="959.50">sc..</text></g><g><title>__schedule (7 samples, 2.80%)</title><rect x="2.8000%" y="933" width="2.8000%" height="15" fill="rgb(220,129,5)" fg:x="7" fg:w="7"/><text x="3.0500%" y="943.50">__..</text></g><g><title>finish_task_switch.isra.0 (7 samples, 2.80%)</title><rect x="2.8000%" y="917" width="2.8000%" height="15" fill="rgb(242,17,10)" fg:x="7" fg:w="7"/><text x="3.0500%" y="927.50">fi..</text></g><g><title>__perf_event_task_sched_in (7 samples, 2.80%)</title><rect x="2.8000%" y="901" width="2.8000%" height="15" fill="rgb(242,107,0)" fg:x="7" fg:w="7"/><text x="3.0500%" y="911.50">__..</text></g><g><title>x86_pmu_enable (6 samples, 2.40%)</title><rect x="3.2000%" y="885" width="2.4000%" height="15" fill="rgb(251,28,31)" fg:x="8" fg:w="6"/><text x="3.4500%" y="895.50">x8..</text></g><g><title>intel_pmu_enable_all (6 samples, 2.40%)</title><rect x="3.2000%" y="869" width="2.4000%" height="15" fill="rgb(233,223,10)" fg:x="8" fg:w="6"/><text x="3.4500%" y="879.50">in..</text></g><g><title>native_write_msr (6 samples, 2.40%)</title><rect x="3.2000%" y="853" width="2.4000%" height="15" fill="rgb(215,21,27)" fg:x="8" fg:w="6"/><text x="3.4500%" y="863.50">na..</text></g><g><title>__libc_start_main_impl (17 samples, 6.80%)</title><rect x="2.0000%" y="1637" width="6.8000%" height="15" fill="rgb(232,23,21)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1647.50">__libc_st..</text></g><g><title>__libc_start_call_main (17 samples, 6.80%)</title><rect x="2.0000%" y="1621" width="6.8000%" height="15" fill="rgb(244,5,23)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1631.50">__libc_st..</text></g><g><title>main (17 samples, 6.80%)</title><rect x="2.0000%" y="1605" width="6.8000%" height="15" fill="rgb(226,81,46)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1615.50">main</text></g><g><title>std::rt::lang_start_internal (17 samples, 6.80%)</title><rect x="2.0000%" y="1589" width="6.8000%" height="15" fill="rgb(247,70,30)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1599.50">std::rt::..</text></g><g><title>std::panic::catch_unwind (17 samples, 6.80%)</title><rect x="2.0000%" y="1573" width="6.8000%" height="15" fill="rgb(212,68,19)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1583.50">std::pani..</text></g><g><title>std::panicking::try (17 samples, 6.80%)</title><rect x="2.0000%" y="1557" width="6.8000%" height="15" fill="rgb(240,187,13)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1567.50">std::pani..</text></g><g><title>std::panicking::try::do_call (17 samples, 6.80%)</title><rect x="2.0000%" y="1541" width="6.8000%" height="15" fill="rgb(223,113,26)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1551.50">std::pani..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17 samples, 6.80%)</title><rect x="2.0000%" y="1525" width="6.8000%" height="15" fill="rgb(206,192,2)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1535.50">std::rt::..</text></g><g><title>std::panic::catch_unwind (17 samples, 6.80%)</title><rect x="2.0000%" y="1509" width="6.8000%" height="15" fill="rgb(241,108,4)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1519.50">std::pani..</text></g><g><title>std::panicking::try (17 samples, 6.80%)</title><rect x="2.0000%" y="1493" width="6.8000%" height="15" fill="rgb(247,173,49)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1503.50">std::pani..</text></g><g><title>std::panicking::try::do_call (17 samples, 6.80%)</title><rect x="2.0000%" y="1477" width="6.8000%" height="15" fill="rgb(224,114,35)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1487.50">std::pani..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 6.80%)</title><rect x="2.0000%" y="1461" width="6.8000%" height="15" fill="rgb(245,159,27)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1471.50">core::ops..</text></g><g><title>std::rt::lang_start::{{closure}} (17 samples, 6.80%)</title><rect x="2.0000%" y="1445" width="6.8000%" height="15" fill="rgb(245,172,44)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1455.50">std::rt::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 6.80%)</title><rect x="2.0000%" y="1429" width="6.8000%" height="15" fill="rgb(236,23,11)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1439.50">std::sys_..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 6.80%)</title><rect x="2.0000%" y="1413" width="6.8000%" height="15" fill="rgb(205,117,38)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1423.50">core::ops..</text></g><g><title>async_request_tasks::main (17 samples, 6.80%)</title><rect x="2.0000%" y="1397" width="6.8000%" height="15" fill="rgb(237,72,25)" fg:x="5" fg:w="17"/><text x="2.2500%" y="1407.50">async_req..</text></g><g><title>tokio::runtime::Runtime::block_on (8 samples, 3.20%)</title><rect x="5.6000%" y="1381" width="3.2000%" height="15" fill="rgb(244,70,9)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1391.50">tok..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (8 samples, 3.20%)</title><rect x="5.6000%" y="1365" width="3.2000%" height="15" fill="rgb(217,125,39)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1375.50">tok..</text></g><g><title>tokio::runtime::enter::Enter::block_on (8 samples, 3.20%)</title><rect x="5.6000%" y="1349" width="3.2000%" height="15" fill="rgb(235,36,10)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1359.50">tok..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (8 samples, 3.20%)</title><rect x="5.6000%" y="1333" width="3.2000%" height="15" fill="rgb(251,123,47)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1343.50">tok..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (8 samples, 3.20%)</title><rect x="5.6000%" y="1317" width="3.2000%" height="15" fill="rgb(221,13,13)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1327.50">&lt;to..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (8 samples, 3.20%)</title><rect x="5.6000%" y="1301" width="3.2000%" height="15" fill="rgb(238,131,9)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1311.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 3.20%)</title><rect x="5.6000%" y="1285" width="3.2000%" height="15" fill="rgb(211,50,8)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1295.50">std..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (8 samples, 3.20%)</title><rect x="5.6000%" y="1269" width="3.2000%" height="15" fill="rgb(245,182,24)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1279.50">tok..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (8 samples, 3.20%)</title><rect x="5.6000%" y="1253" width="3.2000%" height="15" fill="rgb(242,14,37)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1263.50">&lt;to..</text></g><g><title>tokio::park::thread::Inner::park (8 samples, 3.20%)</title><rect x="5.6000%" y="1237" width="3.2000%" height="15" fill="rgb(246,228,12)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1247.50">tok..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (8 samples, 3.20%)</title><rect x="5.6000%" y="1221" width="3.2000%" height="15" fill="rgb(213,55,15)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1231.50">tok..</text></g><g><title>parking_lot::condvar::Condvar::wait (8 samples, 3.20%)</title><rect x="5.6000%" y="1205" width="3.2000%" height="15" fill="rgb(209,9,3)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1215.50">par..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (8 samples, 3.20%)</title><rect x="5.6000%" y="1189" width="3.2000%" height="15" fill="rgb(230,59,30)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1199.50">par..</text></g><g><title>parking_lot_core::parking_lot::park (8 samples, 3.20%)</title><rect x="5.6000%" y="1173" width="3.2000%" height="15" fill="rgb(209,121,21)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1183.50">par..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (8 samples, 3.20%)</title><rect x="5.6000%" y="1157" width="3.2000%" height="15" fill="rgb(220,109,13)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1167.50">par..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (8 samples, 3.20%)</title><rect x="5.6000%" y="1141" width="3.2000%" height="15" fill="rgb(232,18,1)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1151.50">par..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (8 samples, 3.20%)</title><rect x="5.6000%" y="1125" width="3.2000%" height="15" fill="rgb(215,41,42)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1135.50">&lt;pa..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (8 samples, 3.20%)</title><rect x="5.6000%" y="1109" width="3.2000%" height="15" fill="rgb(224,123,36)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1119.50">par..</text></g><g><title>syscall (8 samples, 3.20%)</title><rect x="5.6000%" y="1093" width="3.2000%" height="15" fill="rgb(240,125,3)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1103.50">sys..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 3.20%)</title><rect x="5.6000%" y="1077" width="3.2000%" height="15" fill="rgb(205,98,50)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1087.50">ent..</text></g><g><title>do_syscall_64 (8 samples, 3.20%)</title><rect x="5.6000%" y="1061" width="3.2000%" height="15" fill="rgb(205,185,37)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1071.50">do_..</text></g><g><title>__x64_sys_futex (8 samples, 3.20%)</title><rect x="5.6000%" y="1045" width="3.2000%" height="15" fill="rgb(238,207,15)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1055.50">__x..</text></g><g><title>do_futex (8 samples, 3.20%)</title><rect x="5.6000%" y="1029" width="3.2000%" height="15" fill="rgb(213,199,42)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1039.50">do_..</text></g><g><title>futex_wait (8 samples, 3.20%)</title><rect x="5.6000%" y="1013" width="3.2000%" height="15" fill="rgb(235,201,11)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1023.50">fut..</text></g><g><title>futex_wait_queue_me (8 samples, 3.20%)</title><rect x="5.6000%" y="997" width="3.2000%" height="15" fill="rgb(207,46,11)" fg:x="14" fg:w="8"/><text x="5.8500%" y="1007.50">fut..</text></g><g><title>schedule (8 samples, 3.20%)</title><rect x="5.6000%" y="981" width="3.2000%" height="15" fill="rgb(241,35,35)" fg:x="14" fg:w="8"/><text x="5.8500%" y="991.50">sch..</text></g><g><title>__schedule (8 samples, 3.20%)</title><rect x="5.6000%" y="965" width="3.2000%" height="15" fill="rgb(243,32,47)" fg:x="14" fg:w="8"/><text x="5.8500%" y="975.50">__s..</text></g><g><title>finish_task_switch.isra.0 (8 samples, 3.20%)</title><rect x="5.6000%" y="949" width="3.2000%" height="15" fill="rgb(247,202,23)" fg:x="14" fg:w="8"/><text x="5.8500%" y="959.50">fin..</text></g><g><title>__perf_event_task_sched_in (8 samples, 3.20%)</title><rect x="5.6000%" y="933" width="3.2000%" height="15" fill="rgb(219,102,11)" fg:x="14" fg:w="8"/><text x="5.8500%" y="943.50">__p..</text></g><g><title>x86_pmu_enable (8 samples, 3.20%)</title><rect x="5.6000%" y="917" width="3.2000%" height="15" fill="rgb(243,110,44)" fg:x="14" fg:w="8"/><text x="5.8500%" y="927.50">x86..</text></g><g><title>intel_pmu_enable_all (8 samples, 3.20%)</title><rect x="5.6000%" y="901" width="3.2000%" height="15" fill="rgb(222,74,54)" fg:x="14" fg:w="8"/><text x="5.8500%" y="911.50">int..</text></g><g><title>native_write_msr (8 samples, 3.20%)</title><rect x="5.6000%" y="885" width="3.2000%" height="15" fill="rgb(216,99,12)" fg:x="14" fg:w="8"/><text x="5.8500%" y="895.50">nat..</text></g><g><title>_start (18 samples, 7.20%)</title><rect x="2.0000%" y="1653" width="7.2000%" height="15" fill="rgb(226,22,26)" fg:x="5" fg:w="18"/><text x="2.2500%" y="1663.50">_start</text></g><g><title>_dl_start (1 samples, 0.40%)</title><rect x="8.8000%" y="1637" width="0.4000%" height="15" fill="rgb(217,163,10)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1647.50"></text></g><g><title>_dl_start_final (1 samples, 0.40%)</title><rect x="8.8000%" y="1621" width="0.4000%" height="15" fill="rgb(213,25,53)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1631.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.40%)</title><rect x="8.8000%" y="1605" width="0.4000%" height="15" fill="rgb(252,105,26)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1615.50"></text></g><g><title>dl_main (1 samples, 0.40%)</title><rect x="8.8000%" y="1589" width="0.4000%" height="15" fill="rgb(220,39,43)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1599.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.40%)</title><rect x="8.8000%" y="1573" width="0.4000%" height="15" fill="rgb(229,68,48)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1583.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.40%)</title><rect x="8.8000%" y="1557" width="0.4000%" height="15" fill="rgb(252,8,32)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1567.50"></text></g><g><title>elf_machine_rela (1 samples, 0.40%)</title><rect x="8.8000%" y="1541" width="0.4000%" height="15" fill="rgb(223,20,43)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1551.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.40%)</title><rect x="8.8000%" y="1525" width="0.4000%" height="15" fill="rgb(229,81,49)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1535.50"></text></g><g><title>do_lookup_x (1 samples, 0.40%)</title><rect x="8.8000%" y="1509" width="0.4000%" height="15" fill="rgb(236,28,36)" fg:x="22" fg:w="1"/><text x="9.0500%" y="1519.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.40%)</title><rect x="9.2000%" y="1621" width="0.4000%" height="15" fill="rgb(249,185,26)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1631.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.40%)</title><rect x="9.2000%" y="1605" width="0.4000%" height="15" fill="rgb(249,174,33)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1615.50"></text></g><g><title>bprm_execve (1 samples, 0.40%)</title><rect x="9.2000%" y="1589" width="0.4000%" height="15" fill="rgb(233,201,37)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1599.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.40%)</title><rect x="9.2000%" y="1573" width="0.4000%" height="15" fill="rgb(221,78,26)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1583.50"></text></g><g><title>exec_binprm (1 samples, 0.40%)</title><rect x="9.2000%" y="1557" width="0.4000%" height="15" fill="rgb(250,127,30)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1567.50"></text></g><g><title>search_binary_handler (1 samples, 0.40%)</title><rect x="9.2000%" y="1541" width="0.4000%" height="15" fill="rgb(230,49,44)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1551.50"></text></g><g><title>load_elf_binary (1 samples, 0.40%)</title><rect x="9.2000%" y="1525" width="0.4000%" height="15" fill="rgb(229,67,23)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1535.50"></text></g><g><title>elf_map (1 samples, 0.40%)</title><rect x="9.2000%" y="1509" width="0.4000%" height="15" fill="rgb(249,83,47)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1519.50"></text></g><g><title>vm_munmap (1 samples, 0.40%)</title><rect x="9.2000%" y="1493" width="0.4000%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1503.50"></text></g><g><title>__vm_munmap (1 samples, 0.40%)</title><rect x="9.2000%" y="1477" width="0.4000%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1487.50"></text></g><g><title>__do_munmap (1 samples, 0.40%)</title><rect x="9.2000%" y="1461" width="0.4000%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1471.50"></text></g><g><title>find_vma (1 samples, 0.40%)</title><rect x="9.2000%" y="1445" width="0.4000%" height="15" fill="rgb(233,0,4)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1455.50"></text></g><g><title>vmacache_find (1 samples, 0.40%)</title><rect x="9.2000%" y="1429" width="0.4000%" height="15" fill="rgb(235,30,7)" fg:x="23" fg:w="1"/><text x="9.4500%" y="1439.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.40%)</title><rect x="9.6000%" y="1525" width="0.4000%" height="15" fill="rgb(250,79,13)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1535.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.40%)</title><rect x="9.6000%" y="1509" width="0.4000%" height="15" fill="rgb(211,146,34)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1519.50"></text></g><g><title>release_pages (1 samples, 0.40%)</title><rect x="9.6000%" y="1493" width="0.4000%" height="15" fill="rgb(228,22,38)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1503.50"></text></g><g><title>free_unref_page_list (1 samples, 0.40%)</title><rect x="9.6000%" y="1477" width="0.4000%" height="15" fill="rgb(235,168,5)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1487.50"></text></g><g><title>free_unref_page_commit.constprop.0 (1 samples, 0.40%)</title><rect x="9.6000%" y="1461" width="0.4000%" height="15" fill="rgb(221,155,16)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1471.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.40%)</title><rect x="9.6000%" y="1445" width="0.4000%" height="15" fill="rgb(215,215,53)" fg:x="24" fg:w="1"/><text x="9.8500%" y="1455.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 1.20%)</title><rect x="9.2000%" y="1653" width="1.2000%" height="15" fill="rgb(223,4,10)" fg:x="23" fg:w="3"/><text x="9.4500%" y="1663.50"></text></g><g><title>do_syscall_64 (3 samples, 1.20%)</title><rect x="9.2000%" y="1637" width="1.2000%" height="15" fill="rgb(234,103,6)" fg:x="23" fg:w="3"/><text x="9.4500%" y="1647.50"></text></g><g><title>__x64_sys_exit_group (2 samples, 0.80%)</title><rect x="9.6000%" y="1621" width="0.8000%" height="15" fill="rgb(227,97,0)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1631.50"></text></g><g><title>do_group_exit (2 samples, 0.80%)</title><rect x="9.6000%" y="1605" width="0.8000%" height="15" fill="rgb(234,150,53)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1615.50"></text></g><g><title>do_exit (2 samples, 0.80%)</title><rect x="9.6000%" y="1589" width="0.8000%" height="15" fill="rgb(228,201,54)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1599.50"></text></g><g><title>exit_mm (2 samples, 0.80%)</title><rect x="9.6000%" y="1573" width="0.8000%" height="15" fill="rgb(222,22,37)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1583.50"></text></g><g><title>mmput (2 samples, 0.80%)</title><rect x="9.6000%" y="1557" width="0.8000%" height="15" fill="rgb(237,53,32)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1567.50"></text></g><g><title>exit_mmap (2 samples, 0.80%)</title><rect x="9.6000%" y="1541" width="0.8000%" height="15" fill="rgb(233,25,53)" fg:x="24" fg:w="2"/><text x="9.8500%" y="1551.50"></text></g><g><title>unmap_vmas (1 samples, 0.40%)</title><rect x="10.0000%" y="1525" width="0.4000%" height="15" fill="rgb(210,40,34)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1535.50"></text></g><g><title>unmap_single_vma (1 samples, 0.40%)</title><rect x="10.0000%" y="1509" width="0.4000%" height="15" fill="rgb(241,220,44)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1519.50"></text></g><g><title>unmap_page_range (1 samples, 0.40%)</title><rect x="10.0000%" y="1493" width="0.4000%" height="15" fill="rgb(235,28,35)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1503.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.40%)</title><rect x="10.0000%" y="1477" width="0.4000%" height="15" fill="rgb(210,56,17)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1487.50"></text></g><g><title>zap_pte_range (1 samples, 0.40%)</title><rect x="10.0000%" y="1461" width="0.4000%" height="15" fill="rgb(224,130,29)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1471.50"></text></g><g><title>mark_page_accessed (1 samples, 0.40%)</title><rect x="10.0000%" y="1445" width="0.4000%" height="15" fill="rgb(235,212,8)" fg:x="25" fg:w="1"/><text x="10.2500%" y="1455.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.40%)</title><rect x="10.4000%" y="1621" width="0.4000%" height="15" fill="rgb(223,33,50)" fg:x="26" fg:w="1"/><text x="10.6500%" y="1631.50"></text></g><g><title>calculate_sigpending (1 samples, 0.40%)</title><rect x="10.8000%" y="1621" width="0.4000%" height="15" fill="rgb(219,149,13)" fg:x="27" fg:w="1"/><text x="11.0500%" y="1631.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.40%)</title><rect x="10.8000%" y="1605" width="0.4000%" height="15" fill="rgb(250,156,29)" fg:x="27" fg:w="1"/><text x="11.0500%" y="1615.50"></text></g><g><title>schedule_tail (39 samples, 15.60%)</title><rect x="10.4000%" y="1637" width="15.6000%" height="15" fill="rgb(216,193,19)" fg:x="26" fg:w="39"/><text x="10.6500%" y="1647.50">schedule_tail</text></g><g><title>finish_task_switch.isra.0 (37 samples, 14.80%)</title><rect x="11.2000%" y="1621" width="14.8000%" height="15" fill="rgb(216,135,14)" fg:x="28" fg:w="37"/><text x="11.4500%" y="1631.50">finish_task_switch.isra..</text></g><g><title>__perf_event_task_sched_in (35 samples, 14.00%)</title><rect x="12.0000%" y="1605" width="14.0000%" height="15" fill="rgb(241,47,5)" fg:x="30" fg:w="35"/><text x="12.2500%" y="1615.50">__perf_event_task_sch..</text></g><g><title>x86_pmu_enable (34 samples, 13.60%)</title><rect x="12.4000%" y="1589" width="13.6000%" height="15" fill="rgb(233,42,35)" fg:x="31" fg:w="34"/><text x="12.6500%" y="1599.50">x86_pmu_enable</text></g><g><title>intel_pmu_enable_all (34 samples, 13.60%)</title><rect x="12.4000%" y="1573" width="13.6000%" height="15" fill="rgb(231,13,6)" fg:x="31" fg:w="34"/><text x="12.6500%" y="1583.50">intel_pmu_enable_all</text></g><g><title>native_write_msr (34 samples, 13.60%)</title><rect x="12.4000%" y="1557" width="13.6000%" height="15" fill="rgb(207,181,40)" fg:x="31" fg:w="34"/><text x="12.6500%" y="1567.50">native_write_msr</text></g><g><title>async_request_t (66 samples, 26.40%)</title><rect x="0.0000%" y="1669" width="26.4000%" height="15" fill="rgb(254,173,49)" fg:x="0" fg:w="66"/><text x="0.2500%" y="1679.50">async_request_t</text></g><g><title>ret_from_fork (40 samples, 16.00%)</title><rect x="10.4000%" y="1653" width="16.0000%" height="15" fill="rgb(221,1,38)" fg:x="26" fg:w="40"/><text x="10.6500%" y="1663.50">ret_from_fork</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.40%)</title><rect x="26.0000%" y="1637" width="0.4000%" height="15" fill="rgb(206,124,46)" fg:x="65" fg:w="1"/><text x="26.2500%" y="1647.50"></text></g><g><title>switch_fpu_return (1 samples, 0.40%)</title><rect x="26.0000%" y="1621" width="0.4000%" height="15" fill="rgb(249,21,11)" fg:x="65" fg:w="1"/><text x="26.2500%" y="1631.50"></text></g><g><title>perf-exec (5 samples, 2.00%)</title><rect x="26.4000%" y="1669" width="2.0000%" height="15" fill="rgb(222,201,40)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1679.50">p..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.00%)</title><rect x="26.4000%" y="1653" width="2.0000%" height="15" fill="rgb(235,61,29)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1663.50">e..</text></g><g><title>do_syscall_64 (5 samples, 2.00%)</title><rect x="26.4000%" y="1637" width="2.0000%" height="15" fill="rgb(219,207,3)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1647.50">d..</text></g><g><title>__x64_sys_execve (5 samples, 2.00%)</title><rect x="26.4000%" y="1621" width="2.0000%" height="15" fill="rgb(222,56,46)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1631.50">_..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 2.00%)</title><rect x="26.4000%" y="1605" width="2.0000%" height="15" fill="rgb(239,76,54)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1615.50">d..</text></g><g><title>bprm_execve (5 samples, 2.00%)</title><rect x="26.4000%" y="1589" width="2.0000%" height="15" fill="rgb(231,124,27)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1599.50">b..</text></g><g><title>bprm_execve.part.0 (5 samples, 2.00%)</title><rect x="26.4000%" y="1573" width="2.0000%" height="15" fill="rgb(249,195,6)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1583.50">b..</text></g><g><title>exec_binprm (5 samples, 2.00%)</title><rect x="26.4000%" y="1557" width="2.0000%" height="15" fill="rgb(237,174,47)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1567.50">e..</text></g><g><title>search_binary_handler (5 samples, 2.00%)</title><rect x="26.4000%" y="1541" width="2.0000%" height="15" fill="rgb(206,201,31)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1551.50">s..</text></g><g><title>load_elf_binary (5 samples, 2.00%)</title><rect x="26.4000%" y="1525" width="2.0000%" height="15" fill="rgb(231,57,52)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1535.50">l..</text></g><g><title>begin_new_exec (5 samples, 2.00%)</title><rect x="26.4000%" y="1509" width="2.0000%" height="15" fill="rgb(248,177,22)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1519.50">b..</text></g><g><title>perf_event_exec (5 samples, 2.00%)</title><rect x="26.4000%" y="1493" width="2.0000%" height="15" fill="rgb(215,211,37)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1503.50">p..</text></g><g><title>ctx_resched (5 samples, 2.00%)</title><rect x="26.4000%" y="1477" width="2.0000%" height="15" fill="rgb(241,128,51)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1487.50">c..</text></g><g><title>x86_pmu_enable (5 samples, 2.00%)</title><rect x="26.4000%" y="1461" width="2.0000%" height="15" fill="rgb(227,165,31)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1471.50">x..</text></g><g><title>intel_pmu_enable_all (5 samples, 2.00%)</title><rect x="26.4000%" y="1445" width="2.0000%" height="15" fill="rgb(228,167,24)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1455.50">i..</text></g><g><title>native_write_msr (5 samples, 2.00%)</title><rect x="26.4000%" y="1429" width="2.0000%" height="15" fill="rgb(228,143,12)" fg:x="66" fg:w="5"/><text x="26.6500%" y="1439.50">n..</text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="28.4000%" y="1653" width="0.4000%" height="15" fill="rgb(249,149,8)" fg:x="71" fg:w="1"/><text x="28.6500%" y="1663.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="28.4000%" y="1637" width="0.4000%" height="15" fill="rgb(243,35,44)" fg:x="71" fg:w="1"/><text x="28.6500%" y="1647.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="28.8000%" y="1637" width="0.4000%" height="15" fill="rgb(246,89,9)" fg:x="72" fg:w="1"/><text x="29.0500%" y="1647.50"></text></g><g><title>[unknown] (3 samples, 1.20%)</title><rect x="28.8000%" y="1653" width="1.2000%" height="15" fill="rgb(233,213,13)" fg:x="72" fg:w="3"/><text x="29.0500%" y="1663.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="29.2000%" y="1637" width="0.8000%" height="15" fill="rgb(233,141,41)" fg:x="73" fg:w="2"/><text x="29.4500%" y="1647.50"></text></g><g><title>__malloc_arena_thread_freeres (2 samples, 0.80%)</title><rect x="30.0000%" y="1621" width="0.8000%" height="15" fill="rgb(239,167,4)" fg:x="75" fg:w="2"/><text x="30.2500%" y="1631.50"></text></g><g><title>tcache_thread_shutdown (2 samples, 0.80%)</title><rect x="30.0000%" y="1605" width="0.8000%" height="15" fill="rgb(209,217,16)" fg:x="75" fg:w="2"/><text x="30.2500%" y="1615.50"></text></g><g><title>__GI___libc_free (2 samples, 0.80%)</title><rect x="30.0000%" y="1589" width="0.8000%" height="15" fill="rgb(219,88,35)" fg:x="75" fg:w="2"/><text x="30.2500%" y="1599.50"></text></g><g><title>_int_free (2 samples, 0.80%)</title><rect x="30.0000%" y="1573" width="0.8000%" height="15" fill="rgb(220,193,23)" fg:x="75" fg:w="2"/><text x="30.2500%" y="1583.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.40%)</title><rect x="30.8000%" y="1125" width="0.4000%" height="15" fill="rgb(230,90,52)" fg:x="77" fg:w="1"/><text x="31.0500%" y="1135.50"></text></g><g><title>__perf_event_task_sched_in (23 samples, 9.20%)</title><rect x="31.2000%" y="1109" width="9.2000%" height="15" fill="rgb(252,106,19)" fg:x="78" fg:w="23"/><text x="31.4500%" y="1119.50">__perf_event_..</text></g><g><title>x86_pmu_enable (22 samples, 8.80%)</title><rect x="31.6000%" y="1093" width="8.8000%" height="15" fill="rgb(206,74,20)" fg:x="79" fg:w="22"/><text x="31.8500%" y="1103.50">x86_pmu_enab..</text></g><g><title>intel_pmu_enable_all (22 samples, 8.80%)</title><rect x="31.6000%" y="1077" width="8.8000%" height="15" fill="rgb(230,138,44)" fg:x="79" fg:w="22"/><text x="31.8500%" y="1087.50">intel_pmu_en..</text></g><g><title>native_write_msr (22 samples, 8.80%)</title><rect x="31.6000%" y="1061" width="8.8000%" height="15" fill="rgb(235,182,43)" fg:x="79" fg:w="22"/><text x="31.8500%" y="1071.50">native_write..</text></g><g><title>finish_task_switch.isra.0 (24 samples, 9.60%)</title><rect x="31.2000%" y="1125" width="9.6000%" height="15" fill="rgb(242,16,51)" fg:x="78" fg:w="24"/><text x="31.4500%" y="1135.50">finish_task_sw..</text></g><g><title>asm_sysvec_irq_work (1 samples, 0.40%)</title><rect x="40.4000%" y="1109" width="0.4000%" height="15" fill="rgb(248,9,4)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1119.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.40%)</title><rect x="40.4000%" y="1093" width="0.4000%" height="15" fill="rgb(210,31,22)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1103.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.40%)</title><rect x="40.4000%" y="1077" width="0.4000%" height="15" fill="rgb(239,54,39)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1087.50"></text></g><g><title>irq_work_run (1 samples, 0.40%)</title><rect x="40.4000%" y="1061" width="0.4000%" height="15" fill="rgb(230,99,41)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1071.50"></text></g><g><title>irq_work_run_list (1 samples, 0.40%)</title><rect x="40.4000%" y="1045" width="0.4000%" height="15" fill="rgb(253,106,12)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1055.50"></text></g><g><title>irq_work_single (1 samples, 0.40%)</title><rect x="40.4000%" y="1029" width="0.4000%" height="15" fill="rgb(213,46,41)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1039.50"></text></g><g><title>perf_pending_event (1 samples, 0.40%)</title><rect x="40.4000%" y="1013" width="0.4000%" height="15" fill="rgb(215,133,35)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1023.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.40%)</title><rect x="40.4000%" y="997" width="0.4000%" height="15" fill="rgb(213,28,5)" fg:x="101" fg:w="1"/><text x="40.6500%" y="1007.50"></text></g><g><title>__wake_up (1 samples, 0.40%)</title><rect x="40.4000%" y="981" width="0.4000%" height="15" fill="rgb(215,77,49)" fg:x="101" fg:w="1"/><text x="40.6500%" y="991.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.40%)</title><rect x="40.4000%" y="965" width="0.4000%" height="15" fill="rgb(248,100,22)" fg:x="101" fg:w="1"/><text x="40.6500%" y="975.50"></text></g><g><title>__wake_up_common (1 samples, 0.40%)</title><rect x="40.4000%" y="949" width="0.4000%" height="15" fill="rgb(208,67,9)" fg:x="101" fg:w="1"/><text x="40.6500%" y="959.50"></text></g><g><title>pollwake (1 samples, 0.40%)</title><rect x="40.4000%" y="933" width="0.4000%" height="15" fill="rgb(219,133,21)" fg:x="101" fg:w="1"/><text x="40.6500%" y="943.50"></text></g><g><title>default_wake_function (1 samples, 0.40%)</title><rect x="40.4000%" y="917" width="0.4000%" height="15" fill="rgb(246,46,29)" fg:x="101" fg:w="1"/><text x="40.6500%" y="927.50"></text></g><g><title>try_to_wake_up (1 samples, 0.40%)</title><rect x="40.4000%" y="901" width="0.4000%" height="15" fill="rgb(246,185,52)" fg:x="101" fg:w="1"/><text x="40.6500%" y="911.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.40%)</title><rect x="40.4000%" y="885" width="0.4000%" height="15" fill="rgb(252,136,11)" fg:x="101" fg:w="1"/><text x="40.6500%" y="895.50"></text></g><g><title>enqueue_task (1 samples, 0.40%)</title><rect x="40.4000%" y="869" width="0.4000%" height="15" fill="rgb(219,138,53)" fg:x="101" fg:w="1"/><text x="40.6500%" y="879.50"></text></g><g><title>psi_task_change (1 samples, 0.40%)</title><rect x="40.4000%" y="853" width="0.4000%" height="15" fill="rgb(211,51,23)" fg:x="101" fg:w="1"/><text x="40.6500%" y="863.50"></text></g><g><title>psi_group_change (1 samples, 0.40%)</title><rect x="40.4000%" y="837" width="0.4000%" height="15" fill="rgb(247,221,28)" fg:x="101" fg:w="1"/><text x="40.6500%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (26 samples, 10.40%)</title><rect x="30.8000%" y="1317" width="10.4000%" height="15" fill="rgb(251,222,45)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1327.50">parking_lot_cor..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (26 samples, 10.40%)</title><rect x="30.8000%" y="1301" width="10.4000%" height="15" fill="rgb(217,162,53)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1311.50">&lt;parking_lot_co..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (26 samples, 10.40%)</title><rect x="30.8000%" y="1285" width="10.4000%" height="15" fill="rgb(229,93,14)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1295.50">parking_lot_cor..</text></g><g><title>syscall (26 samples, 10.40%)</title><rect x="30.8000%" y="1269" width="10.4000%" height="15" fill="rgb(209,67,49)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1279.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 10.40%)</title><rect x="30.8000%" y="1253" width="10.4000%" height="15" fill="rgb(213,87,29)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1263.50">entry_SYSCALL_6..</text></g><g><title>do_syscall_64 (26 samples, 10.40%)</title><rect x="30.8000%" y="1237" width="10.4000%" height="15" fill="rgb(205,151,52)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1247.50">do_syscall_64</text></g><g><title>__x64_sys_futex (26 samples, 10.40%)</title><rect x="30.8000%" y="1221" width="10.4000%" height="15" fill="rgb(253,215,39)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1231.50">__x64_sys_futex</text></g><g><title>do_futex (26 samples, 10.40%)</title><rect x="30.8000%" y="1205" width="10.4000%" height="15" fill="rgb(221,220,41)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1215.50">do_futex</text></g><g><title>futex_wait (26 samples, 10.40%)</title><rect x="30.8000%" y="1189" width="10.4000%" height="15" fill="rgb(218,133,21)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1199.50">futex_wait</text></g><g><title>futex_wait_queue_me (26 samples, 10.40%)</title><rect x="30.8000%" y="1173" width="10.4000%" height="15" fill="rgb(221,193,43)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1183.50">futex_wait_queu..</text></g><g><title>schedule (26 samples, 10.40%)</title><rect x="30.8000%" y="1157" width="10.4000%" height="15" fill="rgb(240,128,52)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1167.50">schedule</text></g><g><title>__schedule (26 samples, 10.40%)</title><rect x="30.8000%" y="1141" width="10.4000%" height="15" fill="rgb(253,114,12)" fg:x="77" fg:w="26"/><text x="31.0500%" y="1151.50">__schedule</text></g><g><title>native_iret (1 samples, 0.40%)</title><rect x="40.8000%" y="1125" width="0.4000%" height="15" fill="rgb(215,223,47)" fg:x="102" fg:w="1"/><text x="41.0500%" y="1135.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (27 samples, 10.80%)</title><rect x="30.8000%" y="1413" width="10.8000%" height="15" fill="rgb(248,225,23)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1423.50">tokio::loom::std..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (27 samples, 10.80%)</title><rect x="30.8000%" y="1397" width="10.8000%" height="15" fill="rgb(250,108,0)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1407.50">lock_api::mutex:..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 10.80%)</title><rect x="30.8000%" y="1381" width="10.8000%" height="15" fill="rgb(228,208,7)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1391.50">&lt;parking_lot::ra..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (27 samples, 10.80%)</title><rect x="30.8000%" y="1365" width="10.8000%" height="15" fill="rgb(244,45,10)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1375.50">parking_lot::raw..</text></g><g><title>parking_lot_core::parking_lot::park (27 samples, 10.80%)</title><rect x="30.8000%" y="1349" width="10.8000%" height="15" fill="rgb(207,125,25)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1359.50">parking_lot_core..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (27 samples, 10.80%)</title><rect x="30.8000%" y="1333" width="10.8000%" height="15" fill="rgb(210,195,18)" fg:x="77" fg:w="27"/><text x="31.0500%" y="1343.50">parking_lot_core..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.40%)</title><rect x="41.2000%" y="1317" width="0.4000%" height="15" fill="rgb(249,80,12)" fg:x="103" fg:w="1"/><text x="41.4500%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.40%)</title><rect x="41.2000%" y="1301" width="0.4000%" height="15" fill="rgb(221,65,9)" fg:x="103" fg:w="1"/><text x="41.4500%" y="1311.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.40%)</title><rect x="41.2000%" y="1285" width="0.4000%" height="15" fill="rgb(235,49,36)" fg:x="103" fg:w="1"/><text x="41.4500%" y="1295.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.40%)</title><rect x="41.2000%" y="1269" width="0.4000%" height="15" fill="rgb(225,32,20)" fg:x="103" fg:w="1"/><text x="41.4500%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.40%)</title><rect x="41.2000%" y="1253" width="0.4000%" height="15" fill="rgb(215,141,46)" fg:x="103" fg:w="1"/><text x="41.4500%" y="1263.50"></text></g><g><title>futex_wait_queue_me (13 samples, 5.20%)</title><rect x="42.0000%" y="789" width="5.2000%" height="15" fill="rgb(250,160,47)" fg:x="105" fg:w="13"/><text x="42.2500%" y="799.50">futex_..</text></g><g><title>schedule (13 samples, 5.20%)</title><rect x="42.0000%" y="773" width="5.2000%" height="15" fill="rgb(216,222,40)" fg:x="105" fg:w="13"/><text x="42.2500%" y="783.50">schedu..</text></g><g><title>__schedule (13 samples, 5.20%)</title><rect x="42.0000%" y="757" width="5.2000%" height="15" fill="rgb(234,217,39)" fg:x="105" fg:w="13"/><text x="42.2500%" y="767.50">__sche..</text></g><g><title>finish_task_switch.isra.0 (13 samples, 5.20%)</title><rect x="42.0000%" y="741" width="5.2000%" height="15" fill="rgb(207,178,40)" fg:x="105" fg:w="13"/><text x="42.2500%" y="751.50">finish..</text></g><g><title>__perf_event_task_sched_in (12 samples, 4.80%)</title><rect x="42.4000%" y="725" width="4.8000%" height="15" fill="rgb(221,136,13)" fg:x="106" fg:w="12"/><text x="42.6500%" y="735.50">__perf..</text></g><g><title>x86_pmu_enable (12 samples, 4.80%)</title><rect x="42.4000%" y="709" width="4.8000%" height="15" fill="rgb(249,199,10)" fg:x="106" fg:w="12"/><text x="42.6500%" y="719.50">x86_pm..</text></g><g><title>intel_pmu_enable_all (12 samples, 4.80%)</title><rect x="42.4000%" y="693" width="4.8000%" height="15" fill="rgb(249,222,13)" fg:x="106" fg:w="12"/><text x="42.6500%" y="703.50">intel_..</text></g><g><title>native_write_msr (12 samples, 4.80%)</title><rect x="42.4000%" y="677" width="4.8000%" height="15" fill="rgb(244,185,38)" fg:x="106" fg:w="12"/><text x="42.6500%" y="687.50">native..</text></g><g><title>tokio::runtime::thread_pool::park::Inner::park_condvar (15 samples, 6.00%)</title><rect x="41.6000%" y="1029" width="6.0000%" height="15" fill="rgb(236,202,9)" fg:x="104" fg:w="15"/><text x="41.8500%" y="1039.50">tokio::r..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (14 samples, 5.60%)</title><rect x="42.0000%" y="1013" width="5.6000%" height="15" fill="rgb(250,229,37)" fg:x="105" fg:w="14"/><text x="42.2500%" y="1023.50">tokio::..</text></g><g><title>parking_lot::condvar::Condvar::wait (14 samples, 5.60%)</title><rect x="42.0000%" y="997" width="5.6000%" height="15" fill="rgb(206,174,23)" fg:x="105" fg:w="14"/><text x="42.2500%" y="1007.50">parking..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (14 samples, 5.60%)</title><rect x="42.0000%" y="981" width="5.6000%" height="15" fill="rgb(211,33,43)" fg:x="105" fg:w="14"/><text x="42.2500%" y="991.50">parking..</text></g><g><title>parking_lot_core::parking_lot::park (14 samples, 5.60%)</title><rect x="42.0000%" y="965" width="5.6000%" height="15" fill="rgb(245,58,50)" fg:x="105" fg:w="14"/><text x="42.2500%" y="975.50">parking..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (14 samples, 5.60%)</title><rect x="42.0000%" y="949" width="5.6000%" height="15" fill="rgb(244,68,36)" fg:x="105" fg:w="14"/><text x="42.2500%" y="959.50">parking..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (14 samples, 5.60%)</title><rect x="42.0000%" y="933" width="5.6000%" height="15" fill="rgb(232,229,15)" fg:x="105" fg:w="14"/><text x="42.2500%" y="943.50">parking..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (14 samples, 5.60%)</title><rect x="42.0000%" y="917" width="5.6000%" height="15" fill="rgb(254,30,23)" fg:x="105" fg:w="14"/><text x="42.2500%" y="927.50">&lt;parkin..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (14 samples, 5.60%)</title><rect x="42.0000%" y="901" width="5.6000%" height="15" fill="rgb(235,160,14)" fg:x="105" fg:w="14"/><text x="42.2500%" y="911.50">parking..</text></g><g><title>syscall (14 samples, 5.60%)</title><rect x="42.0000%" y="885" width="5.6000%" height="15" fill="rgb(212,155,44)" fg:x="105" fg:w="14"/><text x="42.2500%" y="895.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 5.60%)</title><rect x="42.0000%" y="869" width="5.6000%" height="15" fill="rgb(226,2,50)" fg:x="105" fg:w="14"/><text x="42.2500%" y="879.50">entry_S..</text></g><g><title>do_syscall_64 (14 samples, 5.60%)</title><rect x="42.0000%" y="853" width="5.6000%" height="15" fill="rgb(234,177,6)" fg:x="105" fg:w="14"/><text x="42.2500%" y="863.50">do_sysc..</text></g><g><title>__x64_sys_futex (14 samples, 5.60%)</title><rect x="42.0000%" y="837" width="5.6000%" height="15" fill="rgb(217,24,9)" fg:x="105" fg:w="14"/><text x="42.2500%" y="847.50">__x64_s..</text></g><g><title>do_futex (14 samples, 5.60%)</title><rect x="42.0000%" y="821" width="5.6000%" height="15" fill="rgb(220,13,46)" fg:x="105" fg:w="14"/><text x="42.2500%" y="831.50">do_futex</text></g><g><title>futex_wait (14 samples, 5.60%)</title><rect x="42.0000%" y="805" width="5.6000%" height="15" fill="rgb(239,221,27)" fg:x="105" fg:w="14"/><text x="42.2500%" y="815.50">futex_w..</text></g><g><title>futex_wait_setup (1 samples, 0.40%)</title><rect x="47.2000%" y="789" width="0.4000%" height="15" fill="rgb(222,198,25)" fg:x="118" fg:w="1"/><text x="47.4500%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (16 samples, 6.40%)</title><rect x="41.6000%" y="1093" width="6.4000%" height="15" fill="rgb(211,99,13)" fg:x="104" fg:w="16"/><text x="41.8500%" y="1103.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (16 samples, 6.40%)</title><rect x="41.6000%" y="1077" width="6.4000%" height="15" fill="rgb(232,111,31)" fg:x="104" fg:w="16"/><text x="41.8500%" y="1087.50">tokio::r..</text></g><g><title>&lt;tokio::runtime::thread_pool::park::Parker as tokio::park::Park&gt;::park (16 samples, 6.40%)</title><rect x="41.6000%" y="1061" width="6.4000%" height="15" fill="rgb(245,82,37)" fg:x="104" fg:w="16"/><text x="41.8500%" y="1071.50">&lt;tokio::..</text></g><g><title>tokio::runtime::thread_pool::park::Inner::park (16 samples, 6.40%)</title><rect x="41.6000%" y="1045" width="6.4000%" height="15" fill="rgb(227,149,46)" fg:x="104" fg:w="16"/><text x="41.8500%" y="1055.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::park::Inner::park_driver (1 samples, 0.40%)</title><rect x="47.6000%" y="1029" width="0.4000%" height="15" fill="rgb(218,36,50)" fg:x="119" fg:w="1"/><text x="47.8500%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (1 samples, 0.40%)</title><rect x="47.6000%" y="1013" width="0.4000%" height="15" fill="rgb(226,80,48)" fg:x="119" fg:w="1"/><text x="47.8500%" y="1023.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (1 samples, 0.40%)</title><rect x="47.6000%" y="997" width="0.4000%" height="15" fill="rgb(238,224,15)" fg:x="119" fg:w="1"/><text x="47.8500%" y="1007.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (1 samples, 0.40%)</title><rect x="47.6000%" y="981" width="0.4000%" height="15" fill="rgb(241,136,10)" fg:x="119" fg:w="1"/><text x="47.8500%" y="991.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (1 samples, 0.40%)</title><rect x="47.6000%" y="965" width="0.4000%" height="15" fill="rgb(208,32,45)" fg:x="119" fg:w="1"/><text x="47.8500%" y="975.50"></text></g><g><title>tokio::io::driver::Driver::turn (1 samples, 0.40%)</title><rect x="47.6000%" y="949" width="0.4000%" height="15" fill="rgb(207,135,9)" fg:x="119" fg:w="1"/><text x="47.8500%" y="959.50"></text></g><g><title>mio::poll::Poll::poll (1 samples, 0.40%)</title><rect x="47.6000%" y="933" width="0.4000%" height="15" fill="rgb(206,86,44)" fg:x="119" fg:w="1"/><text x="47.8500%" y="943.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.40%)</title><rect x="47.6000%" y="917" width="0.4000%" height="15" fill="rgb(245,177,15)" fg:x="119" fg:w="1"/><text x="47.8500%" y="927.50"></text></g><g><title>epoll_wait (1 samples, 0.40%)</title><rect x="47.6000%" y="901" width="0.4000%" height="15" fill="rgb(206,64,50)" fg:x="119" fg:w="1"/><text x="47.8500%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="47.6000%" y="885" width="0.4000%" height="15" fill="rgb(234,36,40)" fg:x="119" fg:w="1"/><text x="47.8500%" y="895.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="47.6000%" y="869" width="0.4000%" height="15" fill="rgb(213,64,8)" fg:x="119" fg:w="1"/><text x="47.8500%" y="879.50"></text></g><g><title>__x64_sys_epoll_wait (1 samples, 0.40%)</title><rect x="47.6000%" y="853" width="0.4000%" height="15" fill="rgb(210,75,36)" fg:x="119" fg:w="1"/><text x="47.8500%" y="863.50"></text></g><g><title>do_epoll_wait (1 samples, 0.40%)</title><rect x="47.6000%" y="837" width="0.4000%" height="15" fill="rgb(229,88,21)" fg:x="119" fg:w="1"/><text x="47.8500%" y="847.50"></text></g><g><title>ep_poll (1 samples, 0.40%)</title><rect x="47.6000%" y="821" width="0.4000%" height="15" fill="rgb(252,204,47)" fg:x="119" fg:w="1"/><text x="47.8500%" y="831.50"></text></g><g><title>schedule_hrtimeout_range (1 samples, 0.40%)</title><rect x="47.6000%" y="805" width="0.4000%" height="15" fill="rgb(208,77,27)" fg:x="119" fg:w="1"/><text x="47.8500%" y="815.50"></text></g><g><title>schedule_hrtimeout_range_clock (1 samples, 0.40%)</title><rect x="47.6000%" y="789" width="0.4000%" height="15" fill="rgb(221,76,26)" fg:x="119" fg:w="1"/><text x="47.8500%" y="799.50"></text></g><g><title>schedule (1 samples, 0.40%)</title><rect x="47.6000%" y="773" width="0.4000%" height="15" fill="rgb(225,139,18)" fg:x="119" fg:w="1"/><text x="47.8500%" y="783.50"></text></g><g><title>__schedule (1 samples, 0.40%)</title><rect x="47.6000%" y="757" width="0.4000%" height="15" fill="rgb(230,137,11)" fg:x="119" fg:w="1"/><text x="47.8500%" y="767.50"></text></g><g><title>pick_next_task (1 samples, 0.40%)</title><rect x="47.6000%" y="741" width="0.4000%" height="15" fill="rgb(212,28,1)" fg:x="119" fg:w="1"/><text x="47.8500%" y="751.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.40%)</title><rect x="47.6000%" y="725" width="0.4000%" height="15" fill="rgb(248,164,17)" fg:x="119" fg:w="1"/><text x="47.8500%" y="735.50"></text></g><g><title>async_request_tasks::now (1 samples, 0.40%)</title><rect x="48.0000%" y="741" width="0.4000%" height="15" fill="rgb(222,171,42)" fg:x="120" fg:w="1"/><text x="48.2500%" y="751.50"></text></g><g><title>chrono::offset::local::Local::now (1 samples, 0.40%)</title><rect x="48.0000%" y="725" width="0.4000%" height="15" fill="rgb(243,84,45)" fg:x="120" fg:w="1"/><text x="48.2500%" y="735.50"></text></g><g><title>chrono::offset::local::inner::now (1 samples, 0.40%)</title><rect x="48.0000%" y="709" width="0.4000%" height="15" fill="rgb(252,49,23)" fg:x="120" fg:w="1"/><text x="48.2500%" y="719.50"></text></g><g><title>chrono::offset::local::inner::naive_to_local (1 samples, 0.40%)</title><rect x="48.0000%" y="693" width="0.4000%" height="15" fill="rgb(215,19,7)" fg:x="120" fg:w="1"/><text x="48.2500%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.40%)</title><rect x="48.0000%" y="677" width="0.4000%" height="15" fill="rgb(238,81,41)" fg:x="120" fg:w="1"/><text x="48.2500%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.40%)</title><rect x="48.0000%" y="661" width="0.4000%" height="15" fill="rgb(210,199,37)" fg:x="120" fg:w="1"/><text x="48.2500%" y="671.50"></text></g><g><title>chrono::offset::local::inner::naive_to_local::{{closure}} (1 samples, 0.40%)</title><rect x="48.0000%" y="645" width="0.4000%" height="15" fill="rgb(244,192,49)" fg:x="120" fg:w="1"/><text x="48.2500%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (1 samples, 0.40%)</title><rect x="48.0000%" y="629" width="0.4000%" height="15" fill="rgb(226,211,11)" fg:x="120" fg:w="1"/><text x="48.2500%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.40%)</title><rect x="48.0000%" y="613" width="0.4000%" height="15" fill="rgb(236,162,54)" fg:x="120" fg:w="1"/><text x="48.2500%" y="623.50"></text></g><g><title>&lt;chrono::offset::local::inner::Cache as core::default::Default&gt;::default (1 samples, 0.40%)</title><rect x="48.0000%" y="597" width="0.4000%" height="15" fill="rgb(220,229,9)" fg:x="120" fg:w="1"/><text x="48.2500%" y="607.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::local (1 samples, 0.40%)</title><rect x="48.0000%" y="581" width="0.4000%" height="15" fill="rgb(250,87,22)" fg:x="120" fg:w="1"/><text x="48.2500%" y="591.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::from_posix_tz (1 samples, 0.40%)</title><rect x="48.0000%" y="565" width="0.4000%" height="15" fill="rgb(239,43,17)" fg:x="120" fg:w="1"/><text x="48.2500%" y="575.50"></text></g><g><title>std::fs::read (1 samples, 0.40%)</title><rect x="48.0000%" y="549" width="0.4000%" height="15" fill="rgb(231,177,25)" fg:x="120" fg:w="1"/><text x="48.2500%" y="559.50"></text></g><g><title>std::fs::read::inner (1 samples, 0.40%)</title><rect x="48.0000%" y="533" width="0.4000%" height="15" fill="rgb(219,179,1)" fg:x="120" fg:w="1"/><text x="48.2500%" y="543.50"></text></g><g><title>std::fs::File::open (1 samples, 0.40%)</title><rect x="48.0000%" y="517" width="0.4000%" height="15" fill="rgb(238,219,53)" fg:x="120" fg:w="1"/><text x="48.2500%" y="527.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.40%)</title><rect x="48.0000%" y="501" width="0.4000%" height="15" fill="rgb(232,167,36)" fg:x="120" fg:w="1"/><text x="48.2500%" y="511.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.40%)</title><rect x="48.0000%" y="485" width="0.4000%" height="15" fill="rgb(244,19,51)" fg:x="120" fg:w="1"/><text x="48.2500%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.40%)</title><rect x="48.0000%" y="469" width="0.4000%" height="15" fill="rgb(224,6,22)" fg:x="120" fg:w="1"/><text x="48.2500%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.40%)</title><rect x="48.0000%" y="453" width="0.4000%" height="15" fill="rgb(224,145,5)" fg:x="120" fg:w="1"/><text x="48.2500%" y="463.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.40%)</title><rect x="48.0000%" y="437" width="0.4000%" height="15" fill="rgb(234,130,49)" fg:x="120" fg:w="1"/><text x="48.2500%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.40%)</title><rect x="48.0000%" y="421" width="0.4000%" height="15" fill="rgb(254,6,2)" fg:x="120" fg:w="1"/><text x="48.2500%" y="431.50"></text></g><g><title>__libc_open64 (1 samples, 0.40%)</title><rect x="48.0000%" y="405" width="0.4000%" height="15" fill="rgb(208,96,46)" fg:x="120" fg:w="1"/><text x="48.2500%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="48.0000%" y="389" width="0.4000%" height="15" fill="rgb(239,3,39)" fg:x="120" fg:w="1"/><text x="48.2500%" y="399.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="48.0000%" y="373" width="0.4000%" height="15" fill="rgb(233,210,1)" fg:x="120" fg:w="1"/><text x="48.2500%" y="383.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.40%)</title><rect x="48.0000%" y="357" width="0.4000%" height="15" fill="rgb(244,137,37)" fg:x="120" fg:w="1"/><text x="48.2500%" y="367.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.40%)</title><rect x="48.0000%" y="341" width="0.4000%" height="15" fill="rgb(240,136,2)" fg:x="120" fg:w="1"/><text x="48.2500%" y="351.50"></text></g><g><title>do_filp_open (1 samples, 0.40%)</title><rect x="48.0000%" y="325" width="0.4000%" height="15" fill="rgb(239,18,37)" fg:x="120" fg:w="1"/><text x="48.2500%" y="335.50"></text></g><g><title>path_openat (1 samples, 0.40%)</title><rect x="48.0000%" y="309" width="0.4000%" height="15" fill="rgb(218,185,22)" fg:x="120" fg:w="1"/><text x="48.2500%" y="319.50"></text></g><g><title>may_open (1 samples, 0.40%)</title><rect x="48.0000%" y="293" width="0.4000%" height="15" fill="rgb(225,218,4)" fg:x="120" fg:w="1"/><text x="48.2500%" y="303.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (1 samples, 0.40%)</title><rect x="48.4000%" y="181" width="0.4000%" height="15" fill="rgb(230,182,32)" fg:x="121" fg:w="1"/><text x="48.6500%" y="191.50"></text></g><g><title>OPENSSL_sk_value (6 samples, 2.40%)</title><rect x="48.4000%" y="389" width="2.4000%" height="15" fill="rgb(242,56,43)" fg:x="121" fg:w="6"/><text x="48.6500%" y="399.50">OP..</text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 2.40%)</title><rect x="48.4000%" y="373" width="2.4000%" height="15" fill="rgb(233,99,24)" fg:x="121" fg:w="6"/><text x="48.6500%" y="383.50">as..</text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 2.40%)</title><rect x="48.4000%" y="357" width="2.4000%" height="15" fill="rgb(234,209,42)" fg:x="121" fg:w="6"/><text x="48.6500%" y="367.50">sy..</text></g><g><title>irqentry_exit (6 samples, 2.40%)</title><rect x="48.4000%" y="341" width="2.4000%" height="15" fill="rgb(227,7,12)" fg:x="121" fg:w="6"/><text x="48.6500%" y="351.50">ir..</text></g><g><title>irqentry_exit_to_user_mode (6 samples, 2.40%)</title><rect x="48.4000%" y="325" width="2.4000%" height="15" fill="rgb(245,203,43)" fg:x="121" fg:w="6"/><text x="48.6500%" y="335.50">ir..</text></g><g><title>exit_to_user_mode_prepare (6 samples, 2.40%)</title><rect x="48.4000%" y="309" width="2.4000%" height="15" fill="rgb(238,205,33)" fg:x="121" fg:w="6"/><text x="48.6500%" y="319.50">ex..</text></g><g><title>exit_to_user_mode_loop (6 samples, 2.40%)</title><rect x="48.4000%" y="293" width="2.4000%" height="15" fill="rgb(231,56,7)" fg:x="121" fg:w="6"/><text x="48.6500%" y="303.50">ex..</text></g><g><title>schedule (6 samples, 2.40%)</title><rect x="48.4000%" y="277" width="2.4000%" height="15" fill="rgb(244,186,29)" fg:x="121" fg:w="6"/><text x="48.6500%" y="287.50">sc..</text></g><g><title>__schedule (6 samples, 2.40%)</title><rect x="48.4000%" y="261" width="2.4000%" height="15" fill="rgb(234,111,31)" fg:x="121" fg:w="6"/><text x="48.6500%" y="271.50">__..</text></g><g><title>finish_task_switch.isra.0 (6 samples, 2.40%)</title><rect x="48.4000%" y="245" width="2.4000%" height="15" fill="rgb(241,149,10)" fg:x="121" fg:w="6"/><text x="48.6500%" y="255.50">fi..</text></g><g><title>__perf_event_task_sched_in (6 samples, 2.40%)</title><rect x="48.4000%" y="229" width="2.4000%" height="15" fill="rgb(249,206,44)" fg:x="121" fg:w="6"/><text x="48.6500%" y="239.50">__..</text></g><g><title>x86_pmu_enable (6 samples, 2.40%)</title><rect x="48.4000%" y="213" width="2.4000%" height="15" fill="rgb(251,153,30)" fg:x="121" fg:w="6"/><text x="48.6500%" y="223.50">x8..</text></g><g><title>intel_pmu_enable_all (6 samples, 2.40%)</title><rect x="48.4000%" y="197" width="2.4000%" height="15" fill="rgb(239,152,38)" fg:x="121" fg:w="6"/><text x="48.6500%" y="207.50">in..</text></g><g><title>native_write_msr (5 samples, 2.00%)</title><rect x="48.8000%" y="181" width="2.0000%" height="15" fill="rgb(249,139,47)" fg:x="122" fg:w="5"/><text x="49.0500%" y="191.50">n..</text></g><g><title>EVP_PKEY_free (1 samples, 0.40%)</title><rect x="50.8000%" y="373" width="0.4000%" height="15" fill="rgb(244,64,35)" fg:x="127" fg:w="1"/><text x="51.0500%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="50.8000%" y="357" width="0.4000%" height="15" fill="rgb(216,46,15)" fg:x="127" fg:w="1"/><text x="51.0500%" y="367.50"></text></g><g><title>EC_KEY_free (1 samples, 0.40%)</title><rect x="50.8000%" y="341" width="0.4000%" height="15" fill="rgb(250,74,19)" fg:x="127" fg:w="1"/><text x="51.0500%" y="351.50"></text></g><g><title>EC_GROUP_free (1 samples, 0.40%)</title><rect x="50.8000%" y="325" width="0.4000%" height="15" fill="rgb(249,42,33)" fg:x="127" fg:w="1"/><text x="51.0500%" y="335.50"></text></g><g><title>EC_POINT_free (1 samples, 0.40%)</title><rect x="50.8000%" y="309" width="0.4000%" height="15" fill="rgb(242,149,17)" fg:x="127" fg:w="1"/><text x="51.0500%" y="319.50"></text></g><g><title>BN_free (1 samples, 0.40%)</title><rect x="50.8000%" y="293" width="0.4000%" height="15" fill="rgb(244,29,21)" fg:x="127" fg:w="1"/><text x="51.0500%" y="303.50"></text></g><g><title>BN_get_flags (1 samples, 0.40%)</title><rect x="50.8000%" y="277" width="0.4000%" height="15" fill="rgb(220,130,37)" fg:x="127" fg:w="1"/><text x="51.0500%" y="287.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.40%)</title><rect x="51.2000%" y="373" width="0.4000%" height="15" fill="rgb(211,67,2)" fg:x="128" fg:w="1"/><text x="51.4500%" y="383.50"></text></g><g><title>ASN1_item_free (1 samples, 0.40%)</title><rect x="51.2000%" y="357" width="0.4000%" height="15" fill="rgb(235,68,52)" fg:x="128" fg:w="1"/><text x="51.4500%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="51.2000%" y="341" width="0.4000%" height="15" fill="rgb(246,142,3)" fg:x="128" fg:w="1"/><text x="51.4500%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="51.2000%" y="325" width="0.4000%" height="15" fill="rgb(241,25,7)" fg:x="128" fg:w="1"/><text x="51.4500%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="51.2000%" y="309" width="0.4000%" height="15" fill="rgb(242,119,39)" fg:x="128" fg:w="1"/><text x="51.4500%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.40%)</title><rect x="51.2000%" y="293" width="0.4000%" height="15" fill="rgb(241,98,45)" fg:x="128" fg:w="1"/><text x="51.4500%" y="303.50"></text></g><g><title>arena_for_chunk (1 samples, 0.40%)</title><rect x="51.2000%" y="277" width="0.4000%" height="15" fill="rgb(254,28,30)" fg:x="128" fg:w="1"/><text x="51.4500%" y="287.50"></text></g><g><title>arena_for_chunk (1 samples, 0.40%)</title><rect x="51.2000%" y="261" width="0.4000%" height="15" fill="rgb(241,142,54)" fg:x="128" fg:w="1"/><text x="51.4500%" y="271.50"></text></g><g><title>heap_for_ptr (1 samples, 0.40%)</title><rect x="51.2000%" y="245" width="0.4000%" height="15" fill="rgb(222,85,15)" fg:x="128" fg:w="1"/><text x="51.4500%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::client::Client&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="741" width="3.6000%" height="15" fill="rgb(210,85,47)" fg:x="121" fg:w="9"/><text x="48.6500%" y="751.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;reqwest::async_impl::client::ClientRef&gt;&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="725" width="3.6000%" height="15" fill="rgb(224,206,25)" fg:x="121" fg:w="9"/><text x="48.6500%" y="735.50">core..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 3.60%)</title><rect x="48.4000%" y="709" width="3.6000%" height="15" fill="rgb(243,201,19)" fg:x="121" fg:w="9"/><text x="48.6500%" y="719.50">&lt;all..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 3.60%)</title><rect x="48.4000%" y="693" width="3.6000%" height="15" fill="rgb(236,59,4)" fg:x="121" fg:w="9"/><text x="48.6500%" y="703.50">allo..</text></g><g><title>core::ptr::drop_in_place&lt;reqwest::async_impl::client::ClientRef&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="677" width="3.6000%" height="15" fill="rgb(254,179,45)" fg:x="121" fg:w="9"/><text x="48.6500%" y="687.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::client::client::Client&lt;reqwest::connect::Connector,reqwest::async_impl::body::ImplStream&gt;&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="661" width="3.6000%" height="15" fill="rgb(226,14,10)" fg:x="121" fg:w="9"/><text x="48.6500%" y="671.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;reqwest::connect::Connector&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="645" width="3.6000%" height="15" fill="rgb(244,27,41)" fg:x="121" fg:w="9"/><text x="48.6500%" y="655.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;reqwest::connect::Inner&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="629" width="3.6000%" height="15" fill="rgb(235,35,32)" fg:x="121" fg:w="9"/><text x="48.6500%" y="639.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;native_tls::TlsConnector&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="613" width="3.6000%" height="15" fill="rgb(218,68,31)" fg:x="121" fg:w="9"/><text x="48.6500%" y="623.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;native_tls::imp::TlsConnector&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="597" width="3.6000%" height="15" fill="rgb(207,120,37)" fg:x="121" fg:w="9"/><text x="48.6500%" y="607.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;openssl::ssl::connector::SslConnector&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="581" width="3.6000%" height="15" fill="rgb(227,98,0)" fg:x="121" fg:w="9"/><text x="48.6500%" y="591.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;openssl::ssl::SslContext&gt; (9 samples, 3.60%)</title><rect x="48.4000%" y="565" width="3.6000%" height="15" fill="rgb(207,7,3)" fg:x="121" fg:w="9"/><text x="48.6500%" y="575.50">core..</text></g><g><title>&lt;openssl::ssl::SslContext as core::ops::drop::Drop&gt;::drop (9 samples, 3.60%)</title><rect x="48.4000%" y="549" width="3.6000%" height="15" fill="rgb(206,98,19)" fg:x="121" fg:w="9"/><text x="48.6500%" y="559.50">&lt;ope..</text></g><g><title>SSL_CTX_free (9 samples, 3.60%)</title><rect x="48.4000%" y="533" width="3.6000%" height="15" fill="rgb(217,5,26)" fg:x="121" fg:w="9"/><text x="48.6500%" y="543.50">SSL_..</text></g><g><title>X509_STORE_free (9 samples, 3.60%)</title><rect x="48.4000%" y="517" width="3.6000%" height="15" fill="rgb(235,190,38)" fg:x="121" fg:w="9"/><text x="48.6500%" y="527.50">X509..</text></g><g><title>OPENSSL_sk_pop_free (9 samples, 3.60%)</title><rect x="48.4000%" y="501" width="3.6000%" height="15" fill="rgb(247,86,24)" fg:x="121" fg:w="9"/><text x="48.6500%" y="511.50">OPEN..</text></g><g><title>X509_OBJECT_free (9 samples, 3.60%)</title><rect x="48.4000%" y="485" width="3.6000%" height="15" fill="rgb(205,101,16)" fg:x="121" fg:w="9"/><text x="48.6500%" y="495.50">X509..</text></g><g><title>ASN1_item_free (9 samples, 3.60%)</title><rect x="48.4000%" y="469" width="3.6000%" height="15" fill="rgb(246,168,33)" fg:x="121" fg:w="9"/><text x="48.6500%" y="479.50">ASN1..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="48.4000%" y="453" width="3.6000%" height="15" fill="rgb(231,114,1)" fg:x="121" fg:w="9"/><text x="48.6500%" y="463.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="48.4000%" y="437" width="3.6000%" height="15" fill="rgb(207,184,53)" fg:x="121" fg:w="9"/><text x="48.6500%" y="447.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="48.4000%" y="421" width="3.6000%" height="15" fill="rgb(224,95,51)" fg:x="121" fg:w="9"/><text x="48.6500%" y="431.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="48.4000%" y="405" width="3.6000%" height="15" fill="rgb(212,188,45)" fg:x="121" fg:w="9"/><text x="48.6500%" y="415.50">[lib..</text></g><g><title>[libcrypto.so.3] (3 samples, 1.20%)</title><rect x="50.8000%" y="389" width="1.2000%" height="15" fill="rgb(223,154,38)" fg:x="127" fg:w="3"/><text x="51.0500%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="51.6000%" y="373" width="0.4000%" height="15" fill="rgb(251,22,52)" fg:x="129" fg:w="1"/><text x="51.8500%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="51.6000%" y="357" width="0.4000%" height="15" fill="rgb(229,209,22)" fg:x="129" fg:w="1"/><text x="51.8500%" y="367.50"></text></g><g><title>OSSL_DECODER_CTX_free (1 samples, 0.40%)</title><rect x="52.0000%" y="469" width="0.4000%" height="15" fill="rgb(234,138,34)" fg:x="130" fg:w="1"/><text x="52.2500%" y="479.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="52.0000%" y="453" width="0.4000%" height="15" fill="rgb(212,95,11)" fg:x="130" fg:w="1"/><text x="52.2500%" y="463.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.40%)</title><rect x="52.0000%" y="437" width="0.4000%" height="15" fill="rgb(240,179,47)" fg:x="130" fg:w="1"/><text x="52.2500%" y="447.50"></text></g><g><title>EVP_KEYMGMT_free (1 samples, 0.40%)</title><rect x="52.0000%" y="421" width="0.4000%" height="15" fill="rgb(240,163,11)" fg:x="130" fg:w="1"/><text x="52.2500%" y="431.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.40%)</title><rect x="57.2000%" y="389" width="0.4000%" height="15" fill="rgb(236,37,12)" fg:x="143" fg:w="1"/><text x="57.4500%" y="399.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.40%)</title><rect x="57.2000%" y="373" width="0.4000%" height="15" fill="rgb(232,164,16)" fg:x="143" fg:w="1"/><text x="57.4500%" y="383.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (1 samples, 0.40%)</title><rect x="57.2000%" y="357" width="0.4000%" height="15" fill="rgb(244,205,15)" fg:x="143" fg:w="1"/><text x="57.4500%" y="367.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.40%)</title><rect x="57.6000%" y="309" width="0.4000%" height="15" fill="rgb(223,117,47)" fg:x="144" fg:w="1"/><text x="57.8500%" y="319.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.40%)</title><rect x="57.6000%" y="293" width="0.4000%" height="15" fill="rgb(244,107,35)" fg:x="144" fg:w="1"/><text x="57.8500%" y="303.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (1 samples, 0.40%)</title><rect x="57.6000%" y="277" width="0.4000%" height="15" fill="rgb(205,140,8)" fg:x="144" fg:w="1"/><text x="57.8500%" y="287.50"></text></g><g><title>__GI___futex_abstimed_wait64 (1 samples, 0.40%)</title><rect x="57.6000%" y="261" width="0.4000%" height="15" fill="rgb(228,84,46)" fg:x="144" fg:w="1"/><text x="57.8500%" y="271.50"></text></g><g><title>__futex_abstimed_wait_common (1 samples, 0.40%)</title><rect x="57.6000%" y="245" width="0.4000%" height="15" fill="rgb(254,188,9)" fg:x="144" fg:w="1"/><text x="57.8500%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="57.6000%" y="229" width="0.4000%" height="15" fill="rgb(206,112,54)" fg:x="144" fg:w="1"/><text x="57.8500%" y="239.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="57.6000%" y="213" width="0.4000%" height="15" fill="rgb(216,84,49)" fg:x="144" fg:w="1"/><text x="57.8500%" y="223.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="57.6000%" y="197" width="0.4000%" height="15" fill="rgb(214,194,35)" fg:x="144" fg:w="1"/><text x="57.8500%" y="207.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="57.6000%" y="181" width="0.4000%" height="15" fill="rgb(249,28,3)" fg:x="144" fg:w="1"/><text x="57.8500%" y="191.50"></text></g><g><title>futex_wait (1 samples, 0.40%)</title><rect x="57.6000%" y="165" width="0.4000%" height="15" fill="rgb(222,56,52)" fg:x="144" fg:w="1"/><text x="57.8500%" y="175.50"></text></g><g><title>futex_wait_queue_me (1 samples, 0.40%)</title><rect x="57.6000%" y="149" width="0.4000%" height="15" fill="rgb(245,217,50)" fg:x="144" fg:w="1"/><text x="57.8500%" y="159.50"></text></g><g><title>schedule (1 samples, 0.40%)</title><rect x="57.6000%" y="133" width="0.4000%" height="15" fill="rgb(213,201,24)" fg:x="144" fg:w="1"/><text x="57.8500%" y="143.50"></text></g><g><title>__schedule (1 samples, 0.40%)</title><rect x="57.6000%" y="117" width="0.4000%" height="15" fill="rgb(248,116,28)" fg:x="144" fg:w="1"/><text x="57.8500%" y="127.50"></text></g><g><title>psi_task_switch (1 samples, 0.40%)</title><rect x="57.6000%" y="101" width="0.4000%" height="15" fill="rgb(219,72,43)" fg:x="144" fg:w="1"/><text x="57.8500%" y="111.50"></text></g><g><title>psi_group_change (1 samples, 0.40%)</title><rect x="57.6000%" y="85" width="0.4000%" height="15" fill="rgb(209,138,14)" fg:x="144" fg:w="1"/><text x="57.8500%" y="95.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="58.0000%" y="213" width="0.4000%" height="15" fill="rgb(222,18,33)" fg:x="145" fg:w="1"/><text x="58.2500%" y="223.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="58.0000%" y="197" width="0.4000%" height="15" fill="rgb(213,199,7)" fg:x="145" fg:w="1"/><text x="58.2500%" y="207.50"></text></g><g><title>futex_wake (1 samples, 0.40%)</title><rect x="58.0000%" y="181" width="0.4000%" height="15" fill="rgb(250,110,10)" fg:x="145" fg:w="1"/><text x="58.2500%" y="191.50"></text></g><g><title>wake_up_q (1 samples, 0.40%)</title><rect x="58.0000%" y="165" width="0.4000%" height="15" fill="rgb(248,123,6)" fg:x="145" fg:w="1"/><text x="58.2500%" y="175.50"></text></g><g><title>try_to_wake_up (1 samples, 0.40%)</title><rect x="58.0000%" y="149" width="0.4000%" height="15" fill="rgb(206,91,31)" fg:x="145" fg:w="1"/><text x="58.2500%" y="159.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.40%)</title><rect x="58.0000%" y="133" width="0.4000%" height="15" fill="rgb(211,154,13)" fg:x="145" fg:w="1"/><text x="58.2500%" y="143.50"></text></g><g><title>llist_add_batch (1 samples, 0.40%)</title><rect x="58.0000%" y="117" width="0.4000%" height="15" fill="rgb(225,148,7)" fg:x="145" fg:w="1"/><text x="58.2500%" y="127.50"></text></g><g><title>CRYPTO_THREAD_unlock (2 samples, 0.80%)</title><rect x="58.0000%" y="309" width="0.8000%" height="15" fill="rgb(220,160,43)" fg:x="145" fg:w="2"/><text x="58.2500%" y="319.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.80%)</title><rect x="58.0000%" y="293" width="0.8000%" height="15" fill="rgb(213,52,39)" fg:x="145" fg:w="2"/><text x="58.2500%" y="303.50"></text></g><g><title>__pthread_rwlock_wrunlock (2 samples, 0.80%)</title><rect x="58.0000%" y="277" width="0.8000%" height="15" fill="rgb(243,137,7)" fg:x="145" fg:w="2"/><text x="58.2500%" y="287.50"></text></g><g><title>futex_wake (2 samples, 0.80%)</title><rect x="58.0000%" y="261" width="0.8000%" height="15" fill="rgb(230,79,13)" fg:x="145" fg:w="2"/><text x="58.2500%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.80%)</title><rect x="58.0000%" y="245" width="0.8000%" height="15" fill="rgb(247,105,23)" fg:x="145" fg:w="2"/><text x="58.2500%" y="255.50"></text></g><g><title>do_syscall_64 (2 samples, 0.80%)</title><rect x="58.0000%" y="229" width="0.8000%" height="15" fill="rgb(223,179,41)" fg:x="145" fg:w="2"/><text x="58.2500%" y="239.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.40%)</title><rect x="58.4000%" y="213" width="0.4000%" height="15" fill="rgb(218,9,34)" fg:x="146" fg:w="1"/><text x="58.6500%" y="223.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.40%)</title><rect x="58.4000%" y="197" width="0.4000%" height="15" fill="rgb(222,106,8)" fg:x="146" fg:w="1"/><text x="58.6500%" y="207.50"></text></g><g><title>dequeue_task (1 samples, 0.40%)</title><rect x="58.8000%" y="101" width="0.4000%" height="15" fill="rgb(211,220,0)" fg:x="147" fg:w="1"/><text x="59.0500%" y="111.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.40%)</title><rect x="58.8000%" y="85" width="0.4000%" height="15" fill="rgb(229,52,16)" fg:x="147" fg:w="1"/><text x="59.0500%" y="95.50"></text></g><g><title>dequeue_entity (1 samples, 0.40%)</title><rect x="58.8000%" y="69" width="0.4000%" height="15" fill="rgb(212,155,18)" fg:x="147" fg:w="1"/><text x="59.0500%" y="79.50"></text></g><g><title>update_load_avg (1 samples, 0.40%)</title><rect x="58.8000%" y="53" width="0.4000%" height="15" fill="rgb(242,21,14)" fg:x="147" fg:w="1"/><text x="59.0500%" y="63.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.40%)</title><rect x="58.8000%" y="37" width="0.4000%" height="15" fill="rgb(222,19,48)" fg:x="147" fg:w="1"/><text x="59.0500%" y="47.50"></text></g><g><title>CRYPTO_THREAD_write_lock (2 samples, 0.80%)</title><rect x="58.8000%" y="309" width="0.8000%" height="15" fill="rgb(232,45,27)" fg:x="147" fg:w="2"/><text x="59.0500%" y="319.50"></text></g><g><title>___pthread_rwlock_wrlock (2 samples, 0.80%)</title><rect x="58.8000%" y="293" width="0.8000%" height="15" fill="rgb(249,103,42)" fg:x="147" fg:w="2"/><text x="59.0500%" y="303.50"></text></g><g><title>__pthread_rwlock_wrlock_full64 (2 samples, 0.80%)</title><rect x="58.8000%" y="277" width="0.8000%" height="15" fill="rgb(246,81,33)" fg:x="147" fg:w="2"/><text x="59.0500%" y="287.50"></text></g><g><title>__GI___futex_abstimed_wait64 (2 samples, 0.80%)</title><rect x="58.8000%" y="261" width="0.8000%" height="15" fill="rgb(252,33,42)" fg:x="147" fg:w="2"/><text x="59.0500%" y="271.50"></text></g><g><title>__futex_abstimed_wait_common (2 samples, 0.80%)</title><rect x="58.8000%" y="245" width="0.8000%" height="15" fill="rgb(209,212,41)" fg:x="147" fg:w="2"/><text x="59.0500%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.80%)</title><rect x="58.8000%" y="229" width="0.8000%" height="15" fill="rgb(207,154,6)" fg:x="147" fg:w="2"/><text x="59.0500%" y="239.50"></text></g><g><title>do_syscall_64 (2 samples, 0.80%)</title><rect x="58.8000%" y="213" width="0.8000%" height="15" fill="rgb(223,64,47)" fg:x="147" fg:w="2"/><text x="59.0500%" y="223.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.80%)</title><rect x="58.8000%" y="197" width="0.8000%" height="15" fill="rgb(211,161,38)" fg:x="147" fg:w="2"/><text x="59.0500%" y="207.50"></text></g><g><title>do_futex (2 samples, 0.80%)</title><rect x="58.8000%" y="181" width="0.8000%" height="15" fill="rgb(219,138,40)" fg:x="147" fg:w="2"/><text x="59.0500%" y="191.50"></text></g><g><title>futex_wait (2 samples, 0.80%)</title><rect x="58.8000%" y="165" width="0.8000%" height="15" fill="rgb(241,228,46)" fg:x="147" fg:w="2"/><text x="59.0500%" y="175.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.80%)</title><rect x="58.8000%" y="149" width="0.8000%" height="15" fill="rgb(223,209,38)" fg:x="147" fg:w="2"/><text x="59.0500%" y="159.50"></text></g><g><title>schedule (2 samples, 0.80%)</title><rect x="58.8000%" y="133" width="0.8000%" height="15" fill="rgb(236,164,45)" fg:x="147" fg:w="2"/><text x="59.0500%" y="143.50"></text></g><g><title>__schedule (2 samples, 0.80%)</title><rect x="58.8000%" y="117" width="0.8000%" height="15" fill="rgb(231,15,5)" fg:x="147" fg:w="2"/><text x="59.0500%" y="127.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.40%)</title><rect x="59.2000%" y="101" width="0.4000%" height="15" fill="rgb(252,35,15)" fg:x="148" fg:w="1"/><text x="59.4500%" y="111.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.40%)</title><rect x="59.2000%" y="85" width="0.4000%" height="15" fill="rgb(248,181,18)" fg:x="148" fg:w="1"/><text x="59.4500%" y="95.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.40%)</title><rect x="59.2000%" y="69" width="0.4000%" height="15" fill="rgb(233,39,42)" fg:x="148" fg:w="1"/><text x="59.4500%" y="79.50"></text></g><g><title>intel_pmu_enable_all (1 samples, 0.40%)</title><rect x="59.2000%" y="53" width="0.4000%" height="15" fill="rgb(238,110,33)" fg:x="148" fg:w="1"/><text x="59.4500%" y="63.50"></text></g><g><title>native_write_msr (1 samples, 0.40%)</title><rect x="59.2000%" y="37" width="0.4000%" height="15" fill="rgb(233,195,10)" fg:x="148" fg:w="1"/><text x="59.4500%" y="47.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.40%)</title><rect x="59.6000%" y="293" width="0.4000%" height="15" fill="rgb(254,105,3)" fg:x="149" fg:w="1"/><text x="59.8500%" y="303.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.40%)</title><rect x="59.6000%" y="277" width="0.4000%" height="15" fill="rgb(221,225,9)" fg:x="149" fg:w="1"/><text x="59.8500%" y="287.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (1 samples, 0.40%)</title><rect x="59.6000%" y="261" width="0.4000%" height="15" fill="rgb(224,227,45)" fg:x="149" fg:w="1"/><text x="59.8500%" y="271.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (22 samples, 8.80%)</title><rect x="52.4000%" y="453" width="8.8000%" height="15" fill="rgb(229,198,43)" fg:x="131" fg:w="22"/><text x="52.6500%" y="463.50">EVP_KEYMGMT_..</text></g><g><title>[libcrypto.so.3] (22 samples, 8.80%)</title><rect x="52.4000%" y="437" width="8.8000%" height="15" fill="rgb(206,209,35)" fg:x="131" fg:w="22"/><text x="52.6500%" y="447.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (22 samples, 8.80%)</title><rect x="52.4000%" y="421" width="8.8000%" height="15" fill="rgb(245,195,53)" fg:x="131" fg:w="22"/><text x="52.6500%" y="431.50">[libcrypto.s..</text></g><g><title>[libcrypto.so.3] (10 samples, 4.00%)</title><rect x="57.2000%" y="405" width="4.0000%" height="15" fill="rgb(240,92,26)" fg:x="143" fg:w="10"/><text x="57.4500%" y="415.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="57.6000%" y="389" width="3.6000%" height="15" fill="rgb(207,40,23)" fg:x="144" fg:w="9"/><text x="57.8500%" y="399.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="57.6000%" y="373" width="3.6000%" height="15" fill="rgb(223,111,35)" fg:x="144" fg:w="9"/><text x="57.8500%" y="383.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="57.6000%" y="357" width="3.6000%" height="15" fill="rgb(229,147,28)" fg:x="144" fg:w="9"/><text x="57.8500%" y="367.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="57.6000%" y="341" width="3.6000%" height="15" fill="rgb(211,29,28)" fg:x="144" fg:w="9"/><text x="57.8500%" y="351.50">[lib..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="57.6000%" y="325" width="3.6000%" height="15" fill="rgb(228,72,33)" fg:x="144" fg:w="9"/><text x="57.8500%" y="335.50">[lib..</text></g><g><title>[libcrypto.so.3] (4 samples, 1.60%)</title><rect x="59.6000%" y="309" width="1.6000%" height="15" fill="rgb(205,214,31)" fg:x="149" fg:w="4"/><text x="59.8500%" y="319.50"></text></g><g><title>OPENSSL_LH_retrieve (3 samples, 1.20%)</title><rect x="60.0000%" y="293" width="1.2000%" height="15" fill="rgb(224,111,15)" fg:x="150" fg:w="3"/><text x="60.2500%" y="303.50"></text></g><g><title>[libcrypto.so.3] (3 samples, 1.20%)</title><rect x="60.0000%" y="277" width="1.2000%" height="15" fill="rgb(253,21,26)" fg:x="150" fg:w="3"/><text x="60.2500%" y="287.50"></text></g><g><title>EVP_KEYMGMT_is_a (1 samples, 0.40%)</title><rect x="61.2000%" y="453" width="0.4000%" height="15" fill="rgb(245,139,43)" fg:x="153" fg:w="1"/><text x="61.4500%" y="463.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="61.2000%" y="437" width="0.4000%" height="15" fill="rgb(252,170,7)" fg:x="153" fg:w="1"/><text x="61.4500%" y="447.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="61.2000%" y="421" width="0.4000%" height="15" fill="rgb(231,118,14)" fg:x="153" fg:w="1"/><text x="61.4500%" y="431.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="61.2000%" y="405" width="0.4000%" height="15" fill="rgb(238,83,0)" fg:x="153" fg:w="1"/><text x="61.4500%" y="415.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="61.2000%" y="389" width="0.4000%" height="15" fill="rgb(221,39,39)" fg:x="153" fg:w="1"/><text x="61.4500%" y="399.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.40%)</title><rect x="61.2000%" y="373" width="0.4000%" height="15" fill="rgb(222,119,46)" fg:x="153" fg:w="1"/><text x="61.4500%" y="383.50"></text></g><g><title>OPENSSL_sk_insert (1 samples, 0.40%)</title><rect x="62.8000%" y="389" width="0.4000%" height="15" fill="rgb(222,165,49)" fg:x="157" fg:w="1"/><text x="63.0500%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="62.8000%" y="373" width="0.4000%" height="15" fill="rgb(219,113,52)" fg:x="157" fg:w="1"/><text x="63.0500%" y="383.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.40%)</title><rect x="62.8000%" y="357" width="0.4000%" height="15" fill="rgb(214,7,15)" fg:x="157" fg:w="1"/><text x="63.0500%" y="367.50"></text></g><g><title>OSSL_DECODER_do_all_provided (5 samples, 2.00%)</title><rect x="61.6000%" y="437" width="2.0000%" height="15" fill="rgb(235,32,4)" fg:x="154" fg:w="5"/><text x="61.8500%" y="447.50">O..</text></g><g><title>[libcrypto.so.3] (5 samples, 2.00%)</title><rect x="61.6000%" y="421" width="2.0000%" height="15" fill="rgb(238,90,54)" fg:x="154" fg:w="5"/><text x="61.8500%" y="431.50">[..</text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="62.8000%" y="405" width="0.8000%" height="15" fill="rgb(213,208,19)" fg:x="157" fg:w="2"/><text x="63.0500%" y="415.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="389" width="0.4000%" height="15" fill="rgb(233,156,4)" fg:x="158" fg:w="1"/><text x="63.4500%" y="399.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="373" width="0.4000%" height="15" fill="rgb(207,194,5)" fg:x="158" fg:w="1"/><text x="63.4500%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="357" width="0.4000%" height="15" fill="rgb(206,111,30)" fg:x="158" fg:w="1"/><text x="63.4500%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="341" width="0.4000%" height="15" fill="rgb(243,70,54)" fg:x="158" fg:w="1"/><text x="63.4500%" y="351.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="325" width="0.4000%" height="15" fill="rgb(242,28,8)" fg:x="158" fg:w="1"/><text x="63.4500%" y="335.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.40%)</title><rect x="63.2000%" y="309" width="0.4000%" height="15" fill="rgb(219,106,18)" fg:x="158" fg:w="1"/><text x="63.4500%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="63.2000%" y="293" width="0.4000%" height="15" fill="rgb(244,222,10)" fg:x="158" fg:w="1"/><text x="63.4500%" y="303.50"></text></g><g><title>OPENSSL_LH_strhash (1 samples, 0.40%)</title><rect x="63.2000%" y="277" width="0.4000%" height="15" fill="rgb(236,179,52)" fg:x="158" fg:w="1"/><text x="63.4500%" y="287.50"></text></g><g><title>CRYPTO_THREAD_unlock (4 samples, 1.60%)</title><rect x="63.6000%" y="405" width="1.6000%" height="15" fill="rgb(213,23,39)" fg:x="159" fg:w="4"/><text x="63.8500%" y="415.50"></text></g><g><title>___pthread_rwlock_unlock (4 samples, 1.60%)</title><rect x="63.6000%" y="389" width="1.6000%" height="15" fill="rgb(238,48,10)" fg:x="159" fg:w="4"/><text x="63.8500%" y="399.50"></text></g><g><title>__pthread_rwlock_rdunlock (4 samples, 1.60%)</title><rect x="63.6000%" y="373" width="1.6000%" height="15" fill="rgb(251,196,23)" fg:x="159" fg:w="4"/><text x="63.8500%" y="383.50"></text></g><g><title>CRYPTO_THREAD_read_lock (5 samples, 2.00%)</title><rect x="66.0000%" y="389" width="2.0000%" height="15" fill="rgb(250,152,24)" fg:x="165" fg:w="5"/><text x="66.2500%" y="399.50">C..</text></g><g><title>___pthread_rwlock_rdlock (5 samples, 2.00%)</title><rect x="66.0000%" y="373" width="2.0000%" height="15" fill="rgb(209,150,17)" fg:x="165" fg:w="5"/><text x="66.2500%" y="383.50">_..</text></g><g><title>__pthread_rwlock_rdlock_full64 (5 samples, 2.00%)</title><rect x="66.0000%" y="357" width="2.0000%" height="15" fill="rgb(234,202,34)" fg:x="165" fg:w="5"/><text x="66.2500%" y="367.50">_..</text></g><g><title>CRYPTO_THREAD_unlock (12 samples, 4.80%)</title><rect x="68.0000%" y="389" width="4.8000%" height="15" fill="rgb(253,148,53)" fg:x="170" fg:w="12"/><text x="68.2500%" y="399.50">CRYPTO..</text></g><g><title>___pthread_rwlock_unlock (12 samples, 4.80%)</title><rect x="68.0000%" y="373" width="4.8000%" height="15" fill="rgb(218,129,16)" fg:x="170" fg:w="12"/><text x="68.2500%" y="383.50">___pth..</text></g><g><title>__pthread_rwlock_rdunlock (11 samples, 4.40%)</title><rect x="68.4000%" y="357" width="4.4000%" height="15" fill="rgb(216,85,19)" fg:x="171" fg:w="11"/><text x="68.6500%" y="367.50">__pth..</text></g><g><title>__pthread_rwlock_get_private (1 samples, 0.40%)</title><rect x="72.4000%" y="341" width="0.4000%" height="15" fill="rgb(235,228,7)" fg:x="181" fg:w="1"/><text x="72.6500%" y="351.50"></text></g><g><title>OSSL_DECODER_is_a (33 samples, 13.20%)</title><rect x="63.6000%" y="437" width="13.2000%" height="15" fill="rgb(245,175,0)" fg:x="159" fg:w="33"/><text x="63.8500%" y="447.50">OSSL_DECODER_is_a</text></g><g><title>[libcrypto.so.3] (33 samples, 13.20%)</title><rect x="63.6000%" y="421" width="13.2000%" height="15" fill="rgb(208,168,36)" fg:x="159" fg:w="33"/><text x="63.8500%" y="431.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (29 samples, 11.60%)</title><rect x="65.2000%" y="405" width="11.6000%" height="15" fill="rgb(246,171,24)" fg:x="163" fg:w="29"/><text x="65.4500%" y="415.50">[libcrypto.so.3]</text></g><g><title>OPENSSL_LH_retrieve (10 samples, 4.00%)</title><rect x="72.8000%" y="389" width="4.0000%" height="15" fill="rgb(215,142,24)" fg:x="182" fg:w="10"/><text x="73.0500%" y="399.50">OPEN..</text></g><g><title>[libcrypto.so.3] (9 samples, 3.60%)</title><rect x="73.2000%" y="373" width="3.6000%" height="15" fill="rgb(250,187,7)" fg:x="183" fg:w="9"/><text x="73.4500%" y="383.50">[lib..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 2.00%)</title><rect x="74.8000%" y="357" width="2.0000%" height="15" fill="rgb(228,66,33)" fg:x="187" fg:w="5"/><text x="75.0500%" y="367.50">a..</text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 2.00%)</title><rect x="74.8000%" y="341" width="2.0000%" height="15" fill="rgb(234,215,21)" fg:x="187" fg:w="5"/><text x="75.0500%" y="351.50">s..</text></g><g><title>irqentry_exit (5 samples, 2.00%)</title><rect x="74.8000%" y="325" width="2.0000%" height="15" fill="rgb(222,191,20)" fg:x="187" fg:w="5"/><text x="75.0500%" y="335.50">i..</text></g><g><title>irqentry_exit_to_user_mode (5 samples, 2.00%)</title><rect x="74.8000%" y="309" width="2.0000%" height="15" fill="rgb(245,79,54)" fg:x="187" fg:w="5"/><text x="75.0500%" y="319.50">i..</text></g><g><title>exit_to_user_mode_prepare (5 samples, 2.00%)</title><rect x="74.8000%" y="293" width="2.0000%" height="15" fill="rgb(240,10,37)" fg:x="187" fg:w="5"/><text x="75.0500%" y="303.50">e..</text></g><g><title>exit_to_user_mode_loop (5 samples, 2.00%)</title><rect x="74.8000%" y="277" width="2.0000%" height="15" fill="rgb(214,192,32)" fg:x="187" fg:w="5"/><text x="75.0500%" y="287.50">e..</text></g><g><title>schedule (5 samples, 2.00%)</title><rect x="74.8000%" y="261" width="2.0000%" height="15" fill="rgb(209,36,54)" fg:x="187" fg:w="5"/><text x="75.0500%" y="271.50">s..</text></g><g><title>__schedule (5 samples, 2.00%)</title><rect x="74.8000%" y="245" width="2.0000%" height="15" fill="rgb(220,10,11)" fg:x="187" fg:w="5"/><text x="75.0500%" y="255.50">_..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.00%)</title><rect x="74.8000%" y="229" width="2.0000%" height="15" fill="rgb(221,106,17)" fg:x="187" fg:w="5"/><text x="75.0500%" y="239.50">f..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.00%)</title><rect x="74.8000%" y="213" width="2.0000%" height="15" fill="rgb(251,142,44)" fg:x="187" fg:w="5"/><text x="75.0500%" y="223.50">_..</text></g><g><title>x86_pmu_enable (5 samples, 2.00%)</title><rect x="74.8000%" y="197" width="2.0000%" height="15" fill="rgb(238,13,15)" fg:x="187" fg:w="5"/><text x="75.0500%" y="207.50">x..</text></g><g><title>intel_pmu_enable_all (5 samples, 2.00%)</title><rect x="74.8000%" y="181" width="2.0000%" height="15" fill="rgb(208,107,27)" fg:x="187" fg:w="5"/><text x="75.0500%" y="191.50">i..</text></g><g><title>native_write_msr (5 samples, 2.00%)</title><rect x="74.8000%" y="165" width="2.0000%" height="15" fill="rgb(205,136,37)" fg:x="187" fg:w="5"/><text x="75.0500%" y="175.50">n..</text></g><g><title>OSSL_DECODER_CTX_add_extra (39 samples, 15.60%)</title><rect x="61.6000%" y="453" width="15.6000%" height="15" fill="rgb(250,205,27)" fg:x="154" fg:w="39"/><text x="61.8500%" y="463.50">OSSL_DECODER_CTX_add_ext..</text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="76.8000%" y="437" width="0.4000%" height="15" fill="rgb(210,80,43)" fg:x="192" fg:w="1"/><text x="77.0500%" y="447.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="76.8000%" y="421" width="0.4000%" height="15" fill="rgb(247,160,36)" fg:x="192" fg:w="1"/><text x="77.0500%" y="431.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="76.8000%" y="405" width="0.4000%" height="15" fill="rgb(234,13,49)" fg:x="192" fg:w="1"/><text x="77.0500%" y="415.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="76.8000%" y="389" width="0.4000%" height="15" fill="rgb(234,122,0)" fg:x="192" fg:w="1"/><text x="77.0500%" y="399.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="76.8000%" y="373" width="0.4000%" height="15" fill="rgb(207,146,38)" fg:x="192" fg:w="1"/><text x="77.0500%" y="383.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.40%)</title><rect x="78.8000%" y="357" width="0.4000%" height="15" fill="rgb(207,177,25)" fg:x="197" fg:w="1"/><text x="79.0500%" y="367.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.40%)</title><rect x="78.8000%" y="341" width="0.4000%" height="15" fill="rgb(211,178,42)" fg:x="197" fg:w="1"/><text x="79.0500%" y="351.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (1 samples, 0.40%)</title><rect x="78.8000%" y="325" width="0.4000%" height="15" fill="rgb(230,69,54)" fg:x="197" fg:w="1"/><text x="79.0500%" y="335.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.80%)</title><rect x="79.2000%" y="341" width="0.8000%" height="15" fill="rgb(214,135,41)" fg:x="198" fg:w="2"/><text x="79.4500%" y="351.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.80%)</title><rect x="79.2000%" y="325" width="0.8000%" height="15" fill="rgb(237,67,25)" fg:x="198" fg:w="2"/><text x="79.4500%" y="335.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (2 samples, 0.80%)</title><rect x="79.2000%" y="309" width="0.8000%" height="15" fill="rgb(222,189,50)" fg:x="198" fg:w="2"/><text x="79.4500%" y="319.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="80.0000%" y="341" width="0.4000%" height="15" fill="rgb(245,148,34)" fg:x="200" fg:w="1"/><text x="80.2500%" y="351.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="80.0000%" y="325" width="0.4000%" height="15" fill="rgb(222,29,6)" fg:x="200" fg:w="1"/><text x="80.2500%" y="335.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.40%)</title><rect x="80.0000%" y="309" width="0.4000%" height="15" fill="rgb(221,189,43)" fg:x="200" fg:w="1"/><text x="80.2500%" y="319.50"></text></g><g><title>OSSL_DECODER_is_a (6 samples, 2.40%)</title><rect x="78.8000%" y="389" width="2.4000%" height="15" fill="rgb(207,36,27)" fg:x="197" fg:w="6"/><text x="79.0500%" y="399.50">OS..</text></g><g><title>[libcrypto.so.3] (6 samples, 2.40%)</title><rect x="78.8000%" y="373" width="2.4000%" height="15" fill="rgb(217,90,24)" fg:x="197" fg:w="6"/><text x="79.0500%" y="383.50">[l..</text></g><g><title>[libcrypto.so.3] (5 samples, 2.00%)</title><rect x="79.2000%" y="357" width="2.0000%" height="15" fill="rgb(224,66,35)" fg:x="198" fg:w="5"/><text x="79.4500%" y="367.50">[..</text></g><g><title>OPENSSL_LH_retrieve (2 samples, 0.80%)</title><rect x="80.4000%" y="341" width="0.8000%" height="15" fill="rgb(221,13,50)" fg:x="201" fg:w="2"/><text x="80.6500%" y="351.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="80.4000%" y="325" width="0.8000%" height="15" fill="rgb(236,68,49)" fg:x="201" fg:w="2"/><text x="80.6500%" y="335.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.40%)</title><rect x="81.2000%" y="357" width="0.4000%" height="15" fill="rgb(229,146,28)" fg:x="203" fg:w="1"/><text x="81.4500%" y="367.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="81.6000%" y="341" width="0.4000%" height="15" fill="rgb(225,31,38)" fg:x="204" fg:w="1"/><text x="81.8500%" y="351.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="81.6000%" y="325" width="0.4000%" height="15" fill="rgb(250,208,3)" fg:x="204" fg:w="1"/><text x="81.8500%" y="335.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.40%)</title><rect x="81.6000%" y="309" width="0.4000%" height="15" fill="rgb(246,54,23)" fg:x="204" fg:w="1"/><text x="81.8500%" y="319.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.80%)</title><rect x="82.0000%" y="325" width="0.8000%" height="15" fill="rgb(243,76,11)" fg:x="205" fg:w="2"/><text x="82.2500%" y="335.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.80%)</title><rect x="82.0000%" y="309" width="0.8000%" height="15" fill="rgb(245,21,50)" fg:x="205" fg:w="2"/><text x="82.2500%" y="319.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (2 samples, 0.80%)</title><rect x="82.0000%" y="293" width="0.8000%" height="15" fill="rgb(228,9,43)" fg:x="205" fg:w="2"/><text x="82.2500%" y="303.50"></text></g><g><title>__GI___futex_abstimed_wait64 (1 samples, 0.40%)</title><rect x="82.4000%" y="277" width="0.4000%" height="15" fill="rgb(208,100,47)" fg:x="206" fg:w="1"/><text x="82.6500%" y="287.50"></text></g><g><title>__futex_abstimed_wait_common (1 samples, 0.40%)</title><rect x="82.4000%" y="261" width="0.4000%" height="15" fill="rgb(232,26,8)" fg:x="206" fg:w="1"/><text x="82.6500%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="82.4000%" y="245" width="0.4000%" height="15" fill="rgb(216,166,38)" fg:x="206" fg:w="1"/><text x="82.6500%" y="255.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="82.4000%" y="229" width="0.4000%" height="15" fill="rgb(251,202,51)" fg:x="206" fg:w="1"/><text x="82.6500%" y="239.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="82.4000%" y="213" width="0.4000%" height="15" fill="rgb(254,216,34)" fg:x="206" fg:w="1"/><text x="82.6500%" y="223.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="82.4000%" y="197" width="0.4000%" height="15" fill="rgb(251,32,27)" fg:x="206" fg:w="1"/><text x="82.6500%" y="207.50"></text></g><g><title>futex_wait (1 samples, 0.40%)</title><rect x="82.4000%" y="181" width="0.4000%" height="15" fill="rgb(208,127,28)" fg:x="206" fg:w="1"/><text x="82.6500%" y="191.50"></text></g><g><title>futex_wait_setup (1 samples, 0.40%)</title><rect x="82.4000%" y="165" width="0.4000%" height="15" fill="rgb(224,137,22)" fg:x="206" fg:w="1"/><text x="82.6500%" y="175.50"></text></g><g><title>__entry_text_start (1 samples, 0.40%)</title><rect x="83.2000%" y="261" width="0.4000%" height="15" fill="rgb(254,70,32)" fg:x="208" fg:w="1"/><text x="83.4500%" y="271.50"></text></g><g><title>CRYPTO_THREAD_unlock (3 samples, 1.20%)</title><rect x="82.8000%" y="325" width="1.2000%" height="15" fill="rgb(229,75,37)" fg:x="207" fg:w="3"/><text x="83.0500%" y="335.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.80%)</title><rect x="83.2000%" y="309" width="0.8000%" height="15" fill="rgb(252,64,23)" fg:x="208" fg:w="2"/><text x="83.4500%" y="319.50"></text></g><g><title>__pthread_rwlock_wrunlock (2 samples, 0.80%)</title><rect x="83.2000%" y="293" width="0.8000%" height="15" fill="rgb(232,162,48)" fg:x="208" fg:w="2"/><text x="83.4500%" y="303.50"></text></g><g><title>futex_wake (2 samples, 0.80%)</title><rect x="83.2000%" y="277" width="0.8000%" height="15" fill="rgb(246,160,12)" fg:x="208" fg:w="2"/><text x="83.4500%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="83.6000%" y="261" width="0.4000%" height="15" fill="rgb(247,166,0)" fg:x="209" fg:w="1"/><text x="83.8500%" y="271.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="83.6000%" y="245" width="0.4000%" height="15" fill="rgb(249,219,21)" fg:x="209" fg:w="1"/><text x="83.8500%" y="255.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.40%)</title><rect x="83.6000%" y="229" width="0.4000%" height="15" fill="rgb(205,209,3)" fg:x="209" fg:w="1"/><text x="83.8500%" y="239.50"></text></g><g><title>do_futex (1 samples, 0.40%)</title><rect x="83.6000%" y="213" width="0.4000%" height="15" fill="rgb(243,44,1)" fg:x="209" fg:w="1"/><text x="83.8500%" y="223.50"></text></g><g><title>futex_wake (1 samples, 0.40%)</title><rect x="83.6000%" y="197" width="0.4000%" height="15" fill="rgb(206,159,16)" fg:x="209" fg:w="1"/><text x="83.8500%" y="207.50"></text></g><g><title>OPENSSL_LH_retrieve (3 samples, 1.20%)</title><rect x="84.0000%" y="325" width="1.2000%" height="15" fill="rgb(244,77,30)" fg:x="210" fg:w="3"/><text x="84.2500%" y="335.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="84.4000%" y="309" width="0.8000%" height="15" fill="rgb(218,69,12)" fg:x="211" fg:w="2"/><text x="84.6500%" y="319.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.40%)</title><rect x="84.8000%" y="293" width="0.4000%" height="15" fill="rgb(212,87,7)" fg:x="212" fg:w="1"/><text x="85.0500%" y="303.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 0.80%)</title><rect x="85.6000%" y="309" width="0.8000%" height="15" fill="rgb(245,114,25)" fg:x="214" fg:w="2"/><text x="85.8500%" y="319.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.80%)</title><rect x="85.6000%" y="293" width="0.8000%" height="15" fill="rgb(210,61,42)" fg:x="214" fg:w="2"/><text x="85.8500%" y="303.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (2 samples, 0.80%)</title><rect x="85.6000%" y="277" width="0.8000%" height="15" fill="rgb(211,52,33)" fg:x="214" fg:w="2"/><text x="85.8500%" y="287.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.40%)</title><rect x="86.4000%" y="309" width="0.4000%" height="15" fill="rgb(234,58,33)" fg:x="216" fg:w="1"/><text x="86.6500%" y="319.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.40%)</title><rect x="86.4000%" y="293" width="0.4000%" height="15" fill="rgb(220,115,36)" fg:x="216" fg:w="1"/><text x="86.6500%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 2.00%)</title><rect x="86.8000%" y="277" width="2.0000%" height="15" fill="rgb(243,153,54)" fg:x="217" fg:w="5"/><text x="87.0500%" y="287.50">a..</text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 2.00%)</title><rect x="86.8000%" y="261" width="2.0000%" height="15" fill="rgb(251,47,18)" fg:x="217" fg:w="5"/><text x="87.0500%" y="271.50">s..</text></g><g><title>irqentry_exit (5 samples, 2.00%)</title><rect x="86.8000%" y="245" width="2.0000%" height="15" fill="rgb(242,102,42)" fg:x="217" fg:w="5"/><text x="87.0500%" y="255.50">i..</text></g><g><title>irqentry_exit_to_user_mode (5 samples, 2.00%)</title><rect x="86.8000%" y="229" width="2.0000%" height="15" fill="rgb(234,31,38)" fg:x="217" fg:w="5"/><text x="87.0500%" y="239.50">i..</text></g><g><title>exit_to_user_mode_prepare (5 samples, 2.00%)</title><rect x="86.8000%" y="213" width="2.0000%" height="15" fill="rgb(221,117,51)" fg:x="217" fg:w="5"/><text x="87.0500%" y="223.50">e..</text></g><g><title>exit_to_user_mode_loop (5 samples, 2.00%)</title><rect x="86.8000%" y="197" width="2.0000%" height="15" fill="rgb(212,20,18)" fg:x="217" fg:w="5"/><text x="87.0500%" y="207.50">e..</text></g><g><title>schedule (5 samples, 2.00%)</title><rect x="86.8000%" y="181" width="2.0000%" height="15" fill="rgb(245,133,36)" fg:x="217" fg:w="5"/><text x="87.0500%" y="191.50">s..</text></g><g><title>__schedule (5 samples, 2.00%)</title><rect x="86.8000%" y="165" width="2.0000%" height="15" fill="rgb(212,6,19)" fg:x="217" fg:w="5"/><text x="87.0500%" y="175.50">_..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 2.00%)</title><rect x="86.8000%" y="149" width="2.0000%" height="15" fill="rgb(218,1,36)" fg:x="217" fg:w="5"/><text x="87.0500%" y="159.50">f..</text></g><g><title>__perf_event_task_sched_in (5 samples, 2.00%)</title><rect x="86.8000%" y="133" width="2.0000%" height="15" fill="rgb(246,84,54)" fg:x="217" fg:w="5"/><text x="87.0500%" y="143.50">_..</text></g><g><title>x86_pmu_enable (5 samples, 2.00%)</title><rect x="86.8000%" y="117" width="2.0000%" height="15" fill="rgb(242,110,6)" fg:x="217" fg:w="5"/><text x="87.0500%" y="127.50">x..</text></g><g><title>intel_pmu_enable_all (5 samples, 2.00%)</title><rect x="86.8000%" y="101" width="2.0000%" height="15" fill="rgb(214,47,5)" fg:x="217" fg:w="5"/><text x="87.0500%" y="111.50">i..</text></g><g><title>native_write_msr (5 samples, 2.00%)</title><rect x="86.8000%" y="85" width="2.0000%" height="15" fill="rgb(218,159,25)" fg:x="217" fg:w="5"/><text x="87.0500%" y="95.50">n..</text></g><g><title>CRYPTO_strndup (6 samples, 2.40%)</title><rect x="86.8000%" y="309" width="2.4000%" height="15" fill="rgb(215,211,28)" fg:x="217" fg:w="6"/><text x="87.0500%" y="319.50">CR..</text></g><g><title>__GI___libc_malloc (6 samples, 2.40%)</title><rect x="86.8000%" y="293" width="2.4000%" height="15" fill="rgb(238,59,32)" fg:x="217" fg:w="6"/><text x="87.0500%" y="303.50">__..</text></g><g><title>tcache_get (1 samples, 0.40%)</title><rect x="88.8000%" y="277" width="0.4000%" height="15" fill="rgb(226,82,3)" fg:x="222" fg:w="1"/><text x="89.0500%" y="287.50"></text></g><g><title>OPENSSL_LH_retrieve (2 samples, 0.80%)</title><rect x="89.2000%" y="309" width="0.8000%" height="15" fill="rgb(240,164,32)" fg:x="223" fg:w="2"/><text x="89.4500%" y="319.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="89.2000%" y="293" width="0.8000%" height="15" fill="rgb(232,46,7)" fg:x="223" fg:w="2"/><text x="89.4500%" y="303.50"></text></g><g><title>CRYPTO_THREAD_read_lock (1 samples, 0.40%)</title><rect x="90.4000%" y="293" width="0.4000%" height="15" fill="rgb(229,129,53)" fg:x="226" fg:w="1"/><text x="90.6500%" y="303.50"></text></g><g><title>___pthread_rwlock_rdlock (1 samples, 0.40%)</title><rect x="90.4000%" y="277" width="0.4000%" height="15" fill="rgb(234,188,29)" fg:x="226" fg:w="1"/><text x="90.6500%" y="287.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (1 samples, 0.40%)</title><rect x="90.4000%" y="261" width="0.4000%" height="15" fill="rgb(246,141,4)" fg:x="226" fg:w="1"/><text x="90.6500%" y="271.50"></text></g><g><title>CRYPTO_THREAD_read_lock (3 samples, 1.20%)</title><rect x="90.8000%" y="277" width="1.2000%" height="15" fill="rgb(229,23,39)" fg:x="227" fg:w="3"/><text x="91.0500%" y="287.50"></text></g><g><title>___pthread_rwlock_rdlock (3 samples, 1.20%)</title><rect x="90.8000%" y="261" width="1.2000%" height="15" fill="rgb(206,12,3)" fg:x="227" fg:w="3"/><text x="91.0500%" y="271.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (3 samples, 1.20%)</title><rect x="90.8000%" y="245" width="1.2000%" height="15" fill="rgb(252,226,20)" fg:x="227" fg:w="3"/><text x="91.0500%" y="255.50"></text></g><g><title>CRYPTO_THREAD_unlock (3 samples, 1.20%)</title><rect x="92.0000%" y="277" width="1.2000%" height="15" fill="rgb(216,123,35)" fg:x="230" fg:w="3"/><text x="92.2500%" y="287.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 1.20%)</title><rect x="92.0000%" y="261" width="1.2000%" height="15" fill="rgb(212,68,40)" fg:x="230" fg:w="3"/><text x="92.2500%" y="271.50"></text></g><g><title>__pthread_rwlock_rdunlock (2 samples, 0.80%)</title><rect x="92.4000%" y="245" width="0.8000%" height="15" fill="rgb(254,125,32)" fg:x="231" fg:w="2"/><text x="92.6500%" y="255.50"></text></g><g><title>OSSL_DECODER_do_all_provided (44 samples, 17.60%)</title><rect x="77.2000%" y="453" width="17.6000%" height="15" fill="rgb(253,97,22)" fg:x="193" fg:w="44"/><text x="77.4500%" y="463.50">OSSL_DECODER_do_all_provided</text></g><g><title>[libcrypto.so.3] (44 samples, 17.60%)</title><rect x="77.2000%" y="437" width="17.6000%" height="15" fill="rgb(241,101,14)" fg:x="193" fg:w="44"/><text x="77.4500%" y="447.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (41 samples, 16.40%)</title><rect x="78.4000%" y="421" width="16.4000%" height="15" fill="rgb(238,103,29)" fg:x="196" fg:w="41"/><text x="78.6500%" y="431.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (41 samples, 16.40%)</title><rect x="78.4000%" y="405" width="16.4000%" height="15" fill="rgb(233,195,47)" fg:x="196" fg:w="41"/><text x="78.6500%" y="415.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (34 samples, 13.60%)</title><rect x="81.2000%" y="389" width="13.6000%" height="15" fill="rgb(246,218,30)" fg:x="203" fg:w="34"/><text x="81.4500%" y="399.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (34 samples, 13.60%)</title><rect x="81.2000%" y="373" width="13.6000%" height="15" fill="rgb(219,145,47)" fg:x="203" fg:w="34"/><text x="81.4500%" y="383.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (33 samples, 13.20%)</title><rect x="81.6000%" y="357" width="13.2000%" height="15" fill="rgb(243,12,26)" fg:x="204" fg:w="33"/><text x="81.8500%" y="367.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (32 samples, 12.80%)</title><rect x="82.0000%" y="341" width="12.8000%" height="15" fill="rgb(214,87,16)" fg:x="205" fg:w="32"/><text x="82.2500%" y="351.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (24 samples, 9.60%)</title><rect x="85.2000%" y="325" width="9.6000%" height="15" fill="rgb(208,99,42)" fg:x="213" fg:w="24"/><text x="85.4500%" y="335.50">[libcrypto.so...</text></g><g><title>[libcrypto.so.3] (12 samples, 4.80%)</title><rect x="90.0000%" y="309" width="4.8000%" height="15" fill="rgb(253,99,2)" fg:x="225" fg:w="12"/><text x="90.2500%" y="319.50">[libcr..</text></g><g><title>[libcrypto.so.3] (10 samples, 4.00%)</title><rect x="90.8000%" y="293" width="4.0000%" height="15" fill="rgb(220,168,23)" fg:x="227" fg:w="10"/><text x="91.0500%" y="303.50">[lib..</text></g><g><title>OPENSSL_LH_retrieve (4 samples, 1.60%)</title><rect x="93.2000%" y="277" width="1.6000%" height="15" fill="rgb(242,38,24)" fg:x="233" fg:w="4"/><text x="93.4500%" y="287.50"></text></g><g><title>[libcrypto.so.3] (4 samples, 1.60%)</title><rect x="93.2000%" y="261" width="1.6000%" height="15" fill="rgb(225,182,9)" fg:x="233" fg:w="4"/><text x="93.4500%" y="271.50"></text></g><g><title>OPENSSL_LH_strhash (1 samples, 0.40%)</title><rect x="94.4000%" y="245" width="0.4000%" height="15" fill="rgb(243,178,37)" fg:x="236" fg:w="1"/><text x="94.6500%" y="255.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (107 samples, 42.80%)</title><rect x="52.4000%" y="469" width="42.8000%" height="15" fill="rgb(232,139,19)" fg:x="131" fg:w="107"/><text x="52.6500%" y="479.50">OSSL_DECODER_CTX_new_for_pkey</text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="94.8000%" y="453" width="0.4000%" height="15" fill="rgb(225,201,24)" fg:x="237" fg:w="1"/><text x="95.0500%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.40%)</title><rect x="94.8000%" y="437" width="0.4000%" height="15" fill="rgb(221,47,46)" fg:x="237" fg:w="1"/><text x="95.0500%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.40%)</title><rect x="94.8000%" y="421" width="0.4000%" height="15" fill="rgb(249,23,13)" fg:x="237" fg:w="1"/><text x="95.0500%" y="431.50"></text></g><g><title>sysmalloc (1 samples, 0.40%)</title><rect x="94.8000%" y="405" width="0.4000%" height="15" fill="rgb(219,9,5)" fg:x="237" fg:w="1"/><text x="95.0500%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="389" width="0.4000%" height="15" fill="rgb(254,171,16)" fg:x="237" fg:w="1"/><text x="95.0500%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="373" width="0.4000%" height="15" fill="rgb(230,171,20)" fg:x="237" fg:w="1"/><text x="95.0500%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="357" width="0.4000%" height="15" fill="rgb(210,71,41)" fg:x="237" fg:w="1"/><text x="95.0500%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="341" width="0.4000%" height="15" fill="rgb(206,173,20)" fg:x="237" fg:w="1"/><text x="95.0500%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="325" width="0.4000%" height="15" fill="rgb(233,88,34)" fg:x="237" fg:w="1"/><text x="95.0500%" y="335.50"></text></g><g><title>handle_pte_fault (1 samples, 0.40%)</title><rect x="94.8000%" y="309" width="0.4000%" height="15" fill="rgb(223,209,46)" fg:x="237" fg:w="1"/><text x="95.0500%" y="319.50"></text></g><g><title>do_anonymous_page (1 samples, 0.40%)</title><rect x="94.8000%" y="293" width="0.4000%" height="15" fill="rgb(250,43,18)" fg:x="237" fg:w="1"/><text x="95.0500%" y="303.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.40%)</title><rect x="94.8000%" y="277" width="0.4000%" height="15" fill="rgb(208,13,10)" fg:x="237" fg:w="1"/><text x="95.0500%" y="287.50"></text></g><g><title>__alloc_pages (1 samples, 0.40%)</title><rect x="94.8000%" y="261" width="0.4000%" height="15" fill="rgb(212,200,36)" fg:x="237" fg:w="1"/><text x="95.0500%" y="271.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.40%)</title><rect x="94.8000%" y="245" width="0.4000%" height="15" fill="rgb(225,90,30)" fg:x="237" fg:w="1"/><text x="95.0500%" y="255.50"></text></g><g><title>clear_page_erms (1 samples, 0.40%)</title><rect x="94.8000%" y="229" width="0.4000%" height="15" fill="rgb(236,182,39)" fg:x="237" fg:w="1"/><text x="95.0500%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.2000%" y="373" width="0.4000%" height="15" fill="rgb(212,144,35)" fg:x="238" fg:w="1"/><text x="95.4500%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.2000%" y="357" width="0.4000%" height="15" fill="rgb(228,63,44)" fg:x="238" fg:w="1"/><text x="95.4500%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.2000%" y="341" width="0.4000%" height="15" fill="rgb(228,109,6)" fg:x="238" fg:w="1"/><text x="95.4500%" y="351.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1 samples, 0.40%)</title><rect x="95.2000%" y="325" width="0.4000%" height="15" fill="rgb(238,117,24)" fg:x="238" fg:w="1"/><text x="95.4500%" y="335.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.2000%" y="309" width="0.4000%" height="15" fill="rgb(242,26,26)" fg:x="238" fg:w="1"/><text x="95.4500%" y="319.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.40%)</title><rect x="95.2000%" y="293" width="0.4000%" height="15" fill="rgb(221,92,48)" fg:x="238" fg:w="1"/><text x="95.4500%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.2000%" y="277" width="0.4000%" height="15" fill="rgb(209,209,32)" fg:x="238" fg:w="1"/><text x="95.4500%" y="287.50"></text></g><g><title>ASN1_item_d2i_ex (110 samples, 44.00%)</title><rect x="52.0000%" y="581" width="44.0000%" height="15" fill="rgb(221,70,22)" fg:x="130" fg:w="110"/><text x="52.2500%" y="591.50">ASN1_item_d2i_ex</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="565" width="44.0000%" height="15" fill="rgb(248,145,5)" fg:x="130" fg:w="110"/><text x="52.2500%" y="575.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="549" width="44.0000%" height="15" fill="rgb(226,116,26)" fg:x="130" fg:w="110"/><text x="52.2500%" y="559.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="533" width="44.0000%" height="15" fill="rgb(244,5,17)" fg:x="130" fg:w="110"/><text x="52.2500%" y="543.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="517" width="44.0000%" height="15" fill="rgb(252,159,33)" fg:x="130" fg:w="110"/><text x="52.2500%" y="527.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="501" width="44.0000%" height="15" fill="rgb(206,71,0)" fg:x="130" fg:w="110"/><text x="52.2500%" y="511.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (110 samples, 44.00%)</title><rect x="52.0000%" y="485" width="44.0000%" height="15" fill="rgb(233,118,54)" fg:x="130" fg:w="110"/><text x="52.2500%" y="495.50">[libcrypto.so.3]</text></g><g><title>OSSL_DECODER_from_data (2 samples, 0.80%)</title><rect x="95.2000%" y="469" width="0.8000%" height="15" fill="rgb(234,83,48)" fg:x="238" fg:w="2"/><text x="95.4500%" y="479.50"></text></g><g><title>OSSL_DECODER_from_bio (2 samples, 0.80%)</title><rect x="95.2000%" y="453" width="0.8000%" height="15" fill="rgb(228,3,54)" fg:x="238" fg:w="2"/><text x="95.4500%" y="463.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="95.2000%" y="437" width="0.8000%" height="15" fill="rgb(226,155,13)" fg:x="238" fg:w="2"/><text x="95.4500%" y="447.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="95.2000%" y="421" width="0.8000%" height="15" fill="rgb(241,28,37)" fg:x="238" fg:w="2"/><text x="95.4500%" y="431.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="95.2000%" y="405" width="0.8000%" height="15" fill="rgb(233,93,10)" fg:x="238" fg:w="2"/><text x="95.4500%" y="415.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 0.80%)</title><rect x="95.2000%" y="389" width="0.8000%" height="15" fill="rgb(225,113,19)" fg:x="238" fg:w="2"/><text x="95.4500%" y="399.50"></text></g><g><title>d2i_RSA_PUBKEY (1 samples, 0.40%)</title><rect x="95.6000%" y="373" width="0.4000%" height="15" fill="rgb(241,2,18)" fg:x="239" fg:w="1"/><text x="95.8500%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="95.6000%" y="357" width="0.4000%" height="15" fill="rgb(228,207,21)" fg:x="239" fg:w="1"/><text x="95.8500%" y="367.50"></text></g><g><title>BIO_gets (1 samples, 0.40%)</title><rect x="96.0000%" y="565" width="0.4000%" height="15" fill="rgb(213,211,35)" fg:x="240" fg:w="1"/><text x="96.2500%" y="575.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.0000%" y="549" width="0.4000%" height="15" fill="rgb(209,83,10)" fg:x="240" fg:w="1"/><text x="96.2500%" y="559.50"></text></g><g><title>__fgets_chk (1 samples, 0.40%)</title><rect x="96.0000%" y="533" width="0.4000%" height="15" fill="rgb(209,164,1)" fg:x="240" fg:w="1"/><text x="96.2500%" y="543.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.40%)</title><rect x="96.0000%" y="517" width="0.4000%" height="15" fill="rgb(213,184,43)" fg:x="240" fg:w="1"/><text x="96.2500%" y="527.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.40%)</title><rect x="96.0000%" y="501" width="0.4000%" height="15" fill="rgb(231,61,34)" fg:x="240" fg:w="1"/><text x="96.2500%" y="511.50"></text></g><g><title>_IO_new_file_underflow (1 samples, 0.40%)</title><rect x="96.0000%" y="485" width="0.4000%" height="15" fill="rgb(235,75,3)" fg:x="240" fg:w="1"/><text x="96.2500%" y="495.50"></text></g><g><title>__GI___libc_read (1 samples, 0.40%)</title><rect x="96.0000%" y="469" width="0.4000%" height="15" fill="rgb(220,106,47)" fg:x="240" fg:w="1"/><text x="96.2500%" y="479.50"></text></g><g><title>__GI___libc_read (1 samples, 0.40%)</title><rect x="96.0000%" y="453" width="0.4000%" height="15" fill="rgb(210,196,33)" fg:x="240" fg:w="1"/><text x="96.2500%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="96.0000%" y="437" width="0.4000%" height="15" fill="rgb(229,154,42)" fg:x="240" fg:w="1"/><text x="96.2500%" y="447.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="96.0000%" y="421" width="0.4000%" height="15" fill="rgb(228,114,26)" fg:x="240" fg:w="1"/><text x="96.2500%" y="431.50"></text></g><g><title>__x64_sys_read (1 samples, 0.40%)</title><rect x="96.0000%" y="405" width="0.4000%" height="15" fill="rgb(208,144,1)" fg:x="240" fg:w="1"/><text x="96.2500%" y="415.50"></text></g><g><title>ksys_read (1 samples, 0.40%)</title><rect x="96.0000%" y="389" width="0.4000%" height="15" fill="rgb(239,112,37)" fg:x="240" fg:w="1"/><text x="96.2500%" y="399.50"></text></g><g><title>vfs_read (1 samples, 0.40%)</title><rect x="96.0000%" y="373" width="0.4000%" height="15" fill="rgb(210,96,50)" fg:x="240" fg:w="1"/><text x="96.2500%" y="383.50"></text></g><g><title>new_sync_read (1 samples, 0.40%)</title><rect x="96.0000%" y="357" width="0.4000%" height="15" fill="rgb(222,178,2)" fg:x="240" fg:w="1"/><text x="96.2500%" y="367.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.40%)</title><rect x="96.0000%" y="341" width="0.4000%" height="15" fill="rgb(226,74,18)" fg:x="240" fg:w="1"/><text x="96.2500%" y="351.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.40%)</title><rect x="96.0000%" y="325" width="0.4000%" height="15" fill="rgb(225,67,54)" fg:x="240" fg:w="1"/><text x="96.2500%" y="335.50"></text></g><g><title>filemap_read (1 samples, 0.40%)</title><rect x="96.0000%" y="309" width="0.4000%" height="15" fill="rgb(251,92,32)" fg:x="240" fg:w="1"/><text x="96.2500%" y="319.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.40%)</title><rect x="96.0000%" y="293" width="0.4000%" height="15" fill="rgb(228,149,22)" fg:x="240" fg:w="1"/><text x="96.2500%" y="303.50"></text></g><g><title>openssl::ssl::SslContextBuilder::set_default_verify_paths (112 samples, 44.80%)</title><rect x="52.0000%" y="661" width="44.8000%" height="15" fill="rgb(243,54,13)" fg:x="130" fg:w="112"/><text x="52.2500%" y="671.50">openssl::ssl::SslContextBuilder::set_default_verify_paths</text></g><g><title>X509_STORE_set_default_paths_ex (112 samples, 44.80%)</title><rect x="52.0000%" y="645" width="44.8000%" height="15" fill="rgb(243,180,28)" fg:x="130" fg:w="112"/><text x="52.2500%" y="655.50">X509_STORE_set_default_paths_ex</text></g><g><title>[libcrypto.so.3] (112 samples, 44.80%)</title><rect x="52.0000%" y="629" width="44.8000%" height="15" fill="rgb(208,167,24)" fg:x="130" fg:w="112"/><text x="52.2500%" y="639.50">[libcrypto.so.3]</text></g><g><title>X509_load_cert_crl_file_ex (112 samples, 44.80%)</title><rect x="52.0000%" y="613" width="44.8000%" height="15" fill="rgb(245,73,45)" fg:x="130" fg:w="112"/><text x="52.2500%" y="623.50">X509_load_cert_crl_file_ex</text></g><g><title>PEM_X509_INFO_read_bio_ex (112 samples, 44.80%)</title><rect x="52.0000%" y="597" width="44.8000%" height="15" fill="rgb(237,203,48)" fg:x="130" fg:w="112"/><text x="52.2500%" y="607.50">PEM_X509_INFO_read_bio_ex</text></g><g><title>PEM_read_bio_ex (2 samples, 0.80%)</title><rect x="96.0000%" y="581" width="0.8000%" height="15" fill="rgb(211,197,16)" fg:x="240" fg:w="2"/><text x="96.2500%" y="591.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.4000%" y="565" width="0.4000%" height="15" fill="rgb(243,99,51)" fg:x="241" fg:w="1"/><text x="96.6500%" y="575.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.40%)</title><rect x="96.8000%" y="597" width="0.4000%" height="15" fill="rgb(215,123,29)" fg:x="242" fg:w="1"/><text x="97.0500%" y="607.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.8000%" y="581" width="0.4000%" height="15" fill="rgb(239,186,37)" fg:x="242" fg:w="1"/><text x="97.0500%" y="591.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.8000%" y="565" width="0.4000%" height="15" fill="rgb(252,136,39)" fg:x="242" fg:w="1"/><text x="97.0500%" y="575.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.8000%" y="549" width="0.4000%" height="15" fill="rgb(223,213,32)" fg:x="242" fg:w="1"/><text x="97.0500%" y="559.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.8000%" y="533" width="0.4000%" height="15" fill="rgb(233,115,5)" fg:x="242" fg:w="1"/><text x="97.0500%" y="543.50"></text></g><g><title>EVP_CIPHER_free (1 samples, 0.40%)</title><rect x="96.8000%" y="517" width="0.4000%" height="15" fill="rgb(207,226,44)" fg:x="242" fg:w="1"/><text x="97.0500%" y="527.50"></text></g><g><title>CRYPTO_THREAD_lock_free (1 samples, 0.40%)</title><rect x="96.8000%" y="501" width="0.4000%" height="15" fill="rgb(208,126,0)" fg:x="242" fg:w="1"/><text x="97.0500%" y="511.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="96.8000%" y="485" width="0.4000%" height="15" fill="rgb(244,66,21)" fg:x="242" fg:w="1"/><text x="97.0500%" y="495.50"></text></g><g><title>SSL_CTX_new_ex (2 samples, 0.80%)</title><rect x="96.8000%" y="629" width="0.8000%" height="15" fill="rgb(222,97,12)" fg:x="242" fg:w="2"/><text x="97.0500%" y="639.50"></text></g><g><title>[libssl.so.3] (2 samples, 0.80%)</title><rect x="96.8000%" y="613" width="0.8000%" height="15" fill="rgb(219,213,19)" fg:x="242" fg:w="2"/><text x="97.0500%" y="623.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.40%)</title><rect x="97.2000%" y="597" width="0.4000%" height="15" fill="rgb(252,169,30)" fg:x="243" fg:w="1"/><text x="97.4500%" y="607.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.40%)</title><rect x="97.2000%" y="581" width="0.4000%" height="15" fill="rgb(206,32,51)" fg:x="243" fg:w="1"/><text x="97.4500%" y="591.50"></text></g><g><title>std::panic::catch_unwind (168 samples, 67.20%)</title><rect x="30.8000%" y="1541" width="67.2000%" height="15" fill="rgb(250,172,42)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1551.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (168 samples, 67.20%)</title><rect x="30.8000%" y="1525" width="67.2000%" height="15" fill="rgb(209,34,43)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1535.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (168 samples, 67.20%)</title><rect x="30.8000%" y="1509" width="67.2000%" height="15" fill="rgb(223,11,35)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1519.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (168 samples, 67.20%)</title><rect x="30.8000%" y="1493" width="67.2000%" height="15" fill="rgb(251,219,26)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1503.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (168 samples, 67.20%)</title><rect x="30.8000%" y="1477" width="67.2000%" height="15" fill="rgb(231,119,3)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1487.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (168 samples, 67.20%)</title><rect x="30.8000%" y="1461" width="67.2000%" height="15" fill="rgb(216,97,11)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1471.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (168 samples, 67.20%)</title><rect x="30.8000%" y="1445" width="67.2000%" height="15" fill="rgb(223,59,9)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1455.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (168 samples, 67.20%)</title><rect x="30.8000%" y="1429" width="67.2000%" height="15" fill="rgb(233,93,31)" fg:x="77" fg:w="168"/><text x="31.0500%" y="1439.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (141 samples, 56.40%)</title><rect x="41.6000%" y="1413" width="56.4000%" height="15" fill="rgb(239,81,33)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1423.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (141 samples, 56.40%)</title><rect x="41.6000%" y="1397" width="56.4000%" height="15" fill="rgb(213,120,34)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1407.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (141 samples, 56.40%)</title><rect x="41.6000%" y="1381" width="56.4000%" height="15" fill="rgb(243,49,53)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1391.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (141 samples, 56.40%)</title><rect x="41.6000%" y="1365" width="56.4000%" height="15" fill="rgb(247,216,33)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1375.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (141 samples, 56.40%)</title><rect x="41.6000%" y="1349" width="56.4000%" height="15" fill="rgb(226,26,14)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1359.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (141 samples, 56.40%)</title><rect x="41.6000%" y="1333" width="56.4000%" height="15" fill="rgb(215,49,53)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1343.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (141 samples, 56.40%)</title><rect x="41.6000%" y="1317" width="56.4000%" height="15" fill="rgb(245,162,40)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1327.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (141 samples, 56.40%)</title><rect x="41.6000%" y="1301" width="56.4000%" height="15" fill="rgb(229,68,17)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1311.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (141 samples, 56.40%)</title><rect x="41.6000%" y="1285" width="56.4000%" height="15" fill="rgb(213,182,10)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1295.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (141 samples, 56.40%)</title><rect x="41.6000%" y="1269" width="56.4000%" height="15" fill="rgb(245,125,30)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1279.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (141 samples, 56.40%)</title><rect x="41.6000%" y="1253" width="56.4000%" height="15" fill="rgb(232,202,2)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1263.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (141 samples, 56.40%)</title><rect x="41.6000%" y="1237" width="56.4000%" height="15" fill="rgb(237,140,51)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1247.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (141 samples, 56.40%)</title><rect x="41.6000%" y="1221" width="56.4000%" height="15" fill="rgb(236,157,25)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1231.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (141 samples, 56.40%)</title><rect x="41.6000%" y="1205" width="56.4000%" height="15" fill="rgb(219,209,0)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1215.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 56.40%)</title><rect x="41.6000%" y="1189" width="56.4000%" height="15" fill="rgb(240,116,54)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1199.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (141 samples, 56.40%)</title><rect x="41.6000%" y="1173" width="56.4000%" height="15" fill="rgb(216,10,36)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1183.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (141 samples, 56.40%)</title><rect x="41.6000%" y="1157" width="56.4000%" height="15" fill="rgb(222,72,44)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1167.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (141 samples, 56.40%)</title><rect x="41.6000%" y="1141" width="56.4000%" height="15" fill="rgb(232,159,9)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1151.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (141 samples, 56.40%)</title><rect x="41.6000%" y="1125" width="56.4000%" height="15" fill="rgb(210,39,32)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1135.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (141 samples, 56.40%)</title><rect x="41.6000%" y="1109" width="56.4000%" height="15" fill="rgb(216,194,45)" fg:x="104" fg:w="141"/><text x="41.8500%" y="1119.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (125 samples, 50.00%)</title><rect x="48.0000%" y="1093" width="50.0000%" height="15" fill="rgb(218,18,35)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1103.50">tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>tokio::coop::budget (125 samples, 50.00%)</title><rect x="48.0000%" y="1077" width="50.0000%" height="15" fill="rgb(207,83,51)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1087.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (125 samples, 50.00%)</title><rect x="48.0000%" y="1061" width="50.0000%" height="15" fill="rgb(225,63,43)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1071.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (125 samples, 50.00%)</title><rect x="48.0000%" y="1045" width="50.0000%" height="15" fill="rgb(207,57,36)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1055.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (125 samples, 50.00%)</title><rect x="48.0000%" y="1029" width="50.0000%" height="15" fill="rgb(216,99,33)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1039.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (125 samples, 50.00%)</title><rect x="48.0000%" y="1013" width="50.0000%" height="15" fill="rgb(225,42,16)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1023.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (125 samples, 50.00%)</title><rect x="48.0000%" y="997" width="50.0000%" height="15" fill="rgb(220,201,45)" fg:x="120" fg:w="125"/><text x="48.2500%" y="1007.50">tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (125 samples, 50.00%)</title><rect x="48.0000%" y="981" width="50.0000%" height="15" fill="rgb(225,33,4)" fg:x="120" fg:w="125"/><text x="48.2500%" y="991.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (125 samples, 50.00%)</title><rect x="48.0000%" y="965" width="50.0000%" height="15" fill="rgb(224,33,50)" fg:x="120" fg:w="125"/><text x="48.2500%" y="975.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (125 samples, 50.00%)</title><rect x="48.0000%" y="949" width="50.0000%" height="15" fill="rgb(246,198,51)" fg:x="120" fg:w="125"/><text x="48.2500%" y="959.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (125 samples, 50.00%)</title><rect x="48.0000%" y="933" width="50.0000%" height="15" fill="rgb(205,22,4)" fg:x="120" fg:w="125"/><text x="48.2500%" y="943.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (125 samples, 50.00%)</title><rect x="48.0000%" y="917" width="50.0000%" height="15" fill="rgb(206,3,8)" fg:x="120" fg:w="125"/><text x="48.2500%" y="927.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (125 samples, 50.00%)</title><rect x="48.0000%" y="901" width="50.0000%" height="15" fill="rgb(251,23,15)" fg:x="120" fg:w="125"/><text x="48.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (125 samples, 50.00%)</title><rect x="48.0000%" y="885" width="50.0000%" height="15" fill="rgb(252,88,28)" fg:x="120" fg:w="125"/><text x="48.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (125 samples, 50.00%)</title><rect x="48.0000%" y="869" width="50.0000%" height="15" fill="rgb(212,127,14)" fg:x="120" fg:w="125"/><text x="48.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (125 samples, 50.00%)</title><rect x="48.0000%" y="853" width="50.0000%" height="15" fill="rgb(247,145,37)" fg:x="120" fg:w="125"/><text x="48.2500%" y="863.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (125 samples, 50.00%)</title><rect x="48.0000%" y="837" width="50.0000%" height="15" fill="rgb(209,117,53)" fg:x="120" fg:w="125"/><text x="48.2500%" y="847.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (125 samples, 50.00%)</title><rect x="48.0000%" y="821" width="50.0000%" height="15" fill="rgb(212,90,42)" fg:x="120" fg:w="125"/><text x="48.2500%" y="831.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (125 samples, 50.00%)</title><rect x="48.0000%" y="805" width="50.0000%" height="15" fill="rgb(218,164,37)" fg:x="120" fg:w="125"/><text x="48.2500%" y="815.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (125 samples, 50.00%)</title><rect x="48.0000%" y="789" width="50.0000%" height="15" fill="rgb(246,65,34)" fg:x="120" fg:w="125"/><text x="48.2500%" y="799.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 50.00%)</title><rect x="48.0000%" y="773" width="50.0000%" height="15" fill="rgb(231,100,33)" fg:x="120" fg:w="125"/><text x="48.2500%" y="783.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>async_request_tasks::send_request::{{closure}} (125 samples, 50.00%)</title><rect x="48.0000%" y="757" width="50.0000%" height="15" fill="rgb(228,126,14)" fg:x="120" fg:w="125"/><text x="48.2500%" y="767.50">async_request_tasks::send_request::{{closure}}</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (115 samples, 46.00%)</title><rect x="52.0000%" y="741" width="46.0000%" height="15" fill="rgb(215,173,21)" fg:x="130" fg:w="115"/><text x="52.2500%" y="751.50">reqwest::async_impl::client::ClientBuilder::build</text></g><g><title>reqwest::connect::Connector::new_default_tls (115 samples, 46.00%)</title><rect x="52.0000%" y="725" width="46.0000%" height="15" fill="rgb(210,6,40)" fg:x="130" fg:w="115"/><text x="52.2500%" y="735.50">reqwest::connect::Connector::new_default_tls</text></g><g><title>native_tls::TlsConnectorBuilder::build (115 samples, 46.00%)</title><rect x="52.0000%" y="709" width="46.0000%" height="15" fill="rgb(212,48,18)" fg:x="130" fg:w="115"/><text x="52.2500%" y="719.50">native_tls::TlsConnectorBuilder::build</text></g><g><title>native_tls::imp::TlsConnector::new (115 samples, 46.00%)</title><rect x="52.0000%" y="693" width="46.0000%" height="15" fill="rgb(230,214,11)" fg:x="130" fg:w="115"/><text x="52.2500%" y="703.50">native_tls::imp::TlsConnector::new</text></g><g><title>openssl::ssl::connector::SslConnector::builder (115 samples, 46.00%)</title><rect x="52.0000%" y="677" width="46.0000%" height="15" fill="rgb(254,105,39)" fg:x="130" fg:w="115"/><text x="52.2500%" y="687.50">openssl::ssl::connector::SslConnector::builder</text></g><g><title>openssl::ssl::connector::ctx (3 samples, 1.20%)</title><rect x="96.8000%" y="661" width="1.2000%" height="15" fill="rgb(245,158,5)" fg:x="242" fg:w="3"/><text x="97.0500%" y="671.50"></text></g><g><title>openssl::ssl::SslContextBuilder::new (3 samples, 1.20%)</title><rect x="96.8000%" y="645" width="1.2000%" height="15" fill="rgb(249,208,11)" fg:x="242" fg:w="3"/><text x="97.0500%" y="655.50"></text></g><g><title>openssl_sys::init (1 samples, 0.40%)</title><rect x="97.6000%" y="629" width="0.4000%" height="15" fill="rgb(210,39,28)" fg:x="244" fg:w="1"/><text x="97.8500%" y="639.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.40%)</title><rect x="97.6000%" y="613" width="0.4000%" height="15" fill="rgb(211,56,53)" fg:x="244" fg:w="1"/><text x="97.8500%" y="623.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.40%)</title><rect x="97.6000%" y="597" width="0.4000%" height="15" fill="rgb(226,201,30)" fg:x="244" fg:w="1"/><text x="97.8500%" y="607.50"></text></g><g><title>OPENSSL_init_ssl (1 samples, 0.40%)</title><rect x="97.6000%" y="581" width="0.4000%" height="15" fill="rgb(239,101,34)" fg:x="244" fg:w="1"/><text x="97.8500%" y="591.50"></text></g><g><title>OPENSSL_init_crypto (1 samples, 0.40%)</title><rect x="97.6000%" y="565" width="0.4000%" height="15" fill="rgb(226,209,5)" fg:x="244" fg:w="1"/><text x="97.8500%" y="575.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.40%)</title><rect x="97.6000%" y="549" width="0.4000%" height="15" fill="rgb(250,105,47)" fg:x="244" fg:w="1"/><text x="97.8500%" y="559.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.40%)</title><rect x="97.6000%" y="533" width="0.4000%" height="15" fill="rgb(230,72,3)" fg:x="244" fg:w="1"/><text x="97.8500%" y="543.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="97.6000%" y="517" width="0.4000%" height="15" fill="rgb(232,218,39)" fg:x="244" fg:w="1"/><text x="97.8500%" y="527.50"></text></g><g><title>CONF_modules_load_file_ex (1 samples, 0.40%)</title><rect x="97.6000%" y="501" width="0.4000%" height="15" fill="rgb(248,166,6)" fg:x="244" fg:w="1"/><text x="97.8500%" y="511.50"></text></g><g><title>CONF_modules_load (1 samples, 0.40%)</title><rect x="97.6000%" y="485" width="0.4000%" height="15" fill="rgb(247,89,20)" fg:x="244" fg:w="1"/><text x="97.8500%" y="495.50"></text></g><g><title>CRYPTO_THREAD_run_once (1 samples, 0.40%)</title><rect x="97.6000%" y="469" width="0.4000%" height="15" fill="rgb(248,130,54)" fg:x="244" fg:w="1"/><text x="97.8500%" y="479.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.40%)</title><rect x="97.6000%" y="453" width="0.4000%" height="15" fill="rgb(234,196,4)" fg:x="244" fg:w="1"/><text x="97.8500%" y="463.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.40%)</title><rect x="97.6000%" y="437" width="0.4000%" height="15" fill="rgb(250,143,31)" fg:x="244" fg:w="1"/><text x="97.8500%" y="447.50"></text></g><g><title>OPENSSL_load_builtin_modules (1 samples, 0.40%)</title><rect x="97.6000%" y="421" width="0.4000%" height="15" fill="rgb(211,110,34)" fg:x="244" fg:w="1"/><text x="97.8500%" y="431.50"></text></g><g><title>ASN1_add_oid_module (1 samples, 0.40%)</title><rect x="97.6000%" y="405" width="0.4000%" height="15" fill="rgb(215,124,48)" fg:x="244" fg:w="1"/><text x="97.8500%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="389" width="0.4000%" height="15" fill="rgb(216,46,13)" fg:x="244" fg:w="1"/><text x="97.8500%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="373" width="0.4000%" height="15" fill="rgb(205,184,25)" fg:x="244" fg:w="1"/><text x="97.8500%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="357" width="0.4000%" height="15" fill="rgb(228,1,10)" fg:x="244" fg:w="1"/><text x="97.8500%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="341" width="0.4000%" height="15" fill="rgb(213,116,27)" fg:x="244" fg:w="1"/><text x="97.8500%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="325" width="0.4000%" height="15" fill="rgb(241,95,50)" fg:x="244" fg:w="1"/><text x="97.8500%" y="335.50"></text></g><g><title>handle_pte_fault (1 samples, 0.40%)</title><rect x="97.6000%" y="309" width="0.4000%" height="15" fill="rgb(238,48,32)" fg:x="244" fg:w="1"/><text x="97.8500%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.40%)</title><rect x="98.0000%" y="1461" width="0.4000%" height="15" fill="rgb(235,113,49)" fg:x="245" fg:w="1"/><text x="98.2500%" y="1471.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.40%)</title><rect x="98.4000%" y="1381" width="0.4000%" height="15" fill="rgb(205,127,43)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1391.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.40%)</title><rect x="98.4000%" y="1365" width="0.4000%" height="15" fill="rgb(250,162,2)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1375.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="98.4000%" y="1349" width="0.4000%" height="15" fill="rgb(220,13,41)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1359.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="98.4000%" y="1333" width="0.4000%" height="15" fill="rgb(249,221,25)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1343.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.40%)</title><rect x="98.4000%" y="1317" width="0.4000%" height="15" fill="rgb(215,208,19)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1327.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.40%)</title><rect x="98.4000%" y="1301" width="0.4000%" height="15" fill="rgb(236,175,2)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1311.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.40%)</title><rect x="98.4000%" y="1285" width="0.4000%" height="15" fill="rgb(241,52,2)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1295.50"></text></g><g><title>down_write_killable (1 samples, 0.40%)</title><rect x="98.4000%" y="1269" width="0.4000%" height="15" fill="rgb(248,140,14)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1279.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.40%)</title><rect x="98.4000%" y="1253" width="0.4000%" height="15" fill="rgb(253,22,42)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1263.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.40%)</title><rect x="98.4000%" y="1237" width="0.4000%" height="15" fill="rgb(234,61,47)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1247.50"></text></g><g><title>rwsem_spin_on_owner (1 samples, 0.40%)</title><rect x="98.4000%" y="1221" width="0.4000%" height="15" fill="rgb(208,226,15)" fg:x="246" fg:w="1"/><text x="98.6500%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (171 samples, 68.40%)</title><rect x="30.8000%" y="1605" width="68.4000%" height="15" fill="rgb(217,221,4)" fg:x="77" fg:w="171"/><text x="31.0500%" y="1615.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (171 samples, 68.40%)</title><rect x="30.8000%" y="1589" width="68.4000%" height="15" fill="rgb(212,174,34)" fg:x="77" fg:w="171"/><text x="31.0500%" y="1599.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (171 samples, 68.40%)</title><rect x="30.8000%" y="1573" width="68.4000%" height="15" fill="rgb(253,83,4)" fg:x="77" fg:w="171"/><text x="31.0500%" y="1583.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (171 samples, 68.40%)</title><rect x="30.8000%" y="1557" width="68.4000%" height="15" fill="rgb(250,195,49)" fg:x="77" fg:w="171"/><text x="31.0500%" y="1567.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 1.20%)</title><rect x="98.0000%" y="1541" width="1.2000%" height="15" fill="rgb(241,192,25)" fg:x="245" fg:w="3"/><text x="98.2500%" y="1551.50"></text></g><g><title>__pthread_getattr_np (3 samples, 1.20%)</title><rect x="98.0000%" y="1525" width="1.2000%" height="15" fill="rgb(208,124,10)" fg:x="245" fg:w="3"/><text x="98.2500%" y="1535.50"></text></g><g><title>__GI___libc_malloc (3 samples, 1.20%)</title><rect x="98.0000%" y="1509" width="1.2000%" height="15" fill="rgb(222,33,0)" fg:x="245" fg:w="3"/><text x="98.2500%" y="1519.50"></text></g><g><title>tcache_init (3 samples, 1.20%)</title><rect x="98.0000%" y="1493" width="1.2000%" height="15" fill="rgb(234,209,28)" fg:x="245" fg:w="3"/><text x="98.2500%" y="1503.50"></text></g><g><title>tcache_init (3 samples, 1.20%)</title><rect x="98.0000%" y="1477" width="1.2000%" height="15" fill="rgb(224,11,23)" fg:x="245" fg:w="3"/><text x="98.2500%" y="1487.50"></text></g><g><title>arena_get2 (2 samples, 0.80%)</title><rect x="98.4000%" y="1461" width="0.8000%" height="15" fill="rgb(232,99,1)" fg:x="246" fg:w="2"/><text x="98.6500%" y="1471.50"></text></g><g><title>arena_get2 (2 samples, 0.80%)</title><rect x="98.4000%" y="1445" width="0.8000%" height="15" fill="rgb(237,95,45)" fg:x="246" fg:w="2"/><text x="98.6500%" y="1455.50"></text></g><g><title>_int_new_arena (2 samples, 0.80%)</title><rect x="98.4000%" y="1429" width="0.8000%" height="15" fill="rgb(208,109,11)" fg:x="246" fg:w="2"/><text x="98.6500%" y="1439.50"></text></g><g><title>new_heap (2 samples, 0.80%)</title><rect x="98.4000%" y="1413" width="0.8000%" height="15" fill="rgb(216,190,48)" fg:x="246" fg:w="2"/><text x="98.6500%" y="1423.50"></text></g><g><title>alloc_new_heap (2 samples, 0.80%)</title><rect x="98.4000%" y="1397" width="0.8000%" height="15" fill="rgb(251,171,36)" fg:x="246" fg:w="2"/><text x="98.6500%" y="1407.50"></text></g><g><title>__GI___munmap (1 samples, 0.40%)</title><rect x="98.8000%" y="1381" width="0.4000%" height="15" fill="rgb(230,62,22)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1391.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.40%)</title><rect x="98.8000%" y="1365" width="0.4000%" height="15" fill="rgb(225,114,35)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1375.50"></text></g><g><title>do_syscall_64 (1 samples, 0.40%)</title><rect x="98.8000%" y="1349" width="0.4000%" height="15" fill="rgb(215,118,42)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1359.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.40%)</title><rect x="98.8000%" y="1333" width="0.4000%" height="15" fill="rgb(243,119,21)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1343.50"></text></g><g><title>__vm_munmap (1 samples, 0.40%)</title><rect x="98.8000%" y="1317" width="0.4000%" height="15" fill="rgb(252,177,53)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1327.50"></text></g><g><title>__do_munmap (1 samples, 0.40%)</title><rect x="98.8000%" y="1301" width="0.4000%" height="15" fill="rgb(237,209,29)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1311.50"></text></g><g><title>__split_vma (1 samples, 0.40%)</title><rect x="98.8000%" y="1285" width="0.4000%" height="15" fill="rgb(212,65,23)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1295.50"></text></g><g><title>__vma_adjust (1 samples, 0.40%)</title><rect x="98.8000%" y="1269" width="0.4000%" height="15" fill="rgb(230,222,46)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1279.50"></text></g><g><title>vma_adjust_trans_huge (1 samples, 0.40%)</title><rect x="98.8000%" y="1253" width="0.4000%" height="15" fill="rgb(215,135,32)" fg:x="247" fg:w="1"/><text x="99.0500%" y="1263.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.40%)</title><rect x="99.2000%" y="1461" width="0.4000%" height="15" fill="rgb(246,101,22)" fg:x="248" fg:w="1"/><text x="99.4500%" y="1471.50"></text></g><g><title>all (250 samples, 100%)</title><rect x="0.0000%" y="1685" width="100.0000%" height="15" fill="rgb(206,107,13)" fg:x="0" fg:w="250"/><text x="0.2500%" y="1695.50"></text></g><g><title>tokio-runtime-w (179 samples, 71.60%)</title><rect x="28.4000%" y="1669" width="71.6000%" height="15" fill="rgb(250,100,44)" fg:x="71" fg:w="179"/><text x="28.6500%" y="1679.50">tokio-runtime-w</text></g><g><title>__clone3 (175 samples, 70.00%)</title><rect x="30.0000%" y="1653" width="70.0000%" height="15" fill="rgb(231,147,38)" fg:x="75" fg:w="175"/><text x="30.2500%" y="1663.50">__clone3</text></g><g><title>start_thread (175 samples, 70.00%)</title><rect x="30.0000%" y="1637" width="70.0000%" height="15" fill="rgb(229,8,40)" fg:x="75" fg:w="175"/><text x="30.2500%" y="1647.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (173 samples, 69.20%)</title><rect x="30.8000%" y="1621" width="69.2000%" height="15" fill="rgb(221,135,30)" fg:x="77" fg:w="173"/><text x="31.0500%" y="1631.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (2 samples, 0.80%)</title><rect x="99.2000%" y="1605" width="0.8000%" height="15" fill="rgb(249,193,18)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1615.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (2 samples, 0.80%)</title><rect x="99.2000%" y="1589" width="0.8000%" height="15" fill="rgb(209,133,39)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1599.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (2 samples, 0.80%)</title><rect x="99.2000%" y="1573" width="0.8000%" height="15" fill="rgb(232,100,14)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1583.50"></text></g><g><title>__GI___munmap (2 samples, 0.80%)</title><rect x="99.2000%" y="1557" width="0.8000%" height="15" fill="rgb(224,185,1)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1567.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.80%)</title><rect x="99.2000%" y="1541" width="0.8000%" height="15" fill="rgb(223,139,8)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1551.50"></text></g><g><title>do_syscall_64 (2 samples, 0.80%)</title><rect x="99.2000%" y="1525" width="0.8000%" height="15" fill="rgb(232,213,38)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1535.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.80%)</title><rect x="99.2000%" y="1509" width="0.8000%" height="15" fill="rgb(207,94,22)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1519.50"></text></g><g><title>__vm_munmap (2 samples, 0.80%)</title><rect x="99.2000%" y="1493" width="0.8000%" height="15" fill="rgb(219,183,54)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1503.50"></text></g><g><title>__do_munmap (2 samples, 0.80%)</title><rect x="99.2000%" y="1477" width="0.8000%" height="15" fill="rgb(216,185,54)" fg:x="248" fg:w="2"/><text x="99.4500%" y="1487.50"></text></g><g><title>unmap_region (1 samples, 0.40%)</title><rect x="99.6000%" y="1461" width="0.4000%" height="15" fill="rgb(254,217,39)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1471.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.40%)</title><rect x="99.6000%" y="1445" width="0.4000%" height="15" fill="rgb(240,178,23)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1455.50"></text></g><g><title>flush_tlb_mm_range (1 samples, 0.40%)</title><rect x="99.6000%" y="1429" width="0.4000%" height="15" fill="rgb(218,11,47)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1439.50"></text></g><g><title>native_flush_tlb_multi (1 samples, 0.40%)</title><rect x="99.6000%" y="1413" width="0.4000%" height="15" fill="rgb(218,51,51)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1423.50"></text></g><g><title>on_each_cpu_cond_mask (1 samples, 0.40%)</title><rect x="99.6000%" y="1397" width="0.4000%" height="15" fill="rgb(238,126,27)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1407.50"></text></g><g><title>smp_call_function_many_cond (1 samples, 0.40%)</title><rect x="99.6000%" y="1381" width="0.4000%" height="15" fill="rgb(249,202,22)" fg:x="249" fg:w="1"/><text x="99.8500%" y="1391.50"></text></g></svg></svg>