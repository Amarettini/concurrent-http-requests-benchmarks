<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1510" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1493.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1493.00"> </text><svg id="frames" x="10" width="1180" total_samples="142"><g><title>do_mmap (1 samples, 0.70%)</title><rect x="0.0000%" y="1205" width="0.7042%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>get_unmapped_area (1 samples, 0.70%)</title><rect x="0.0000%" y="1189" width="0.7042%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.70%)</title><rect x="0.0000%" y="1173" width="0.7042%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>vm_unmapped_area (1 samples, 0.70%)</title><rect x="0.0000%" y="1157" width="0.7042%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>unmapped_area_topdown (1 samples, 0.70%)</title><rect x="0.0000%" y="1141" width="0.7042%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>__GI___mmap64 (4 samples, 2.82%)</title><rect x="0.0000%" y="1317" width="2.8169%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1327.50">__..</text></g><g><title>__GI___mmap64 (4 samples, 2.82%)</title><rect x="0.0000%" y="1301" width="2.8169%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1311.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 2.82%)</title><rect x="0.0000%" y="1285" width="2.8169%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1295.50">en..</text></g><g><title>do_syscall_64 (4 samples, 2.82%)</title><rect x="0.0000%" y="1269" width="2.8169%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1279.50">do..</text></g><g><title>__x64_sys_mmap (4 samples, 2.82%)</title><rect x="0.0000%" y="1253" width="2.8169%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1263.50">__..</text></g><g><title>ksys_mmap_pgoff (4 samples, 2.82%)</title><rect x="0.0000%" y="1237" width="2.8169%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1247.50">ks..</text></g><g><title>vm_mmap_pgoff (4 samples, 2.82%)</title><rect x="0.0000%" y="1221" width="2.8169%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1231.50">vm..</text></g><g><title>down_write_killable (3 samples, 2.11%)</title><rect x="0.7042%" y="1205" width="2.1127%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="3"/><text x="0.9542%" y="1215.50">d..</text></g><g><title>rwsem_down_write_slowpath (3 samples, 2.11%)</title><rect x="0.7042%" y="1189" width="2.1127%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="3"/><text x="0.9542%" y="1199.50">r..</text></g><g><title>rwsem_optimistic_spin (3 samples, 2.11%)</title><rect x="0.7042%" y="1173" width="2.1127%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="3"/><text x="0.9542%" y="1183.50">r..</text></g><g><title>osq_lock (3 samples, 2.11%)</title><rect x="0.7042%" y="1157" width="2.1127%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="3"/><text x="0.9542%" y="1167.50">o..</text></g><g><title>__clone3 (5 samples, 3.52%)</title><rect x="0.0000%" y="1429" width="3.5211%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1439.50">__c..</text></g><g><title>start_thread (5 samples, 3.52%)</title><rect x="0.0000%" y="1413" width="3.5211%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1423.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 3.52%)</title><rect x="0.0000%" y="1397" width="3.5211%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1407.50">std..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (5 samples, 3.52%)</title><rect x="0.0000%" y="1381" width="3.5211%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1391.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 3.52%)</title><rect x="0.0000%" y="1365" width="3.5211%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1375.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (5 samples, 3.52%)</title><rect x="0.0000%" y="1349" width="3.5211%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1359.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (5 samples, 3.52%)</title><rect x="0.0000%" y="1333" width="3.5211%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1343.50">std..</text></g><g><title>__GI___mprotect (1 samples, 0.70%)</title><rect x="2.8169%" y="1317" width="0.7042%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1327.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="2.8169%" y="1301" width="0.7042%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1311.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="2.8169%" y="1285" width="0.7042%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1295.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.70%)</title><rect x="2.8169%" y="1269" width="0.7042%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1279.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.70%)</title><rect x="2.8169%" y="1253" width="0.7042%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1263.50"></text></g><g><title>down_write_killable (1 samples, 0.70%)</title><rect x="2.8169%" y="1237" width="0.7042%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1247.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.70%)</title><rect x="2.8169%" y="1221" width="0.7042%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1231.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.70%)</title><rect x="2.8169%" y="1205" width="0.7042%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1215.50"></text></g><g><title>osq_lock (1 samples, 0.70%)</title><rect x="2.8169%" y="1189" width="0.7042%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="1"/><text x="3.0669%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::Runtime&gt; (1 samples, 0.70%)</title><rect x="3.5211%" y="1157" width="0.7042%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::Kind&gt; (1 samples, 0.70%)</title><rect x="3.5211%" y="1141" width="0.7042%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::ThreadPool&gt; (1 samples, 0.70%)</title><rect x="3.5211%" y="1125" width="0.7042%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::thread_pool::ThreadPool as core::ops::drop::Drop&gt;::drop (1 samples, 0.70%)</title><rect x="3.5211%" y="1109" width="0.7042%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::shutdown (1 samples, 0.70%)</title><rect x="3.5211%" y="1093" width="0.7042%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::close (1 samples, 0.70%)</title><rect x="3.5211%" y="1077" width="0.7042%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_all (1 samples, 0.70%)</title><rect x="3.5211%" y="1061" width="0.7042%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.70%)</title><rect x="3.5211%" y="1045" width="0.7042%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.70%)</title><rect x="3.5211%" y="1029" width="0.7042%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.70%)</title><rect x="3.5211%" y="1013" width="0.7042%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1023.50"></text></g><g><title>syscall (1 samples, 0.70%)</title><rect x="3.5211%" y="997" width="0.7042%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="3.7711%" y="1007.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="3.5211%" y="981" width="0.7042%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="3.7711%" y="991.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="3.5211%" y="965" width="0.7042%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="3.7711%" y="975.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.70%)</title><rect x="3.5211%" y="949" width="0.7042%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="3.7711%" y="959.50"></text></g><g><title>do_futex (1 samples, 0.70%)</title><rect x="3.5211%" y="933" width="0.7042%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="3.7711%" y="943.50"></text></g><g><title>futex_wake (1 samples, 0.70%)</title><rect x="3.5211%" y="917" width="0.7042%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="3.7711%" y="927.50"></text></g><g><title>wake_up_q (1 samples, 0.70%)</title><rect x="3.5211%" y="901" width="0.7042%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="3.7711%" y="911.50"></text></g><g><title>try_to_wake_up (1 samples, 0.70%)</title><rect x="3.5211%" y="885" width="0.7042%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="1"/><text x="3.7711%" y="895.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.70%)</title><rect x="3.5211%" y="869" width="0.7042%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="1"/><text x="3.7711%" y="879.50"></text></g><g><title>enqueue_task (1 samples, 0.70%)</title><rect x="3.5211%" y="853" width="0.7042%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="3.7711%" y="863.50"></text></g><g><title>psi_task_change (1 samples, 0.70%)</title><rect x="3.5211%" y="837" width="0.7042%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="3.7711%" y="847.50"></text></g><g><title>psi_group_change (1 samples, 0.70%)</title><rect x="3.5211%" y="821" width="0.7042%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="1"/><text x="3.7711%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.70%)</title><rect x="4.2254%" y="885" width="0.7042%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="1"/><text x="4.4754%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.70%)</title><rect x="4.2254%" y="869" width="0.7042%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="1"/><text x="4.4754%" y="879.50"></text></g><g><title>__libc_start_main_impl (7 samples, 4.93%)</title><rect x="3.5211%" y="1413" width="4.9296%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1423.50">__libc..</text></g><g><title>__libc_start_call_main (7 samples, 4.93%)</title><rect x="3.5211%" y="1397" width="4.9296%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1407.50">__libc..</text></g><g><title>main (7 samples, 4.93%)</title><rect x="3.5211%" y="1381" width="4.9296%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1391.50">main</text></g><g><title>std::rt::lang_start_internal (7 samples, 4.93%)</title><rect x="3.5211%" y="1365" width="4.9296%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1375.50">std::r..</text></g><g><title>std::panic::catch_unwind (7 samples, 4.93%)</title><rect x="3.5211%" y="1349" width="4.9296%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1359.50">std::p..</text></g><g><title>std::panicking::try (7 samples, 4.93%)</title><rect x="3.5211%" y="1333" width="4.9296%" height="15" fill="rgb(221,10,30)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1343.50">std::p..</text></g><g><title>std::panicking::try::do_call (7 samples, 4.93%)</title><rect x="3.5211%" y="1317" width="4.9296%" height="15" fill="rgb(210,229,1)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1327.50">std::p..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (7 samples, 4.93%)</title><rect x="3.5211%" y="1301" width="4.9296%" height="15" fill="rgb(222,148,37)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1311.50">std::r..</text></g><g><title>std::panic::catch_unwind (7 samples, 4.93%)</title><rect x="3.5211%" y="1285" width="4.9296%" height="15" fill="rgb(234,67,33)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1295.50">std::p..</text></g><g><title>std::panicking::try (7 samples, 4.93%)</title><rect x="3.5211%" y="1269" width="4.9296%" height="15" fill="rgb(247,98,35)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1279.50">std::p..</text></g><g><title>std::panicking::try::do_call (7 samples, 4.93%)</title><rect x="3.5211%" y="1253" width="4.9296%" height="15" fill="rgb(247,138,52)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1263.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 4.93%)</title><rect x="3.5211%" y="1237" width="4.9296%" height="15" fill="rgb(213,79,30)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1247.50">core::..</text></g><g><title>std::rt::lang_start::{{closure}} (7 samples, 4.93%)</title><rect x="3.5211%" y="1221" width="4.9296%" height="15" fill="rgb(246,177,23)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1231.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 4.93%)</title><rect x="3.5211%" y="1205" width="4.9296%" height="15" fill="rgb(230,62,27)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1215.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 4.93%)</title><rect x="3.5211%" y="1189" width="4.9296%" height="15" fill="rgb(216,154,8)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1199.50">core::..</text></g><g><title>async_request_tasks::main (7 samples, 4.93%)</title><rect x="3.5211%" y="1173" width="4.9296%" height="15" fill="rgb(244,35,45)" fg:x="5" fg:w="7"/><text x="3.7711%" y="1183.50">async_..</text></g><g><title>tokio::runtime::Runtime::block_on (6 samples, 4.23%)</title><rect x="4.2254%" y="1157" width="4.2254%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1167.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (6 samples, 4.23%)</title><rect x="4.2254%" y="1141" width="4.2254%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1151.50">tokio..</text></g><g><title>tokio::runtime::enter::Enter::block_on (6 samples, 4.23%)</title><rect x="4.2254%" y="1125" width="4.2254%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1135.50">tokio..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (6 samples, 4.23%)</title><rect x="4.2254%" y="1109" width="4.2254%" height="15" fill="rgb(207,117,47)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1119.50">tokio..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (6 samples, 4.23%)</title><rect x="4.2254%" y="1093" width="4.2254%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1103.50">&lt;toki..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (6 samples, 4.23%)</title><rect x="4.2254%" y="1077" width="4.2254%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1087.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 4.23%)</title><rect x="4.2254%" y="1061" width="4.2254%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1071.50">std::..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (6 samples, 4.23%)</title><rect x="4.2254%" y="1045" width="4.2254%" height="15" fill="rgb(242,79,21)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1055.50">tokio..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (6 samples, 4.23%)</title><rect x="4.2254%" y="1029" width="4.2254%" height="15" fill="rgb(211,96,35)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1039.50">&lt;toki..</text></g><g><title>tokio::park::thread::Inner::park (6 samples, 4.23%)</title><rect x="4.2254%" y="1013" width="4.2254%" height="15" fill="rgb(253,215,40)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1023.50">tokio..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (6 samples, 4.23%)</title><rect x="4.2254%" y="997" width="4.2254%" height="15" fill="rgb(211,81,21)" fg:x="6" fg:w="6"/><text x="4.4754%" y="1007.50">tokio..</text></g><g><title>parking_lot::condvar::Condvar::wait (6 samples, 4.23%)</title><rect x="4.2254%" y="981" width="4.2254%" height="15" fill="rgb(208,190,38)" fg:x="6" fg:w="6"/><text x="4.4754%" y="991.50">parki..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 4.23%)</title><rect x="4.2254%" y="965" width="4.2254%" height="15" fill="rgb(235,213,38)" fg:x="6" fg:w="6"/><text x="4.4754%" y="975.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 4.23%)</title><rect x="4.2254%" y="949" width="4.2254%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="6"/><text x="4.4754%" y="959.50">parki..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 4.23%)</title><rect x="4.2254%" y="933" width="4.2254%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="6"/><text x="4.4754%" y="943.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 4.23%)</title><rect x="4.2254%" y="917" width="4.2254%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="6"/><text x="4.4754%" y="927.50">parki..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 4.23%)</title><rect x="4.2254%" y="901" width="4.2254%" height="15" fill="rgb(210,16,53)" fg:x="6" fg:w="6"/><text x="4.4754%" y="911.50">&lt;park..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 3.52%)</title><rect x="4.9296%" y="885" width="3.5211%" height="15" fill="rgb(235,124,12)" fg:x="7" fg:w="5"/><text x="5.1796%" y="895.50">par..</text></g><g><title>syscall (5 samples, 3.52%)</title><rect x="4.9296%" y="869" width="3.5211%" height="15" fill="rgb(224,169,11)" fg:x="7" fg:w="5"/><text x="5.1796%" y="879.50">sys..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 3.52%)</title><rect x="4.9296%" y="853" width="3.5211%" height="15" fill="rgb(250,166,2)" fg:x="7" fg:w="5"/><text x="5.1796%" y="863.50">ent..</text></g><g><title>do_syscall_64 (5 samples, 3.52%)</title><rect x="4.9296%" y="837" width="3.5211%" height="15" fill="rgb(242,216,29)" fg:x="7" fg:w="5"/><text x="5.1796%" y="847.50">do_..</text></g><g><title>__x64_sys_futex (5 samples, 3.52%)</title><rect x="4.9296%" y="821" width="3.5211%" height="15" fill="rgb(230,116,27)" fg:x="7" fg:w="5"/><text x="5.1796%" y="831.50">__x..</text></g><g><title>do_futex (5 samples, 3.52%)</title><rect x="4.9296%" y="805" width="3.5211%" height="15" fill="rgb(228,99,48)" fg:x="7" fg:w="5"/><text x="5.1796%" y="815.50">do_..</text></g><g><title>futex_wait (5 samples, 3.52%)</title><rect x="4.9296%" y="789" width="3.5211%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="5"/><text x="5.1796%" y="799.50">fut..</text></g><g><title>futex_wait_queue_me (5 samples, 3.52%)</title><rect x="4.9296%" y="773" width="3.5211%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="5"/><text x="5.1796%" y="783.50">fut..</text></g><g><title>schedule (5 samples, 3.52%)</title><rect x="4.9296%" y="757" width="3.5211%" height="15" fill="rgb(236,97,10)" fg:x="7" fg:w="5"/><text x="5.1796%" y="767.50">sch..</text></g><g><title>__schedule (5 samples, 3.52%)</title><rect x="4.9296%" y="741" width="3.5211%" height="15" fill="rgb(233,208,19)" fg:x="7" fg:w="5"/><text x="5.1796%" y="751.50">__s..</text></g><g><title>finish_task_switch.isra.0 (5 samples, 3.52%)</title><rect x="4.9296%" y="725" width="3.5211%" height="15" fill="rgb(216,164,2)" fg:x="7" fg:w="5"/><text x="5.1796%" y="735.50">fin..</text></g><g><title>__perf_event_task_sched_in (5 samples, 3.52%)</title><rect x="4.9296%" y="709" width="3.5211%" height="15" fill="rgb(220,129,5)" fg:x="7" fg:w="5"/><text x="5.1796%" y="719.50">__p..</text></g><g><title>x86_pmu_enable (5 samples, 3.52%)</title><rect x="4.9296%" y="693" width="3.5211%" height="15" fill="rgb(242,17,10)" fg:x="7" fg:w="5"/><text x="5.1796%" y="703.50">x86..</text></g><g><title>intel_pmu_enable_all (5 samples, 3.52%)</title><rect x="4.9296%" y="677" width="3.5211%" height="15" fill="rgb(242,107,0)" fg:x="7" fg:w="5"/><text x="5.1796%" y="687.50">int..</text></g><g><title>native_write_msr (5 samples, 3.52%)</title><rect x="4.9296%" y="661" width="3.5211%" height="15" fill="rgb(251,28,31)" fg:x="7" fg:w="5"/><text x="5.1796%" y="671.50">nat..</text></g><g><title>_start (8 samples, 5.63%)</title><rect x="3.5211%" y="1429" width="5.6338%" height="15" fill="rgb(233,223,10)" fg:x="5" fg:w="8"/><text x="3.7711%" y="1439.50">_start</text></g><g><title>_dl_start (1 samples, 0.70%)</title><rect x="8.4507%" y="1413" width="0.7042%" height="15" fill="rgb(215,21,27)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1423.50"></text></g><g><title>_dl_start_final (1 samples, 0.70%)</title><rect x="8.4507%" y="1397" width="0.7042%" height="15" fill="rgb(232,23,21)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1407.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.70%)</title><rect x="8.4507%" y="1381" width="0.7042%" height="15" fill="rgb(244,5,23)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1391.50"></text></g><g><title>dl_main (1 samples, 0.70%)</title><rect x="8.4507%" y="1365" width="0.7042%" height="15" fill="rgb(226,81,46)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1375.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.70%)</title><rect x="8.4507%" y="1349" width="0.7042%" height="15" fill="rgb(247,70,30)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1359.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.70%)</title><rect x="8.4507%" y="1333" width="0.7042%" height="15" fill="rgb(212,68,19)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1343.50"></text></g><g><title>elf_machine_rela (1 samples, 0.70%)</title><rect x="8.4507%" y="1317" width="0.7042%" height="15" fill="rgb(240,187,13)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1327.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.70%)</title><rect x="8.4507%" y="1301" width="0.7042%" height="15" fill="rgb(223,113,26)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1311.50"></text></g><g><title>do_lookup_x (1 samples, 0.70%)</title><rect x="8.4507%" y="1285" width="0.7042%" height="15" fill="rgb(206,192,2)" fg:x="12" fg:w="1"/><text x="8.7007%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="9.1549%" y="1429" width="0.7042%" height="15" fill="rgb(241,108,4)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1439.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="9.1549%" y="1413" width="0.7042%" height="15" fill="rgb(247,173,49)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1423.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.70%)</title><rect x="9.1549%" y="1397" width="0.7042%" height="15" fill="rgb(224,114,35)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1407.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.70%)</title><rect x="9.1549%" y="1381" width="0.7042%" height="15" fill="rgb(245,159,27)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1391.50"></text></g><g><title>bprm_execve (1 samples, 0.70%)</title><rect x="9.1549%" y="1365" width="0.7042%" height="15" fill="rgb(245,172,44)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1375.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.70%)</title><rect x="9.1549%" y="1349" width="0.7042%" height="15" fill="rgb(236,23,11)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1359.50"></text></g><g><title>exec_binprm (1 samples, 0.70%)</title><rect x="9.1549%" y="1333" width="0.7042%" height="15" fill="rgb(205,117,38)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1343.50"></text></g><g><title>search_binary_handler (1 samples, 0.70%)</title><rect x="9.1549%" y="1317" width="0.7042%" height="15" fill="rgb(237,72,25)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1327.50"></text></g><g><title>load_elf_binary (1 samples, 0.70%)</title><rect x="9.1549%" y="1301" width="0.7042%" height="15" fill="rgb(244,70,9)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1311.50"></text></g><g><title>elf_map (1 samples, 0.70%)</title><rect x="9.1549%" y="1285" width="0.7042%" height="15" fill="rgb(217,125,39)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1295.50"></text></g><g><title>vm_mmap (1 samples, 0.70%)</title><rect x="9.1549%" y="1269" width="0.7042%" height="15" fill="rgb(235,36,10)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1279.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.70%)</title><rect x="9.1549%" y="1253" width="0.7042%" height="15" fill="rgb(251,123,47)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1263.50"></text></g><g><title>do_mmap (1 samples, 0.70%)</title><rect x="9.1549%" y="1237" width="0.7042%" height="15" fill="rgb(221,13,13)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1247.50"></text></g><g><title>mmap_region (1 samples, 0.70%)</title><rect x="9.1549%" y="1221" width="0.7042%" height="15" fill="rgb(238,131,9)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1231.50"></text></g><g><title>perf_event_mmap (1 samples, 0.70%)</title><rect x="9.1549%" y="1205" width="0.7042%" height="15" fill="rgb(211,50,8)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1215.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.70%)</title><rect x="9.1549%" y="1189" width="0.7042%" height="15" fill="rgb(245,182,24)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1199.50"></text></g><g><title>kmem_cache_alloc_trace (1 samples, 0.70%)</title><rect x="9.1549%" y="1173" width="0.7042%" height="15" fill="rgb(242,14,37)" fg:x="13" fg:w="1"/><text x="9.4049%" y="1183.50"></text></g><g><title>calculate_sigpending (1 samples, 0.70%)</title><rect x="9.8592%" y="1397" width="0.7042%" height="15" fill="rgb(246,228,12)" fg:x="14" fg:w="1"/><text x="10.1092%" y="1407.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.70%)</title><rect x="9.8592%" y="1381" width="0.7042%" height="15" fill="rgb(213,55,15)" fg:x="14" fg:w="1"/><text x="10.1092%" y="1391.50"></text></g><g><title>async_request_t (54 samples, 38.03%)</title><rect x="0.0000%" y="1445" width="38.0282%" height="15" fill="rgb(209,9,3)" fg:x="0" fg:w="54"/><text x="0.2500%" y="1455.50">async_request_t</text></g><g><title>ret_from_fork (40 samples, 28.17%)</title><rect x="9.8592%" y="1429" width="28.1690%" height="15" fill="rgb(230,59,30)" fg:x="14" fg:w="40"/><text x="10.1092%" y="1439.50">ret_from_fork</text></g><g><title>schedule_tail (40 samples, 28.17%)</title><rect x="9.8592%" y="1413" width="28.1690%" height="15" fill="rgb(209,121,21)" fg:x="14" fg:w="40"/><text x="10.1092%" y="1423.50">schedule_tail</text></g><g><title>finish_task_switch.isra.0 (39 samples, 27.46%)</title><rect x="10.5634%" y="1397" width="27.4648%" height="15" fill="rgb(220,109,13)" fg:x="15" fg:w="39"/><text x="10.8134%" y="1407.50">finish_task_switch.isra.0</text></g><g><title>__perf_event_task_sched_in (36 samples, 25.35%)</title><rect x="12.6761%" y="1381" width="25.3521%" height="15" fill="rgb(232,18,1)" fg:x="18" fg:w="36"/><text x="12.9261%" y="1391.50">__perf_event_task_sched_in</text></g><g><title>x86_pmu_enable (34 samples, 23.94%)</title><rect x="14.0845%" y="1365" width="23.9437%" height="15" fill="rgb(215,41,42)" fg:x="20" fg:w="34"/><text x="14.3345%" y="1375.50">x86_pmu_enable</text></g><g><title>intel_pmu_enable_all (33 samples, 23.24%)</title><rect x="14.7887%" y="1349" width="23.2394%" height="15" fill="rgb(224,123,36)" fg:x="21" fg:w="33"/><text x="15.0387%" y="1359.50">intel_pmu_enable_all</text></g><g><title>native_write_msr (33 samples, 23.24%)</title><rect x="14.7887%" y="1333" width="23.2394%" height="15" fill="rgb(240,125,3)" fg:x="21" fg:w="33"/><text x="15.0387%" y="1343.50">native_write_msr</text></g><g><title>perf-exec (5 samples, 3.52%)</title><rect x="38.0282%" y="1445" width="3.5211%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1455.50">per..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 3.52%)</title><rect x="38.0282%" y="1429" width="3.5211%" height="15" fill="rgb(205,185,37)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1439.50">ent..</text></g><g><title>do_syscall_64 (5 samples, 3.52%)</title><rect x="38.0282%" y="1413" width="3.5211%" height="15" fill="rgb(238,207,15)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1423.50">do_..</text></g><g><title>__x64_sys_execve (5 samples, 3.52%)</title><rect x="38.0282%" y="1397" width="3.5211%" height="15" fill="rgb(213,199,42)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1407.50">__x..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 3.52%)</title><rect x="38.0282%" y="1381" width="3.5211%" height="15" fill="rgb(235,201,11)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1391.50">do_..</text></g><g><title>bprm_execve (5 samples, 3.52%)</title><rect x="38.0282%" y="1365" width="3.5211%" height="15" fill="rgb(207,46,11)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1375.50">bpr..</text></g><g><title>bprm_execve.part.0 (5 samples, 3.52%)</title><rect x="38.0282%" y="1349" width="3.5211%" height="15" fill="rgb(241,35,35)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1359.50">bpr..</text></g><g><title>exec_binprm (5 samples, 3.52%)</title><rect x="38.0282%" y="1333" width="3.5211%" height="15" fill="rgb(243,32,47)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1343.50">exe..</text></g><g><title>search_binary_handler (5 samples, 3.52%)</title><rect x="38.0282%" y="1317" width="3.5211%" height="15" fill="rgb(247,202,23)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1327.50">sea..</text></g><g><title>load_elf_binary (5 samples, 3.52%)</title><rect x="38.0282%" y="1301" width="3.5211%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1311.50">loa..</text></g><g><title>begin_new_exec (5 samples, 3.52%)</title><rect x="38.0282%" y="1285" width="3.5211%" height="15" fill="rgb(243,110,44)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1295.50">beg..</text></g><g><title>perf_event_exec (5 samples, 3.52%)</title><rect x="38.0282%" y="1269" width="3.5211%" height="15" fill="rgb(222,74,54)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1279.50">per..</text></g><g><title>ctx_resched (5 samples, 3.52%)</title><rect x="38.0282%" y="1253" width="3.5211%" height="15" fill="rgb(216,99,12)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1263.50">ctx..</text></g><g><title>x86_pmu_enable (5 samples, 3.52%)</title><rect x="38.0282%" y="1237" width="3.5211%" height="15" fill="rgb(226,22,26)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1247.50">x86..</text></g><g><title>intel_pmu_enable_all (5 samples, 3.52%)</title><rect x="38.0282%" y="1221" width="3.5211%" height="15" fill="rgb(217,163,10)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1231.50">int..</text></g><g><title>native_write_msr (5 samples, 3.52%)</title><rect x="38.0282%" y="1205" width="3.5211%" height="15" fill="rgb(213,25,53)" fg:x="54" fg:w="5"/><text x="38.2782%" y="1215.50">nat..</text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="41.5493%" y="1429" width="0.7042%" height="15" fill="rgb(252,105,26)" fg:x="59" fg:w="1"/><text x="41.7993%" y="1439.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="41.5493%" y="1413" width="0.7042%" height="15" fill="rgb(220,39,43)" fg:x="59" fg:w="1"/><text x="41.7993%" y="1423.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="42.2535%" y="1413" width="0.7042%" height="15" fill="rgb(229,68,48)" fg:x="60" fg:w="1"/><text x="42.5035%" y="1423.50"></text></g><g><title>[unknown] (2 samples, 1.41%)</title><rect x="42.2535%" y="1429" width="1.4085%" height="15" fill="rgb(252,8,32)" fg:x="60" fg:w="2"/><text x="42.5035%" y="1439.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.70%)</title><rect x="42.9577%" y="1413" width="0.7042%" height="15" fill="rgb(223,20,43)" fg:x="61" fg:w="1"/><text x="43.2077%" y="1423.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.70%)</title><rect x="43.6620%" y="1109" width="0.7042%" height="15" fill="rgb(229,81,49)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.70%)</title><rect x="43.6620%" y="1093" width="0.7042%" height="15" fill="rgb(236,28,36)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.70%)</title><rect x="43.6620%" y="1077" width="0.7042%" height="15" fill="rgb(249,185,26)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1087.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.70%)</title><rect x="43.6620%" y="1061" width="0.7042%" height="15" fill="rgb(249,174,33)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.70%)</title><rect x="43.6620%" y="1045" width="0.7042%" height="15" fill="rgb(233,201,37)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.70%)</title><rect x="43.6620%" y="1029" width="0.7042%" height="15" fill="rgb(221,78,26)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1039.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.70%)</title><rect x="43.6620%" y="1013" width="0.7042%" height="15" fill="rgb(250,127,30)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.70%)</title><rect x="43.6620%" y="997" width="0.7042%" height="15" fill="rgb(230,49,44)" fg:x="62" fg:w="1"/><text x="43.9120%" y="1007.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.70%)</title><rect x="44.3662%" y="981" width="0.7042%" height="15" fill="rgb(229,67,23)" fg:x="63" fg:w="1"/><text x="44.6162%" y="991.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.70%)</title><rect x="44.3662%" y="965" width="0.7042%" height="15" fill="rgb(249,83,47)" fg:x="63" fg:w="1"/><text x="44.6162%" y="975.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.70%)</title><rect x="44.3662%" y="949" width="0.7042%" height="15" fill="rgb(215,43,3)" fg:x="63" fg:w="1"/><text x="44.6162%" y="959.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.70%)</title><rect x="44.3662%" y="933" width="0.7042%" height="15" fill="rgb(238,154,13)" fg:x="63" fg:w="1"/><text x="44.6162%" y="943.50"></text></g><g><title>core::mem::drop (3 samples, 2.11%)</title><rect x="43.6620%" y="1189" width="2.1127%" height="15" fill="rgb(219,56,2)" fg:x="62" fg:w="3"/><text x="43.9120%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (3 samples, 2.11%)</title><rect x="43.6620%" y="1173" width="2.1127%" height="15" fill="rgb(233,0,4)" fg:x="62" fg:w="3"/><text x="43.9120%" y="1183.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (3 samples, 2.11%)</title><rect x="43.6620%" y="1157" width="2.1127%" height="15" fill="rgb(235,30,7)" fg:x="62" fg:w="3"/><text x="43.9120%" y="1167.50">c..</text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 2.11%)</title><rect x="43.6620%" y="1141" width="2.1127%" height="15" fill="rgb(250,79,13)" fg:x="62" fg:w="3"/><text x="43.9120%" y="1151.50">&lt;..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 2.11%)</title><rect x="43.6620%" y="1125" width="2.1127%" height="15" fill="rgb(211,146,34)" fg:x="62" fg:w="3"/><text x="43.9120%" y="1135.50">&lt;..</text></g><g><title>syscall (2 samples, 1.41%)</title><rect x="44.3662%" y="1109" width="1.4085%" height="15" fill="rgb(228,22,38)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 1.41%)</title><rect x="44.3662%" y="1093" width="1.4085%" height="15" fill="rgb(235,168,5)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1103.50"></text></g><g><title>do_syscall_64 (2 samples, 1.41%)</title><rect x="44.3662%" y="1077" width="1.4085%" height="15" fill="rgb(221,155,16)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1087.50"></text></g><g><title>__x64_sys_futex (2 samples, 1.41%)</title><rect x="44.3662%" y="1061" width="1.4085%" height="15" fill="rgb(215,215,53)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1071.50"></text></g><g><title>do_futex (2 samples, 1.41%)</title><rect x="44.3662%" y="1045" width="1.4085%" height="15" fill="rgb(223,4,10)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1055.50"></text></g><g><title>futex_wake (2 samples, 1.41%)</title><rect x="44.3662%" y="1029" width="1.4085%" height="15" fill="rgb(234,103,6)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1039.50"></text></g><g><title>wake_up_q (2 samples, 1.41%)</title><rect x="44.3662%" y="1013" width="1.4085%" height="15" fill="rgb(227,97,0)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1023.50"></text></g><g><title>try_to_wake_up (2 samples, 1.41%)</title><rect x="44.3662%" y="997" width="1.4085%" height="15" fill="rgb(234,150,53)" fg:x="63" fg:w="2"/><text x="44.6162%" y="1007.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.70%)</title><rect x="45.0704%" y="981" width="0.7042%" height="15" fill="rgb(228,201,54)" fg:x="64" fg:w="1"/><text x="45.3204%" y="991.50"></text></g><g><title>task_h_load (1 samples, 0.70%)</title><rect x="45.0704%" y="965" width="0.7042%" height="15" fill="rgb(222,22,37)" fg:x="64" fg:w="1"/><text x="45.3204%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 7.04%)</title><rect x="45.7746%" y="1141" width="7.0423%" height="15" fill="rgb(237,53,32)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1151.50">&lt;parking_..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (10 samples, 7.04%)</title><rect x="45.7746%" y="1125" width="7.0423%" height="15" fill="rgb(233,25,53)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1135.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::park (10 samples, 7.04%)</title><rect x="45.7746%" y="1109" width="7.0423%" height="15" fill="rgb(210,40,34)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1119.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (10 samples, 7.04%)</title><rect x="45.7746%" y="1093" width="7.0423%" height="15" fill="rgb(241,220,44)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1103.50">parking_l..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (10 samples, 7.04%)</title><rect x="45.7746%" y="1077" width="7.0423%" height="15" fill="rgb(235,28,35)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1087.50">parking_l..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (10 samples, 7.04%)</title><rect x="45.7746%" y="1061" width="7.0423%" height="15" fill="rgb(210,56,17)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1071.50">&lt;parking_..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (10 samples, 7.04%)</title><rect x="45.7746%" y="1045" width="7.0423%" height="15" fill="rgb(224,130,29)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1055.50">parking_l..</text></g><g><title>syscall (10 samples, 7.04%)</title><rect x="45.7746%" y="1029" width="7.0423%" height="15" fill="rgb(235,212,8)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1039.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 7.04%)</title><rect x="45.7746%" y="1013" width="7.0423%" height="15" fill="rgb(223,33,50)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1023.50">entry_SYS..</text></g><g><title>do_syscall_64 (10 samples, 7.04%)</title><rect x="45.7746%" y="997" width="7.0423%" height="15" fill="rgb(219,149,13)" fg:x="65" fg:w="10"/><text x="46.0246%" y="1007.50">do_syscal..</text></g><g><title>__x64_sys_futex (10 samples, 7.04%)</title><rect x="45.7746%" y="981" width="7.0423%" height="15" fill="rgb(250,156,29)" fg:x="65" fg:w="10"/><text x="46.0246%" y="991.50">__x64_sys..</text></g><g><title>do_futex (10 samples, 7.04%)</title><rect x="45.7746%" y="965" width="7.0423%" height="15" fill="rgb(216,193,19)" fg:x="65" fg:w="10"/><text x="46.0246%" y="975.50">do_futex</text></g><g><title>futex_wait (10 samples, 7.04%)</title><rect x="45.7746%" y="949" width="7.0423%" height="15" fill="rgb(216,135,14)" fg:x="65" fg:w="10"/><text x="46.0246%" y="959.50">futex_wait</text></g><g><title>futex_wait_queue_me (10 samples, 7.04%)</title><rect x="45.7746%" y="933" width="7.0423%" height="15" fill="rgb(241,47,5)" fg:x="65" fg:w="10"/><text x="46.0246%" y="943.50">futex_wai..</text></g><g><title>schedule (10 samples, 7.04%)</title><rect x="45.7746%" y="917" width="7.0423%" height="15" fill="rgb(233,42,35)" fg:x="65" fg:w="10"/><text x="46.0246%" y="927.50">schedule</text></g><g><title>__schedule (10 samples, 7.04%)</title><rect x="45.7746%" y="901" width="7.0423%" height="15" fill="rgb(231,13,6)" fg:x="65" fg:w="10"/><text x="46.0246%" y="911.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (10 samples, 7.04%)</title><rect x="45.7746%" y="885" width="7.0423%" height="15" fill="rgb(207,181,40)" fg:x="65" fg:w="10"/><text x="46.0246%" y="895.50">finish_ta..</text></g><g><title>__perf_event_task_sched_in (10 samples, 7.04%)</title><rect x="45.7746%" y="869" width="7.0423%" height="15" fill="rgb(254,173,49)" fg:x="65" fg:w="10"/><text x="46.0246%" y="879.50">__perf_ev..</text></g><g><title>x86_pmu_enable (10 samples, 7.04%)</title><rect x="45.7746%" y="853" width="7.0423%" height="15" fill="rgb(221,1,38)" fg:x="65" fg:w="10"/><text x="46.0246%" y="863.50">x86_pmu_e..</text></g><g><title>intel_pmu_enable_all (10 samples, 7.04%)</title><rect x="45.7746%" y="837" width="7.0423%" height="15" fill="rgb(206,124,46)" fg:x="65" fg:w="10"/><text x="46.0246%" y="847.50">intel_pmu..</text></g><g><title>native_write_msr (10 samples, 7.04%)</title><rect x="45.7746%" y="821" width="7.0423%" height="15" fill="rgb(249,21,11)" fg:x="65" fg:w="10"/><text x="46.0246%" y="831.50">native_wr..</text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.70%)</title><rect x="52.8169%" y="1077" width="0.7042%" height="15" fill="rgb(222,201,40)" fg:x="75" fg:w="1"/><text x="53.0669%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.70%)</title><rect x="52.8169%" y="1061" width="0.7042%" height="15" fill="rgb(235,61,29)" fg:x="75" fg:w="1"/><text x="53.0669%" y="1071.50"></text></g><g><title>__perf_event_task_sched_in (16 samples, 11.27%)</title><rect x="53.5211%" y="901" width="11.2676%" height="15" fill="rgb(219,207,3)" fg:x="76" fg:w="16"/><text x="53.7711%" y="911.50">__perf_event_task..</text></g><g><title>x86_pmu_enable (16 samples, 11.27%)</title><rect x="53.5211%" y="885" width="11.2676%" height="15" fill="rgb(222,56,46)" fg:x="76" fg:w="16"/><text x="53.7711%" y="895.50">x86_pmu_enable</text></g><g><title>intel_pmu_enable_all (16 samples, 11.27%)</title><rect x="53.5211%" y="869" width="11.2676%" height="15" fill="rgb(239,76,54)" fg:x="76" fg:w="16"/><text x="53.7711%" y="879.50">intel_pmu_enable_..</text></g><g><title>native_write_msr (16 samples, 11.27%)</title><rect x="53.5211%" y="853" width="11.2676%" height="15" fill="rgb(231,124,27)" fg:x="76" fg:w="16"/><text x="53.7711%" y="863.50">native_write_msr</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (28 samples, 19.72%)</title><rect x="45.7746%" y="1189" width="19.7183%" height="15" fill="rgb(249,195,6)" fg:x="65" fg:w="28"/><text x="46.0246%" y="1199.50">tokio::loom::std::parking_lot::..</text></g><g><title>parking_lot::condvar::Condvar::wait_for (28 samples, 19.72%)</title><rect x="45.7746%" y="1173" width="19.7183%" height="15" fill="rgb(237,174,47)" fg:x="65" fg:w="28"/><text x="46.0246%" y="1183.50">parking_lot::condvar::Condvar::..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (28 samples, 19.72%)</title><rect x="45.7746%" y="1157" width="19.7183%" height="15" fill="rgb(206,201,31)" fg:x="65" fg:w="28"/><text x="46.0246%" y="1167.50">parking_lot::condvar::Condvar::..</text></g><g><title>parking_lot_core::parking_lot::park (18 samples, 12.68%)</title><rect x="52.8169%" y="1141" width="12.6761%" height="15" fill="rgb(231,57,52)" fg:x="75" fg:w="18"/><text x="53.0669%" y="1151.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (18 samples, 12.68%)</title><rect x="52.8169%" y="1125" width="12.6761%" height="15" fill="rgb(248,177,22)" fg:x="75" fg:w="18"/><text x="53.0669%" y="1135.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (18 samples, 12.68%)</title><rect x="52.8169%" y="1109" width="12.6761%" height="15" fill="rgb(215,211,37)" fg:x="75" fg:w="18"/><text x="53.0669%" y="1119.50">parking_lot_core::p..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (18 samples, 12.68%)</title><rect x="52.8169%" y="1093" width="12.6761%" height="15" fill="rgb(241,128,51)" fg:x="75" fg:w="18"/><text x="53.0669%" y="1103.50">&lt;parking_lot_core::..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (17 samples, 11.97%)</title><rect x="53.5211%" y="1077" width="11.9718%" height="15" fill="rgb(227,165,31)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1087.50">parking_lot_core::..</text></g><g><title>syscall (17 samples, 11.97%)</title><rect x="53.5211%" y="1061" width="11.9718%" height="15" fill="rgb(228,167,24)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1071.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 11.97%)</title><rect x="53.5211%" y="1045" width="11.9718%" height="15" fill="rgb(228,143,12)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1055.50">entry_SYSCALL_64_a..</text></g><g><title>do_syscall_64 (17 samples, 11.97%)</title><rect x="53.5211%" y="1029" width="11.9718%" height="15" fill="rgb(249,149,8)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1039.50">do_syscall_64</text></g><g><title>__x64_sys_futex (17 samples, 11.97%)</title><rect x="53.5211%" y="1013" width="11.9718%" height="15" fill="rgb(243,35,44)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1023.50">__x64_sys_futex</text></g><g><title>do_futex (17 samples, 11.97%)</title><rect x="53.5211%" y="997" width="11.9718%" height="15" fill="rgb(246,89,9)" fg:x="76" fg:w="17"/><text x="53.7711%" y="1007.50">do_futex</text></g><g><title>futex_wait (17 samples, 11.97%)</title><rect x="53.5211%" y="981" width="11.9718%" height="15" fill="rgb(233,213,13)" fg:x="76" fg:w="17"/><text x="53.7711%" y="991.50">futex_wait</text></g><g><title>futex_wait_queue_me (17 samples, 11.97%)</title><rect x="53.5211%" y="965" width="11.9718%" height="15" fill="rgb(233,141,41)" fg:x="76" fg:w="17"/><text x="53.7711%" y="975.50">futex_wait_queue_me</text></g><g><title>schedule (17 samples, 11.97%)</title><rect x="53.5211%" y="949" width="11.9718%" height="15" fill="rgb(239,167,4)" fg:x="76" fg:w="17"/><text x="53.7711%" y="959.50">schedule</text></g><g><title>__schedule (17 samples, 11.97%)</title><rect x="53.5211%" y="933" width="11.9718%" height="15" fill="rgb(209,217,16)" fg:x="76" fg:w="17"/><text x="53.7711%" y="943.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (17 samples, 11.97%)</title><rect x="53.5211%" y="917" width="11.9718%" height="15" fill="rgb(219,88,35)" fg:x="76" fg:w="17"/><text x="53.7711%" y="927.50">finish_task_switch..</text></g><g><title>asm_sysvec_call_function (1 samples, 0.70%)</title><rect x="64.7887%" y="901" width="0.7042%" height="15" fill="rgb(220,193,23)" fg:x="92" fg:w="1"/><text x="65.0387%" y="911.50"></text></g><g><title>sysvec_call_function (1 samples, 0.70%)</title><rect x="64.7887%" y="885" width="0.7042%" height="15" fill="rgb(230,90,52)" fg:x="92" fg:w="1"/><text x="65.0387%" y="895.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.70%)</title><rect x="64.7887%" y="869" width="0.7042%" height="15" fill="rgb(252,106,19)" fg:x="92" fg:w="1"/><text x="65.0387%" y="879.50"></text></g><g><title>idle_cpu (1 samples, 0.70%)</title><rect x="64.7887%" y="853" width="0.7042%" height="15" fill="rgb(206,74,20)" fg:x="92" fg:w="1"/><text x="65.0387%" y="863.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.70%)</title><rect x="65.4930%" y="1189" width="0.7042%" height="15" fill="rgb(230,138,44)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.70%)</title><rect x="65.4930%" y="1173" width="0.7042%" height="15" fill="rgb(235,182,43)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.70%)</title><rect x="65.4930%" y="1157" width="0.7042%" height="15" fill="rgb(242,16,51)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1167.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.70%)</title><rect x="65.4930%" y="1141" width="0.7042%" height="15" fill="rgb(248,9,4)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.70%)</title><rect x="65.4930%" y="1125" width="0.7042%" height="15" fill="rgb(210,31,22)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.70%)</title><rect x="65.4930%" y="1109" width="0.7042%" height="15" fill="rgb(239,54,39)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.70%)</title><rect x="65.4930%" y="1093" width="0.7042%" height="15" fill="rgb(230,99,41)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1103.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.70%)</title><rect x="65.4930%" y="1077" width="0.7042%" height="15" fill="rgb(253,106,12)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1087.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.70%)</title><rect x="65.4930%" y="1061" width="0.7042%" height="15" fill="rgb(213,46,41)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1071.50"></text></g><g><title>syscall (1 samples, 0.70%)</title><rect x="65.4930%" y="1045" width="0.7042%" height="15" fill="rgb(215,133,35)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="65.4930%" y="1029" width="0.7042%" height="15" fill="rgb(213,28,5)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1039.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="65.4930%" y="1013" width="0.7042%" height="15" fill="rgb(215,77,49)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1023.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.70%)</title><rect x="65.4930%" y="997" width="0.7042%" height="15" fill="rgb(248,100,22)" fg:x="93" fg:w="1"/><text x="65.7430%" y="1007.50"></text></g><g><title>do_futex (1 samples, 0.70%)</title><rect x="65.4930%" y="981" width="0.7042%" height="15" fill="rgb(208,67,9)" fg:x="93" fg:w="1"/><text x="65.7430%" y="991.50"></text></g><g><title>futex_wait (1 samples, 0.70%)</title><rect x="65.4930%" y="965" width="0.7042%" height="15" fill="rgb(219,133,21)" fg:x="93" fg:w="1"/><text x="65.7430%" y="975.50"></text></g><g><title>futex_wait_queue_me (1 samples, 0.70%)</title><rect x="65.4930%" y="949" width="0.7042%" height="15" fill="rgb(246,46,29)" fg:x="93" fg:w="1"/><text x="65.7430%" y="959.50"></text></g><g><title>schedule (1 samples, 0.70%)</title><rect x="65.4930%" y="933" width="0.7042%" height="15" fill="rgb(246,185,52)" fg:x="93" fg:w="1"/><text x="65.7430%" y="943.50"></text></g><g><title>__schedule (1 samples, 0.70%)</title><rect x="65.4930%" y="917" width="0.7042%" height="15" fill="rgb(252,136,11)" fg:x="93" fg:w="1"/><text x="65.7430%" y="927.50"></text></g><g><title>pick_next_task (1 samples, 0.70%)</title><rect x="65.4930%" y="901" width="0.7042%" height="15" fill="rgb(219,138,53)" fg:x="93" fg:w="1"/><text x="65.7430%" y="911.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.70%)</title><rect x="65.4930%" y="885" width="0.7042%" height="15" fill="rgb(211,51,23)" fg:x="93" fg:w="1"/><text x="65.7430%" y="895.50"></text></g><g><title>newidle_balance (1 samples, 0.70%)</title><rect x="65.4930%" y="869" width="0.7042%" height="15" fill="rgb(247,221,28)" fg:x="93" fg:w="1"/><text x="65.7430%" y="879.50"></text></g><g><title>update_blocked_averages (1 samples, 0.70%)</title><rect x="65.4930%" y="853" width="0.7042%" height="15" fill="rgb(251,222,45)" fg:x="93" fg:w="1"/><text x="65.7430%" y="863.50"></text></g><g><title>__update_blocked_fair (1 samples, 0.70%)</title><rect x="65.4930%" y="837" width="0.7042%" height="15" fill="rgb(217,162,53)" fg:x="93" fg:w="1"/><text x="65.7430%" y="847.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.70%)</title><rect x="65.4930%" y="821" width="0.7042%" height="15" fill="rgb(229,93,14)" fg:x="93" fg:w="1"/><text x="65.7430%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::park::Inner::park_condvar (12 samples, 8.45%)</title><rect x="66.1972%" y="805" width="8.4507%" height="15" fill="rgb(209,67,49)" fg:x="94" fg:w="12"/><text x="66.4472%" y="815.50">tokio::runti..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (12 samples, 8.45%)</title><rect x="66.1972%" y="789" width="8.4507%" height="15" fill="rgb(213,87,29)" fg:x="94" fg:w="12"/><text x="66.4472%" y="799.50">tokio::loom:..</text></g><g><title>parking_lot::condvar::Condvar::wait (12 samples, 8.45%)</title><rect x="66.1972%" y="773" width="8.4507%" height="15" fill="rgb(205,151,52)" fg:x="94" fg:w="12"/><text x="66.4472%" y="783.50">parking_lot:..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (12 samples, 8.45%)</title><rect x="66.1972%" y="757" width="8.4507%" height="15" fill="rgb(253,215,39)" fg:x="94" fg:w="12"/><text x="66.4472%" y="767.50">parking_lot:..</text></g><g><title>parking_lot_core::parking_lot::park (12 samples, 8.45%)</title><rect x="66.1972%" y="741" width="8.4507%" height="15" fill="rgb(221,220,41)" fg:x="94" fg:w="12"/><text x="66.4472%" y="751.50">parking_lot_..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (12 samples, 8.45%)</title><rect x="66.1972%" y="725" width="8.4507%" height="15" fill="rgb(218,133,21)" fg:x="94" fg:w="12"/><text x="66.4472%" y="735.50">parking_lot_..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (12 samples, 8.45%)</title><rect x="66.1972%" y="709" width="8.4507%" height="15" fill="rgb(221,193,43)" fg:x="94" fg:w="12"/><text x="66.4472%" y="719.50">parking_lot_..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (12 samples, 8.45%)</title><rect x="66.1972%" y="693" width="8.4507%" height="15" fill="rgb(240,128,52)" fg:x="94" fg:w="12"/><text x="66.4472%" y="703.50">&lt;parking_lot..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (12 samples, 8.45%)</title><rect x="66.1972%" y="677" width="8.4507%" height="15" fill="rgb(253,114,12)" fg:x="94" fg:w="12"/><text x="66.4472%" y="687.50">parking_lot_..</text></g><g><title>syscall (12 samples, 8.45%)</title><rect x="66.1972%" y="661" width="8.4507%" height="15" fill="rgb(215,223,47)" fg:x="94" fg:w="12"/><text x="66.4472%" y="671.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 8.45%)</title><rect x="66.1972%" y="645" width="8.4507%" height="15" fill="rgb(248,225,23)" fg:x="94" fg:w="12"/><text x="66.4472%" y="655.50">entry_SYSCAL..</text></g><g><title>do_syscall_64 (12 samples, 8.45%)</title><rect x="66.1972%" y="629" width="8.4507%" height="15" fill="rgb(250,108,0)" fg:x="94" fg:w="12"/><text x="66.4472%" y="639.50">do_syscall_64</text></g><g><title>__x64_sys_futex (12 samples, 8.45%)</title><rect x="66.1972%" y="613" width="8.4507%" height="15" fill="rgb(228,208,7)" fg:x="94" fg:w="12"/><text x="66.4472%" y="623.50">__x64_sys_fu..</text></g><g><title>do_futex (12 samples, 8.45%)</title><rect x="66.1972%" y="597" width="8.4507%" height="15" fill="rgb(244,45,10)" fg:x="94" fg:w="12"/><text x="66.4472%" y="607.50">do_futex</text></g><g><title>futex_wait (12 samples, 8.45%)</title><rect x="66.1972%" y="581" width="8.4507%" height="15" fill="rgb(207,125,25)" fg:x="94" fg:w="12"/><text x="66.4472%" y="591.50">futex_wait</text></g><g><title>futex_wait_queue_me (12 samples, 8.45%)</title><rect x="66.1972%" y="565" width="8.4507%" height="15" fill="rgb(210,195,18)" fg:x="94" fg:w="12"/><text x="66.4472%" y="575.50">futex_wait_q..</text></g><g><title>schedule (12 samples, 8.45%)</title><rect x="66.1972%" y="549" width="8.4507%" height="15" fill="rgb(249,80,12)" fg:x="94" fg:w="12"/><text x="66.4472%" y="559.50">schedule</text></g><g><title>__schedule (12 samples, 8.45%)</title><rect x="66.1972%" y="533" width="8.4507%" height="15" fill="rgb(221,65,9)" fg:x="94" fg:w="12"/><text x="66.4472%" y="543.50">__schedule</text></g><g><title>finish_task_switch.isra.0 (12 samples, 8.45%)</title><rect x="66.1972%" y="517" width="8.4507%" height="15" fill="rgb(235,49,36)" fg:x="94" fg:w="12"/><text x="66.4472%" y="527.50">finish_task_..</text></g><g><title>__perf_event_task_sched_in (11 samples, 7.75%)</title><rect x="66.9014%" y="501" width="7.7465%" height="15" fill="rgb(225,32,20)" fg:x="95" fg:w="11"/><text x="67.1514%" y="511.50">__perf_even..</text></g><g><title>x86_pmu_enable (11 samples, 7.75%)</title><rect x="66.9014%" y="485" width="7.7465%" height="15" fill="rgb(215,141,46)" fg:x="95" fg:w="11"/><text x="67.1514%" y="495.50">x86_pmu_ena..</text></g><g><title>intel_pmu_enable_all (10 samples, 7.04%)</title><rect x="67.6056%" y="469" width="7.0423%" height="15" fill="rgb(250,160,47)" fg:x="96" fg:w="10"/><text x="67.8556%" y="479.50">intel_pmu..</text></g><g><title>native_write_msr (10 samples, 7.04%)</title><rect x="67.6056%" y="453" width="7.0423%" height="15" fill="rgb(216,222,40)" fg:x="96" fg:w="10"/><text x="67.8556%" y="463.50">native_wr..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (18 samples, 12.68%)</title><rect x="66.1972%" y="869" width="12.6761%" height="15" fill="rgb(234,217,39)" fg:x="94" fg:w="18"/><text x="66.4472%" y="879.50">tokio::runtime::thr..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (18 samples, 12.68%)</title><rect x="66.1972%" y="853" width="12.6761%" height="15" fill="rgb(207,178,40)" fg:x="94" fg:w="18"/><text x="66.4472%" y="863.50">tokio::runtime::thr..</text></g><g><title>&lt;tokio::runtime::thread_pool::park::Parker as tokio::park::Park&gt;::park (18 samples, 12.68%)</title><rect x="66.1972%" y="837" width="12.6761%" height="15" fill="rgb(221,136,13)" fg:x="94" fg:w="18"/><text x="66.4472%" y="847.50">&lt;tokio::runtime::th..</text></g><g><title>tokio::runtime::thread_pool::park::Inner::park (18 samples, 12.68%)</title><rect x="66.1972%" y="821" width="12.6761%" height="15" fill="rgb(249,199,10)" fg:x="94" fg:w="18"/><text x="66.4472%" y="831.50">tokio::runtime::thr..</text></g><g><title>tokio::runtime::thread_pool::park::Inner::park_driver (6 samples, 4.23%)</title><rect x="74.6479%" y="805" width="4.2254%" height="15" fill="rgb(249,222,13)" fg:x="106" fg:w="6"/><text x="74.8979%" y="815.50">tokio..</text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (6 samples, 4.23%)</title><rect x="74.6479%" y="789" width="4.2254%" height="15" fill="rgb(244,185,38)" fg:x="106" fg:w="6"/><text x="74.8979%" y="799.50">&lt;toki..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (6 samples, 4.23%)</title><rect x="74.6479%" y="773" width="4.2254%" height="15" fill="rgb(236,202,9)" fg:x="106" fg:w="6"/><text x="74.8979%" y="783.50">&lt;toki..</text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (6 samples, 4.23%)</title><rect x="74.6479%" y="757" width="4.2254%" height="15" fill="rgb(250,229,37)" fg:x="106" fg:w="6"/><text x="74.8979%" y="767.50">&lt;toki..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (6 samples, 4.23%)</title><rect x="74.6479%" y="741" width="4.2254%" height="15" fill="rgb(206,174,23)" fg:x="106" fg:w="6"/><text x="74.8979%" y="751.50">tokio..</text></g><g><title>tokio::io::driver::Driver::turn (6 samples, 4.23%)</title><rect x="74.6479%" y="725" width="4.2254%" height="15" fill="rgb(211,33,43)" fg:x="106" fg:w="6"/><text x="74.8979%" y="735.50">tokio..</text></g><g><title>mio::poll::Poll::poll (6 samples, 4.23%)</title><rect x="74.6479%" y="709" width="4.2254%" height="15" fill="rgb(245,58,50)" fg:x="106" fg:w="6"/><text x="74.8979%" y="719.50">mio::..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (6 samples, 4.23%)</title><rect x="74.6479%" y="693" width="4.2254%" height="15" fill="rgb(244,68,36)" fg:x="106" fg:w="6"/><text x="74.8979%" y="703.50">mio::..</text></g><g><title>epoll_wait (6 samples, 4.23%)</title><rect x="74.6479%" y="677" width="4.2254%" height="15" fill="rgb(232,229,15)" fg:x="106" fg:w="6"/><text x="74.8979%" y="687.50">epoll..</text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 4.23%)</title><rect x="74.6479%" y="661" width="4.2254%" height="15" fill="rgb(254,30,23)" fg:x="106" fg:w="6"/><text x="74.8979%" y="671.50">entry..</text></g><g><title>do_syscall_64 (6 samples, 4.23%)</title><rect x="74.6479%" y="645" width="4.2254%" height="15" fill="rgb(235,160,14)" fg:x="106" fg:w="6"/><text x="74.8979%" y="655.50">do_sy..</text></g><g><title>__x64_sys_epoll_wait (6 samples, 4.23%)</title><rect x="74.6479%" y="629" width="4.2254%" height="15" fill="rgb(212,155,44)" fg:x="106" fg:w="6"/><text x="74.8979%" y="639.50">__x64..</text></g><g><title>do_epoll_wait (6 samples, 4.23%)</title><rect x="74.6479%" y="613" width="4.2254%" height="15" fill="rgb(226,2,50)" fg:x="106" fg:w="6"/><text x="74.8979%" y="623.50">do_ep..</text></g><g><title>ep_poll (6 samples, 4.23%)</title><rect x="74.6479%" y="597" width="4.2254%" height="15" fill="rgb(234,177,6)" fg:x="106" fg:w="6"/><text x="74.8979%" y="607.50">ep_po..</text></g><g><title>schedule_hrtimeout_range (6 samples, 4.23%)</title><rect x="74.6479%" y="581" width="4.2254%" height="15" fill="rgb(217,24,9)" fg:x="106" fg:w="6"/><text x="74.8979%" y="591.50">sched..</text></g><g><title>schedule_hrtimeout_range_clock (6 samples, 4.23%)</title><rect x="74.6479%" y="565" width="4.2254%" height="15" fill="rgb(220,13,46)" fg:x="106" fg:w="6"/><text x="74.8979%" y="575.50">sched..</text></g><g><title>schedule (6 samples, 4.23%)</title><rect x="74.6479%" y="549" width="4.2254%" height="15" fill="rgb(239,221,27)" fg:x="106" fg:w="6"/><text x="74.8979%" y="559.50">sched..</text></g><g><title>__schedule (6 samples, 4.23%)</title><rect x="74.6479%" y="533" width="4.2254%" height="15" fill="rgb(222,198,25)" fg:x="106" fg:w="6"/><text x="74.8979%" y="543.50">__sch..</text></g><g><title>finish_task_switch.isra.0 (6 samples, 4.23%)</title><rect x="74.6479%" y="517" width="4.2254%" height="15" fill="rgb(211,99,13)" fg:x="106" fg:w="6"/><text x="74.8979%" y="527.50">finis..</text></g><g><title>__perf_event_task_sched_in (6 samples, 4.23%)</title><rect x="74.6479%" y="501" width="4.2254%" height="15" fill="rgb(232,111,31)" fg:x="106" fg:w="6"/><text x="74.8979%" y="511.50">__per..</text></g><g><title>x86_pmu_enable (6 samples, 4.23%)</title><rect x="74.6479%" y="485" width="4.2254%" height="15" fill="rgb(245,82,37)" fg:x="106" fg:w="6"/><text x="74.8979%" y="495.50">x86_p..</text></g><g><title>intel_pmu_enable_all (6 samples, 4.23%)</title><rect x="74.6479%" y="469" width="4.2254%" height="15" fill="rgb(227,149,46)" fg:x="106" fg:w="6"/><text x="74.8979%" y="479.50">intel..</text></g><g><title>native_write_msr (6 samples, 4.23%)</title><rect x="74.6479%" y="453" width="4.2254%" height="15" fill="rgb(218,36,50)" fg:x="106" fg:w="6"/><text x="74.8979%" y="463.50">nativ..</text></g><g><title>openssl::ssl::SslContextBuilder::set_cipher_list (1 samples, 0.70%)</title><rect x="78.8732%" y="437" width="0.7042%" height="15" fill="rgb(226,80,48)" fg:x="112" fg:w="1"/><text x="79.1232%" y="447.50"></text></g><g><title>SSL_CTX_set_cipher_list (1 samples, 0.70%)</title><rect x="78.8732%" y="421" width="0.7042%" height="15" fill="rgb(238,224,15)" fg:x="112" fg:w="1"/><text x="79.1232%" y="431.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.70%)</title><rect x="78.8732%" y="405" width="0.7042%" height="15" fill="rgb(241,136,10)" fg:x="112" fg:w="1"/><text x="79.1232%" y="415.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.70%)</title><rect x="78.8732%" y="389" width="0.7042%" height="15" fill="rgb(208,32,45)" fg:x="112" fg:w="1"/><text x="79.1232%" y="399.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.70%)</title><rect x="84.5070%" y="85" width="0.7042%" height="15" fill="rgb(207,135,9)" fg:x="120" fg:w="1"/><text x="84.7570%" y="95.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="84.5070%" y="69" width="0.7042%" height="15" fill="rgb(206,86,44)" fg:x="120" fg:w="1"/><text x="84.7570%" y="79.50"></text></g><g><title>EVP_KEYMGMT_do_all_provided (9 samples, 6.34%)</title><rect x="79.5775%" y="229" width="6.3380%" height="15" fill="rgb(245,177,15)" fg:x="113" fg:w="9"/><text x="79.8275%" y="239.50">EVP_KEYM..</text></g><g><title>[libcrypto.so.3] (9 samples, 6.34%)</title><rect x="79.5775%" y="213" width="6.3380%" height="15" fill="rgb(206,64,50)" fg:x="113" fg:w="9"/><text x="79.8275%" y="223.50">[libcryp..</text></g><g><title>[libcrypto.so.3] (9 samples, 6.34%)</title><rect x="79.5775%" y="197" width="6.3380%" height="15" fill="rgb(234,36,40)" fg:x="113" fg:w="9"/><text x="79.8275%" y="207.50">[libcryp..</text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="181" width="1.4085%" height="15" fill="rgb(213,64,8)" fg:x="120" fg:w="2"/><text x="84.7570%" y="191.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="165" width="1.4085%" height="15" fill="rgb(210,75,36)" fg:x="120" fg:w="2"/><text x="84.7570%" y="175.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="149" width="1.4085%" height="15" fill="rgb(229,88,21)" fg:x="120" fg:w="2"/><text x="84.7570%" y="159.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="133" width="1.4085%" height="15" fill="rgb(252,204,47)" fg:x="120" fg:w="2"/><text x="84.7570%" y="143.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="117" width="1.4085%" height="15" fill="rgb(208,77,27)" fg:x="120" fg:w="2"/><text x="84.7570%" y="127.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="84.5070%" y="101" width="1.4085%" height="15" fill="rgb(221,76,26)" fg:x="120" fg:w="2"/><text x="84.7570%" y="111.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="85.2113%" y="85" width="0.7042%" height="15" fill="rgb(225,139,18)" fg:x="121" fg:w="1"/><text x="85.4613%" y="95.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.70%)</title><rect x="85.2113%" y="69" width="0.7042%" height="15" fill="rgb(230,137,11)" fg:x="121" fg:w="1"/><text x="85.4613%" y="79.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="85.2113%" y="53" width="0.7042%" height="15" fill="rgb(212,28,1)" fg:x="121" fg:w="1"/><text x="85.4613%" y="63.50"></text></g><g><title>OSSL_DECODER_do_all_provided (2 samples, 1.41%)</title><rect x="85.9155%" y="213" width="1.4085%" height="15" fill="rgb(248,164,17)" fg:x="122" fg:w="2"/><text x="86.1655%" y="223.50"></text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="85.9155%" y="197" width="1.4085%" height="15" fill="rgb(222,171,42)" fg:x="122" fg:w="2"/><text x="86.1655%" y="207.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.70%)</title><rect x="87.3239%" y="181" width="0.7042%" height="15" fill="rgb(243,84,45)" fg:x="124" fg:w="1"/><text x="87.5739%" y="191.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.70%)</title><rect x="87.3239%" y="165" width="0.7042%" height="15" fill="rgb(252,49,23)" fg:x="124" fg:w="1"/><text x="87.5739%" y="175.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.70%)</title><rect x="87.3239%" y="149" width="0.7042%" height="15" fill="rgb(215,19,7)" fg:x="124" fg:w="1"/><text x="87.5739%" y="159.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2 samples, 1.41%)</title><rect x="88.0282%" y="165" width="1.4085%" height="15" fill="rgb(238,81,41)" fg:x="125" fg:w="2"/><text x="88.2782%" y="175.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 1.41%)</title><rect x="88.0282%" y="149" width="1.4085%" height="15" fill="rgb(210,199,37)" fg:x="125" fg:w="2"/><text x="88.2782%" y="159.50"></text></g><g><title>__pthread_rwlock_rdlock_full64 (2 samples, 1.41%)</title><rect x="88.0282%" y="133" width="1.4085%" height="15" fill="rgb(244,192,49)" fg:x="125" fg:w="2"/><text x="88.2782%" y="143.50"></text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.70%)</title><rect x="89.4366%" y="165" width="0.7042%" height="15" fill="rgb(226,211,11)" fg:x="127" fg:w="1"/><text x="89.6866%" y="175.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.70%)</title><rect x="89.4366%" y="149" width="0.7042%" height="15" fill="rgb(236,162,54)" fg:x="127" fg:w="1"/><text x="89.6866%" y="159.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.70%)</title><rect x="89.4366%" y="133" width="0.7042%" height="15" fill="rgb(220,229,9)" fg:x="127" fg:w="1"/><text x="89.6866%" y="143.50"></text></g><g><title>OSSL_DECODER_CTX_add_extra (9 samples, 6.34%)</title><rect x="85.9155%" y="229" width="6.3380%" height="15" fill="rgb(250,87,22)" fg:x="122" fg:w="9"/><text x="86.1655%" y="239.50">OSSL_DEC..</text></g><g><title>OSSL_DECODER_is_a (7 samples, 4.93%)</title><rect x="87.3239%" y="213" width="4.9296%" height="15" fill="rgb(239,43,17)" fg:x="124" fg:w="7"/><text x="87.5739%" y="223.50">OSSL_D..</text></g><g><title>[libcrypto.so.3] (7 samples, 4.93%)</title><rect x="87.3239%" y="197" width="4.9296%" height="15" fill="rgb(231,177,25)" fg:x="124" fg:w="7"/><text x="87.5739%" y="207.50">[libcr..</text></g><g><title>[libcrypto.so.3] (6 samples, 4.23%)</title><rect x="88.0282%" y="181" width="4.2254%" height="15" fill="rgb(219,179,1)" fg:x="125" fg:w="6"/><text x="88.2782%" y="191.50">[libc..</text></g><g><title>OPENSSL_LH_retrieve (3 samples, 2.11%)</title><rect x="90.1408%" y="165" width="2.1127%" height="15" fill="rgb(238,219,53)" fg:x="128" fg:w="3"/><text x="90.3908%" y="175.50">O..</text></g><g><title>[libcrypto.so.3] (3 samples, 2.11%)</title><rect x="90.1408%" y="149" width="2.1127%" height="15" fill="rgb(232,167,36)" fg:x="128" fg:w="3"/><text x="90.3908%" y="159.50">[..</text></g><g><title>CRYPTO_THREAD_unlock (1 samples, 0.70%)</title><rect x="92.9577%" y="101" width="0.7042%" height="15" fill="rgb(244,19,51)" fg:x="132" fg:w="1"/><text x="93.2077%" y="111.50"></text></g><g><title>___pthread_rwlock_unlock (1 samples, 0.70%)</title><rect x="92.9577%" y="85" width="0.7042%" height="15" fill="rgb(224,6,22)" fg:x="132" fg:w="1"/><text x="93.2077%" y="95.50"></text></g><g><title>__pthread_rwlock_rdunlock (1 samples, 0.70%)</title><rect x="92.9577%" y="69" width="0.7042%" height="15" fill="rgb(224,145,5)" fg:x="132" fg:w="1"/><text x="93.2077%" y="79.50"></text></g><g><title>OPENSSL_sk_pop_free (1 samples, 0.70%)</title><rect x="93.6620%" y="85" width="0.7042%" height="15" fill="rgb(234,130,49)" fg:x="133" fg:w="1"/><text x="93.9120%" y="95.50"></text></g><g><title>__GI___libc_free (1 samples, 0.70%)</title><rect x="93.6620%" y="69" width="0.7042%" height="15" fill="rgb(254,6,2)" fg:x="133" fg:w="1"/><text x="93.9120%" y="79.50"></text></g><g><title>_int_free (1 samples, 0.70%)</title><rect x="93.6620%" y="53" width="0.7042%" height="15" fill="rgb(208,96,46)" fg:x="133" fg:w="1"/><text x="93.9120%" y="63.50"></text></g><g><title>tcache_put (1 samples, 0.70%)</title><rect x="93.6620%" y="37" width="0.7042%" height="15" fill="rgb(239,3,39)" fg:x="133" fg:w="1"/><text x="93.9120%" y="47.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (23 samples, 16.20%)</title><rect x="79.5775%" y="245" width="16.1972%" height="15" fill="rgb(233,210,1)" fg:x="113" fg:w="23"/><text x="79.8275%" y="255.50">OSSL_DECODER_CTX_new_for_..</text></g><g><title>OSSL_DECODER_do_all_provided (5 samples, 3.52%)</title><rect x="92.2535%" y="229" width="3.5211%" height="15" fill="rgb(244,137,37)" fg:x="131" fg:w="5"/><text x="92.5035%" y="239.50">OSS..</text></g><g><title>[libcrypto.so.3] (5 samples, 3.52%)</title><rect x="92.2535%" y="213" width="3.5211%" height="15" fill="rgb(240,136,2)" fg:x="131" fg:w="5"/><text x="92.5035%" y="223.50">[li..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="197" width="2.8169%" height="15" fill="rgb(239,18,37)" fg:x="132" fg:w="4"/><text x="93.2077%" y="207.50">[l..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="181" width="2.8169%" height="15" fill="rgb(218,185,22)" fg:x="132" fg:w="4"/><text x="93.2077%" y="191.50">[l..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="165" width="2.8169%" height="15" fill="rgb(225,218,4)" fg:x="132" fg:w="4"/><text x="93.2077%" y="175.50">[l..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="149" width="2.8169%" height="15" fill="rgb(230,182,32)" fg:x="132" fg:w="4"/><text x="93.2077%" y="159.50">[l..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="133" width="2.8169%" height="15" fill="rgb(242,56,43)" fg:x="132" fg:w="4"/><text x="93.2077%" y="143.50">[l..</text></g><g><title>[libcrypto.so.3] (4 samples, 2.82%)</title><rect x="92.9577%" y="117" width="2.8169%" height="15" fill="rgb(233,99,24)" fg:x="132" fg:w="4"/><text x="93.2077%" y="127.50">[l..</text></g><g><title>[libcrypto.so.3] (3 samples, 2.11%)</title><rect x="93.6620%" y="101" width="2.1127%" height="15" fill="rgb(234,209,42)" fg:x="133" fg:w="3"/><text x="93.9120%" y="111.50">[..</text></g><g><title>[libcrypto.so.3] (2 samples, 1.41%)</title><rect x="94.3662%" y="85" width="1.4085%" height="15" fill="rgb(227,7,12)" fg:x="134" fg:w="2"/><text x="94.6162%" y="95.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.0704%" y="69" width="0.7042%" height="15" fill="rgb(245,203,43)" fg:x="135" fg:w="1"/><text x="95.3204%" y="79.50"></text></g><g><title>OPENSSL_LH_retrieve (1 samples, 0.70%)</title><rect x="95.0704%" y="53" width="0.7042%" height="15" fill="rgb(238,205,33)" fg:x="135" fg:w="1"/><text x="95.3204%" y="63.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.0704%" y="37" width="0.7042%" height="15" fill="rgb(231,56,7)" fg:x="135" fg:w="1"/><text x="95.3204%" y="47.50"></text></g><g><title>OSSL_DECODER_from_data (1 samples, 0.70%)</title><rect x="95.7746%" y="245" width="0.7042%" height="15" fill="rgb(244,186,29)" fg:x="136" fg:w="1"/><text x="96.0246%" y="255.50"></text></g><g><title>OSSL_DECODER_from_bio (1 samples, 0.70%)</title><rect x="95.7746%" y="229" width="0.7042%" height="15" fill="rgb(234,111,31)" fg:x="136" fg:w="1"/><text x="96.0246%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="213" width="0.7042%" height="15" fill="rgb(241,149,10)" fg:x="136" fg:w="1"/><text x="96.0246%" y="223.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="197" width="0.7042%" height="15" fill="rgb(249,206,44)" fg:x="136" fg:w="1"/><text x="96.0246%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="181" width="0.7042%" height="15" fill="rgb(251,153,30)" fg:x="136" fg:w="1"/><text x="96.0246%" y="191.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="165" width="0.7042%" height="15" fill="rgb(239,152,38)" fg:x="136" fg:w="1"/><text x="96.0246%" y="175.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="149" width="0.7042%" height="15" fill="rgb(249,139,47)" fg:x="136" fg:w="1"/><text x="96.0246%" y="159.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="133" width="0.7042%" height="15" fill="rgb(244,64,35)" fg:x="136" fg:w="1"/><text x="96.0246%" y="143.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="117" width="0.7042%" height="15" fill="rgb(216,46,15)" fg:x="136" fg:w="1"/><text x="96.0246%" y="127.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (1 samples, 0.70%)</title><rect x="95.7746%" y="101" width="0.7042%" height="15" fill="rgb(250,74,19)" fg:x="136" fg:w="1"/><text x="96.0246%" y="111.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="85" width="0.7042%" height="15" fill="rgb(249,42,33)" fg:x="136" fg:w="1"/><text x="96.0246%" y="95.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.70%)</title><rect x="95.7746%" y="69" width="0.7042%" height="15" fill="rgb(242,149,17)" fg:x="136" fg:w="1"/><text x="96.0246%" y="79.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="95.7746%" y="53" width="0.7042%" height="15" fill="rgb(244,29,21)" fg:x="136" fg:w="1"/><text x="96.0246%" y="63.50"></text></g><g><title>openssl::ssl::SslContextBuilder::set_default_verify_paths (25 samples, 17.61%)</title><rect x="79.5775%" y="437" width="17.6056%" height="15" fill="rgb(220,130,37)" fg:x="113" fg:w="25"/><text x="79.8275%" y="447.50">openssl::ssl::SslContextBui..</text></g><g><title>X509_STORE_set_default_paths_ex (25 samples, 17.61%)</title><rect x="79.5775%" y="421" width="17.6056%" height="15" fill="rgb(211,67,2)" fg:x="113" fg:w="25"/><text x="79.8275%" y="431.50">X509_STORE_set_default_path..</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="405" width="17.6056%" height="15" fill="rgb(235,68,52)" fg:x="113" fg:w="25"/><text x="79.8275%" y="415.50">[libcrypto.so.3]</text></g><g><title>X509_load_cert_crl_file_ex (25 samples, 17.61%)</title><rect x="79.5775%" y="389" width="17.6056%" height="15" fill="rgb(246,142,3)" fg:x="113" fg:w="25"/><text x="79.8275%" y="399.50">X509_load_cert_crl_file_ex</text></g><g><title>PEM_X509_INFO_read_bio_ex (25 samples, 17.61%)</title><rect x="79.5775%" y="373" width="17.6056%" height="15" fill="rgb(241,25,7)" fg:x="113" fg:w="25"/><text x="79.8275%" y="383.50">PEM_X509_INFO_read_bio_ex</text></g><g><title>ASN1_item_d2i_ex (25 samples, 17.61%)</title><rect x="79.5775%" y="357" width="17.6056%" height="15" fill="rgb(242,119,39)" fg:x="113" fg:w="25"/><text x="79.8275%" y="367.50">ASN1_item_d2i_ex</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="341" width="17.6056%" height="15" fill="rgb(241,98,45)" fg:x="113" fg:w="25"/><text x="79.8275%" y="351.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="325" width="17.6056%" height="15" fill="rgb(254,28,30)" fg:x="113" fg:w="25"/><text x="79.8275%" y="335.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="309" width="17.6056%" height="15" fill="rgb(241,142,54)" fg:x="113" fg:w="25"/><text x="79.8275%" y="319.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="293" width="17.6056%" height="15" fill="rgb(222,85,15)" fg:x="113" fg:w="25"/><text x="79.8275%" y="303.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="277" width="17.6056%" height="15" fill="rgb(210,85,47)" fg:x="113" fg:w="25"/><text x="79.8275%" y="287.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (25 samples, 17.61%)</title><rect x="79.5775%" y="261" width="17.6056%" height="15" fill="rgb(224,206,25)" fg:x="113" fg:w="25"/><text x="79.8275%" y="271.50">[libcrypto.so.3]</text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="96.4789%" y="245" width="0.7042%" height="15" fill="rgb(243,201,19)" fg:x="137" fg:w="1"/><text x="96.7289%" y="255.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="96.4789%" y="229" width="0.7042%" height="15" fill="rgb(236,59,4)" fg:x="137" fg:w="1"/><text x="96.7289%" y="239.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="96.4789%" y="213" width="0.7042%" height="15" fill="rgb(254,179,45)" fg:x="137" fg:w="1"/><text x="96.7289%" y="223.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 0.70%)</title><rect x="96.4789%" y="197" width="0.7042%" height="15" fill="rgb(226,14,10)" fg:x="137" fg:w="1"/><text x="96.7289%" y="207.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="96.4789%" y="181" width="0.7042%" height="15" fill="rgb(244,27,41)" fg:x="137" fg:w="1"/><text x="96.7289%" y="191.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="96.4789%" y="165" width="0.7042%" height="15" fill="rgb(235,35,32)" fg:x="137" fg:w="1"/><text x="96.7289%" y="175.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 54.23%)</title><rect x="43.6620%" y="1317" width="54.2254%" height="15" fill="rgb(218,68,31)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1327.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (77 samples, 54.23%)</title><rect x="43.6620%" y="1301" width="54.2254%" height="15" fill="rgb(207,120,37)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1311.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (77 samples, 54.23%)</title><rect x="43.6620%" y="1285" width="54.2254%" height="15" fill="rgb(227,98,0)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1295.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (77 samples, 54.23%)</title><rect x="43.6620%" y="1269" width="54.2254%" height="15" fill="rgb(207,7,3)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1279.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (77 samples, 54.23%)</title><rect x="43.6620%" y="1253" width="54.2254%" height="15" fill="rgb(206,98,19)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1263.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (77 samples, 54.23%)</title><rect x="43.6620%" y="1237" width="54.2254%" height="15" fill="rgb(217,5,26)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1247.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (77 samples, 54.23%)</title><rect x="43.6620%" y="1221" width="54.2254%" height="15" fill="rgb(235,190,38)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1231.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (77 samples, 54.23%)</title><rect x="43.6620%" y="1205" width="54.2254%" height="15" fill="rgb(247,86,24)" fg:x="62" fg:w="77"/><text x="43.9120%" y="1215.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (45 samples, 31.69%)</title><rect x="66.1972%" y="1189" width="31.6901%" height="15" fill="rgb(205,101,16)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1199.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (45 samples, 31.69%)</title><rect x="66.1972%" y="1173" width="31.6901%" height="15" fill="rgb(246,168,33)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1183.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (45 samples, 31.69%)</title><rect x="66.1972%" y="1157" width="31.6901%" height="15" fill="rgb(231,114,1)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1167.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (45 samples, 31.69%)</title><rect x="66.1972%" y="1141" width="31.6901%" height="15" fill="rgb(207,184,53)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1151.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (45 samples, 31.69%)</title><rect x="66.1972%" y="1125" width="31.6901%" height="15" fill="rgb(224,95,51)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1135.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_i..</text></g><g><title>tokio::runtime::task::harness::poll_future (45 samples, 31.69%)</title><rect x="66.1972%" y="1109" width="31.6901%" height="15" fill="rgb(212,188,45)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1119.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (45 samples, 31.69%)</title><rect x="66.1972%" y="1093" width="31.6901%" height="15" fill="rgb(223,154,38)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1103.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (45 samples, 31.69%)</title><rect x="66.1972%" y="1077" width="31.6901%" height="15" fill="rgb(251,22,52)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1087.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (45 samples, 31.69%)</title><rect x="66.1972%" y="1061" width="31.6901%" height="15" fill="rgb(229,209,22)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1071.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 31.69%)</title><rect x="66.1972%" y="1045" width="31.6901%" height="15" fill="rgb(234,138,34)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1055.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (45 samples, 31.69%)</title><rect x="66.1972%" y="1029" width="31.6901%" height="15" fill="rgb(212,95,11)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1039.50">tokio::runtime::task::harness::poll_future::{{closu..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (45 samples, 31.69%)</title><rect x="66.1972%" y="1013" width="31.6901%" height="15" fill="rgb(240,179,47)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1023.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (45 samples, 31.69%)</title><rect x="66.1972%" y="997" width="31.6901%" height="15" fill="rgb(240,163,11)" fg:x="94" fg:w="45"/><text x="66.4472%" y="1007.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (45 samples, 31.69%)</title><rect x="66.1972%" y="981" width="31.6901%" height="15" fill="rgb(236,37,12)" fg:x="94" fg:w="45"/><text x="66.4472%" y="991.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{c..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 31.69%)</title><rect x="66.1972%" y="965" width="31.6901%" height="15" fill="rgb(232,164,16)" fg:x="94" fg:w="45"/><text x="66.4472%" y="975.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (45 samples, 31.69%)</title><rect x="66.1972%" y="949" width="31.6901%" height="15" fill="rgb(244,205,15)" fg:x="94" fg:w="45"/><text x="66.4472%" y="959.50">tokio::runtime::thread_pool::worker::Launch::launch..</text></g><g><title>tokio::runtime::thread_pool::worker::run (45 samples, 31.69%)</title><rect x="66.1972%" y="933" width="31.6901%" height="15" fill="rgb(223,117,47)" fg:x="94" fg:w="45"/><text x="66.4472%" y="943.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (45 samples, 31.69%)</title><rect x="66.1972%" y="917" width="31.6901%" height="15" fill="rgb(244,107,35)" fg:x="94" fg:w="45"/><text x="66.4472%" y="927.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (45 samples, 31.69%)</title><rect x="66.1972%" y="901" width="31.6901%" height="15" fill="rgb(205,140,8)" fg:x="94" fg:w="45"/><text x="66.4472%" y="911.50">tokio::runtime::thread_pool::worker::run::{{closure..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (45 samples, 31.69%)</title><rect x="66.1972%" y="885" width="31.6901%" height="15" fill="rgb(228,84,46)" fg:x="94" fg:w="45"/><text x="66.4472%" y="895.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (27 samples, 19.01%)</title><rect x="78.8732%" y="869" width="19.0141%" height="15" fill="rgb(254,188,9)" fg:x="112" fg:w="27"/><text x="79.1232%" y="879.50">tokio::runtime::thread_pool::w..</text></g><g><title>tokio::coop::budget (27 samples, 19.01%)</title><rect x="78.8732%" y="853" width="19.0141%" height="15" fill="rgb(206,112,54)" fg:x="112" fg:w="27"/><text x="79.1232%" y="863.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (27 samples, 19.01%)</title><rect x="78.8732%" y="837" width="19.0141%" height="15" fill="rgb(216,84,49)" fg:x="112" fg:w="27"/><text x="79.1232%" y="847.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 19.01%)</title><rect x="78.8732%" y="821" width="19.0141%" height="15" fill="rgb(214,194,35)" fg:x="112" fg:w="27"/><text x="79.1232%" y="831.50">std::thread::local::LocalKey&lt;T..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 19.01%)</title><rect x="78.8732%" y="805" width="19.0141%" height="15" fill="rgb(249,28,3)" fg:x="112" fg:w="27"/><text x="79.1232%" y="815.50">std::thread::local::LocalKey&lt;T..</text></g><g><title>tokio::coop::with_budget::{{closure}} (27 samples, 19.01%)</title><rect x="78.8732%" y="789" width="19.0141%" height="15" fill="rgb(222,56,52)" fg:x="112" fg:w="27"/><text x="79.1232%" y="799.50">tokio::coop::with_budget::{{cl..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (27 samples, 19.01%)</title><rect x="78.8732%" y="773" width="19.0141%" height="15" fill="rgb(245,217,50)" fg:x="112" fg:w="27"/><text x="79.1232%" y="783.50">tokio::runtime::thread_pool::w..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (27 samples, 19.01%)</title><rect x="78.8732%" y="757" width="19.0141%" height="15" fill="rgb(213,201,24)" fg:x="112" fg:w="27"/><text x="79.1232%" y="767.50">tokio::runtime::task::LocalNot..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (27 samples, 19.01%)</title><rect x="78.8732%" y="741" width="19.0141%" height="15" fill="rgb(248,116,28)" fg:x="112" fg:w="27"/><text x="79.1232%" y="751.50">tokio::runtime::task::raw::Raw..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27 samples, 19.01%)</title><rect x="78.8732%" y="725" width="19.0141%" height="15" fill="rgb(219,72,43)" fg:x="112" fg:w="27"/><text x="79.1232%" y="735.50">tokio::runtime::task::harness:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (27 samples, 19.01%)</title><rect x="78.8732%" y="709" width="19.0141%" height="15" fill="rgb(209,138,14)" fg:x="112" fg:w="27"/><text x="79.1232%" y="719.50">tokio::runtime::task::harness:..</text></g><g><title>tokio::runtime::task::harness::poll_future (27 samples, 19.01%)</title><rect x="78.8732%" y="693" width="19.0141%" height="15" fill="rgb(222,18,33)" fg:x="112" fg:w="27"/><text x="79.1232%" y="703.50">tokio::runtime::task::harness:..</text></g><g><title>std::panic::catch_unwind (27 samples, 19.01%)</title><rect x="78.8732%" y="677" width="19.0141%" height="15" fill="rgb(213,199,7)" fg:x="112" fg:w="27"/><text x="79.1232%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (27 samples, 19.01%)</title><rect x="78.8732%" y="661" width="19.0141%" height="15" fill="rgb(250,110,10)" fg:x="112" fg:w="27"/><text x="79.1232%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (27 samples, 19.01%)</title><rect x="78.8732%" y="645" width="19.0141%" height="15" fill="rgb(248,123,6)" fg:x="112" fg:w="27"/><text x="79.1232%" y="655.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 19.01%)</title><rect x="78.8732%" y="629" width="19.0141%" height="15" fill="rgb(206,91,31)" fg:x="112" fg:w="27"/><text x="79.1232%" y="639.50">&lt;core::panic::unwind_safe::Ass..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (27 samples, 19.01%)</title><rect x="78.8732%" y="613" width="19.0141%" height="15" fill="rgb(211,154,13)" fg:x="112" fg:w="27"/><text x="79.1232%" y="623.50">tokio::runtime::task::harness:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (27 samples, 19.01%)</title><rect x="78.8732%" y="597" width="19.0141%" height="15" fill="rgb(225,148,7)" fg:x="112" fg:w="27"/><text x="79.1232%" y="607.50">tokio::runtime::task::core::Co..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (27 samples, 19.01%)</title><rect x="78.8732%" y="581" width="19.0141%" height="15" fill="rgb(220,160,43)" fg:x="112" fg:w="27"/><text x="79.1232%" y="591.50">tokio::loom::std::unsafe_cell:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (27 samples, 19.01%)</title><rect x="78.8732%" y="565" width="19.0141%" height="15" fill="rgb(213,52,39)" fg:x="112" fg:w="27"/><text x="79.1232%" y="575.50">tokio::runtime::task::core::Co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 19.01%)</title><rect x="78.8732%" y="549" width="19.0141%" height="15" fill="rgb(243,137,7)" fg:x="112" fg:w="27"/><text x="79.1232%" y="559.50">&lt;core::future::from_generator:..</text></g><g><title>async_request_tasks::send_request::{{closure}} (27 samples, 19.01%)</title><rect x="78.8732%" y="533" width="19.0141%" height="15" fill="rgb(230,79,13)" fg:x="112" fg:w="27"/><text x="79.1232%" y="543.50">async_request_tasks::send_requ..</text></g><g><title>reqwest::async_impl::client::ClientBuilder::build (27 samples, 19.01%)</title><rect x="78.8732%" y="517" width="19.0141%" height="15" fill="rgb(247,105,23)" fg:x="112" fg:w="27"/><text x="79.1232%" y="527.50">reqwest::async_impl::client::C..</text></g><g><title>reqwest::connect::Connector::new_default_tls (27 samples, 19.01%)</title><rect x="78.8732%" y="501" width="19.0141%" height="15" fill="rgb(223,179,41)" fg:x="112" fg:w="27"/><text x="79.1232%" y="511.50">reqwest::connect::Connector::n..</text></g><g><title>native_tls::TlsConnectorBuilder::build (27 samples, 19.01%)</title><rect x="78.8732%" y="485" width="19.0141%" height="15" fill="rgb(218,9,34)" fg:x="112" fg:w="27"/><text x="79.1232%" y="495.50">native_tls::TlsConnectorBuilde..</text></g><g><title>native_tls::imp::TlsConnector::new (27 samples, 19.01%)</title><rect x="78.8732%" y="469" width="19.0141%" height="15" fill="rgb(222,106,8)" fg:x="112" fg:w="27"/><text x="79.1232%" y="479.50">native_tls::imp::TlsConnector:..</text></g><g><title>openssl::ssl::connector::SslConnector::builder (27 samples, 19.01%)</title><rect x="78.8732%" y="453" width="19.0141%" height="15" fill="rgb(211,220,0)" fg:x="112" fg:w="27"/><text x="79.1232%" y="463.50">openssl::ssl::connector::SslCo..</text></g><g><title>openssl::ssl::connector::ctx (1 samples, 0.70%)</title><rect x="97.1831%" y="437" width="0.7042%" height="15" fill="rgb(229,52,16)" fg:x="138" fg:w="1"/><text x="97.4331%" y="447.50"></text></g><g><title>openssl::ssl::SslContextBuilder::new (1 samples, 0.70%)</title><rect x="97.1831%" y="421" width="0.7042%" height="15" fill="rgb(212,155,18)" fg:x="138" fg:w="1"/><text x="97.4331%" y="431.50"></text></g><g><title>SSL_CTX_new_ex (1 samples, 0.70%)</title><rect x="97.1831%" y="405" width="0.7042%" height="15" fill="rgb(242,21,14)" fg:x="138" fg:w="1"/><text x="97.4331%" y="415.50"></text></g><g><title>[libssl.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="389" width="0.7042%" height="15" fill="rgb(222,19,48)" fg:x="138" fg:w="1"/><text x="97.4331%" y="399.50"></text></g><g><title>EVP_CIPHER_fetch (1 samples, 0.70%)</title><rect x="97.1831%" y="373" width="0.7042%" height="15" fill="rgb(232,45,27)" fg:x="138" fg:w="1"/><text x="97.4331%" y="383.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="357" width="0.7042%" height="15" fill="rgb(249,103,42)" fg:x="138" fg:w="1"/><text x="97.4331%" y="367.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="341" width="0.7042%" height="15" fill="rgb(246,81,33)" fg:x="138" fg:w="1"/><text x="97.4331%" y="351.50"></text></g><g><title>OBJ_NAME_do_all (1 samples, 0.70%)</title><rect x="97.1831%" y="325" width="0.7042%" height="15" fill="rgb(252,33,42)" fg:x="138" fg:w="1"/><text x="97.4331%" y="335.50"></text></g><g><title>OPENSSL_LH_doall_arg (1 samples, 0.70%)</title><rect x="97.1831%" y="309" width="0.7042%" height="15" fill="rgb(209,212,41)" fg:x="138" fg:w="1"/><text x="97.4331%" y="319.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="293" width="0.7042%" height="15" fill="rgb(207,154,6)" fg:x="138" fg:w="1"/><text x="97.4331%" y="303.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="277" width="0.7042%" height="15" fill="rgb(223,64,47)" fg:x="138" fg:w="1"/><text x="97.4331%" y="287.50"></text></g><g><title>CRYPTO_strndup (1 samples, 0.70%)</title><rect x="97.1831%" y="261" width="0.7042%" height="15" fill="rgb(211,161,38)" fg:x="138" fg:w="1"/><text x="97.4331%" y="271.50"></text></g><g><title>[libcrypto.so.3] (1 samples, 0.70%)</title><rect x="97.1831%" y="245" width="0.7042%" height="15" fill="rgb(219,138,40)" fg:x="138" fg:w="1"/><text x="97.4331%" y="255.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 55.63%)</title><rect x="43.6620%" y="1381" width="55.6338%" height="15" fill="rgb(241,228,46)" fg:x="62" fg:w="79"/><text x="43.9120%" y="1391.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 55.63%)</title><rect x="43.6620%" y="1365" width="55.6338%" height="15" fill="rgb(223,209,38)" fg:x="62" fg:w="79"/><text x="43.9120%" y="1375.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 55.63%)</title><rect x="43.6620%" y="1349" width="55.6338%" height="15" fill="rgb(236,164,45)" fg:x="62" fg:w="79"/><text x="43.9120%" y="1359.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (79 samples, 55.63%)</title><rect x="43.6620%" y="1333" width="55.6338%" height="15" fill="rgb(231,15,5)" fg:x="62" fg:w="79"/><text x="43.9120%" y="1343.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 1.41%)</title><rect x="97.8873%" y="1317" width="1.4085%" height="15" fill="rgb(252,35,15)" fg:x="139" fg:w="2"/><text x="98.1373%" y="1327.50"></text></g><g><title>__pthread_getattr_np (2 samples, 1.41%)</title><rect x="97.8873%" y="1301" width="1.4085%" height="15" fill="rgb(248,181,18)" fg:x="139" fg:w="2"/><text x="98.1373%" y="1311.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.70%)</title><rect x="98.5915%" y="1285" width="0.7042%" height="15" fill="rgb(233,39,42)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1295.50"></text></g><g><title>tcache_init (1 samples, 0.70%)</title><rect x="98.5915%" y="1269" width="0.7042%" height="15" fill="rgb(238,110,33)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1279.50"></text></g><g><title>tcache_init (1 samples, 0.70%)</title><rect x="98.5915%" y="1253" width="0.7042%" height="15" fill="rgb(233,195,10)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1263.50"></text></g><g><title>arena_get2 (1 samples, 0.70%)</title><rect x="98.5915%" y="1237" width="0.7042%" height="15" fill="rgb(254,105,3)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1247.50"></text></g><g><title>arena_get2 (1 samples, 0.70%)</title><rect x="98.5915%" y="1221" width="0.7042%" height="15" fill="rgb(221,225,9)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1231.50"></text></g><g><title>_int_new_arena (1 samples, 0.70%)</title><rect x="98.5915%" y="1205" width="0.7042%" height="15" fill="rgb(224,227,45)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1215.50"></text></g><g><title>new_heap (1 samples, 0.70%)</title><rect x="98.5915%" y="1189" width="0.7042%" height="15" fill="rgb(229,198,43)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1199.50"></text></g><g><title>alloc_new_heap (1 samples, 0.70%)</title><rect x="98.5915%" y="1173" width="0.7042%" height="15" fill="rgb(206,209,35)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1183.50"></text></g><g><title>__GI___munmap (1 samples, 0.70%)</title><rect x="98.5915%" y="1157" width="0.7042%" height="15" fill="rgb(245,195,53)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="98.5915%" y="1141" width="0.7042%" height="15" fill="rgb(240,92,26)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1151.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="98.5915%" y="1125" width="0.7042%" height="15" fill="rgb(207,40,23)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1135.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.70%)</title><rect x="98.5915%" y="1109" width="0.7042%" height="15" fill="rgb(223,111,35)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1119.50"></text></g><g><title>__vm_munmap (1 samples, 0.70%)</title><rect x="98.5915%" y="1093" width="0.7042%" height="15" fill="rgb(229,147,28)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1103.50"></text></g><g><title>down_write_killable (1 samples, 0.70%)</title><rect x="98.5915%" y="1077" width="0.7042%" height="15" fill="rgb(211,29,28)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1087.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.70%)</title><rect x="98.5915%" y="1061" width="0.7042%" height="15" fill="rgb(228,72,33)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1071.50"></text></g><g><title>rwsem_optimistic_spin (1 samples, 0.70%)</title><rect x="98.5915%" y="1045" width="0.7042%" height="15" fill="rgb(205,214,31)" fg:x="140" fg:w="1"/><text x="98.8415%" y="1055.50"></text></g><g><title>all (142 samples, 100%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="142"/><text x="0.2500%" y="1471.50"></text></g><g><title>tokio-runtime-w (83 samples, 58.45%)</title><rect x="41.5493%" y="1445" width="58.4507%" height="15" fill="rgb(253,21,26)" fg:x="59" fg:w="83"/><text x="41.7993%" y="1455.50">tokio-runtime-w</text></g><g><title>__clone3 (80 samples, 56.34%)</title><rect x="43.6620%" y="1429" width="56.3380%" height="15" fill="rgb(245,139,43)" fg:x="62" fg:w="80"/><text x="43.9120%" y="1439.50">__clone3</text></g><g><title>start_thread (80 samples, 56.34%)</title><rect x="43.6620%" y="1413" width="56.3380%" height="15" fill="rgb(252,170,7)" fg:x="62" fg:w="80"/><text x="43.9120%" y="1423.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (80 samples, 56.34%)</title><rect x="43.6620%" y="1397" width="56.3380%" height="15" fill="rgb(231,118,14)" fg:x="62" fg:w="80"/><text x="43.9120%" y="1407.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.70%)</title><rect x="99.2958%" y="1381" width="0.7042%" height="15" fill="rgb(238,83,0)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1391.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.70%)</title><rect x="99.2958%" y="1365" width="0.7042%" height="15" fill="rgb(221,39,39)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1375.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.70%)</title><rect x="99.2958%" y="1349" width="0.7042%" height="15" fill="rgb(222,119,46)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1359.50"></text></g><g><title>__GI___munmap (1 samples, 0.70%)</title><rect x="99.2958%" y="1333" width="0.7042%" height="15" fill="rgb(222,165,49)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1343.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.70%)</title><rect x="99.2958%" y="1317" width="0.7042%" height="15" fill="rgb(219,113,52)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1327.50"></text></g><g><title>do_syscall_64 (1 samples, 0.70%)</title><rect x="99.2958%" y="1301" width="0.7042%" height="15" fill="rgb(214,7,15)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1311.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.70%)</title><rect x="99.2958%" y="1285" width="0.7042%" height="15" fill="rgb(235,32,4)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1295.50"></text></g><g><title>__vm_munmap (1 samples, 0.70%)</title><rect x="99.2958%" y="1269" width="0.7042%" height="15" fill="rgb(238,90,54)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1279.50"></text></g><g><title>down_write_killable (1 samples, 0.70%)</title><rect x="99.2958%" y="1253" width="0.7042%" height="15" fill="rgb(213,208,19)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1263.50"></text></g><g><title>rwsem_down_write_slowpath (1 samples, 0.70%)</title><rect x="99.2958%" y="1237" width="0.7042%" height="15" fill="rgb(233,156,4)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1247.50"></text></g><g><title>schedule (1 samples, 0.70%)</title><rect x="99.2958%" y="1221" width="0.7042%" height="15" fill="rgb(207,194,5)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1231.50"></text></g><g><title>__schedule (1 samples, 0.70%)</title><rect x="99.2958%" y="1205" width="0.7042%" height="15" fill="rgb(206,111,30)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1215.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.70%)</title><rect x="99.2958%" y="1189" width="0.7042%" height="15" fill="rgb(243,70,54)" fg:x="141" fg:w="1"/><text x="99.5458%" y="1199.50"></text></g></svg></svg>
